

name: Rails Demo Deploy

on:
  pull_request:

env:
  PR_NUMBER: ${{ github.event.number || github.run_id }}
  COMMIT_REF: ${{ github.event.pull_request.head.sha || github.event.inputs.COMMIT_REF }}
  IMAGE_REPO: "primer/view_components_storybook/pr-${{ github.event.number }}"

# This allows one deploy workflow to interrupt another
concurrency:
  group: 'preview-env @ ${{ github.head_ref || github.run_id }} for ${{ github.event.number || github.event.inputs.PR_NUMBER }}'
  cancel-in-progress: true

jobs:
  build:
    if: ${{ github.repository == 'primer/view_components' }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 3.0.x
    - uses: actions/cache@v2
      with:
        path: demo/gemfiles/vendor/bundle
        key: gems-build-kuby-main-ruby-3.0.x-${{ hashFiles('demo/gemfiles/kuby.gemfile.lock') }}
    - name: Docker login
      env:
        AZURE_ACR_PASSWORD: ${{ secrets.AZURE_ACR_PASSWORD }}
      run: echo $AZURE_ACR_PASSWORD | docker login primer.azurecr.io --username GitHubActions --password-stdin
    - name: Bundle
      run: |
        gem install bundler -v '~> 2.3'
        bundle install --jobs 4 --retry 3 --gemfile demo/gemfiles/kuby.gemfile --path vendor/bundle
    - name: 'Set env vars'
      run: |
        # Image tag is unique to each workflow run so that it always triggers a new deployment
        echo "DOCKER_IMAGE=primer.azurecr.io/${{ env.IMAGE_REPO }}:${{ env.COMMIT_REF }}-${{ github.run_number }}-${{ github.run_attempt }}" >> $GITHUB_ENV
    - name: Build
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
      run: |
        bin/kuby -e production build --only app -- -t $DOCKER_IMAGE
        bin/kuby -e production build --only assets -- -t $DOCKER_IMAGE
    - name: Push
      run: bin/kuby -e production push

  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - uses: actions/checkout@master
    - name: Setup Ruby
      uses: actions/setup-ruby@v1
      with:
        ruby-version: 3.0.x
    - uses: actions/cache@v2
      with:
        path: demo/gemfiles/vendor/bundle
        key: gems-build-kuby-main-ruby-3.0.x-${{ hashFiles('demo/gemfiles/kuby.gemfile.lock') }}
    - name: Bundle
      run: |
        gem install bundler -v '~> 2.3'
        bundle install --jobs 4 --retry 3 --gemfile demo/gemfiles/kuby.gemfile --path vendor/bundle
    - name: Deploy
      env:
        RAILS_MASTER_KEY: ${{ secrets.RAILS_MASTER_KEY }}
        AZURE_ACR_PASSWORD: ${{ secrets.AZURE_ACR_PASSWORD }}
        AZURE_SPN_CLIENT_SECRET: ${{ secrets.AZURE_SPN_CLIENT_SECRET }}
      run: bin/kuby -e production deploy
