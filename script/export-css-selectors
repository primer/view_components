#!/usr/bin/env node

const postcss = require('postcss');
const glob = require('glob');
const fs = require('fs');

console.log('Exporting CSS selectors...');

const export_selectors = (folder) => {
  const folder_glob = folder + '/**/*.css'

  glob(folder_glob, (_err, files) => {
    files.forEach(file => {
      console.log(`Processing ${file}`)
      const css = fs.readFileSync(file, 'utf8')
      const root = postcss.parse(css)
      const componentNameRegex = new RegExp(`${folder.replace('/','\\/')}\\/(.*).css`)
      const componentName = componentNameRegex.exec(file)[1]
      const selectors = []

      root.walkRules(rule => {
        if (rule.parent.type === 'atrule' && rule.parent.name === 'keyframes') {
          return
        }

        rule.selectors.forEach(ruleSelector => {
          selectors.push(ruleSelector)
        })
      })

      fs.writeFileSync(`${file}.json`, JSON.stringify({ 'name': componentName, 'selectors': [...new Set(selectors)] }, null, 2))
    })
  })
}

export_selectors('app/components/primer')
export_selectors('app/lib/primer/css')
