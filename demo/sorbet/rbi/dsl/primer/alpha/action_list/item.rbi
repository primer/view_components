# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Primer::Alpha::ActionList::Item`.
# Please instead update this file by running `bin/tapioca dsl Primer::Alpha::ActionList::Item`.


class Primer::Alpha::ActionList::Item
  sig do
    params(
      label: String,
      item_id: String,
      label_classes: String,
      label_arguments: T::Hash,
      content_arguments: T::Hash,
      form_arguments: T::Hash,
      parent: Primer::Alpha::ActionList::Item,
      truncate_label: T.any(T::Boolean, Symbol),
      href: String,
      role: String,
      size: Symbol,
      scheme: Symbol,
      disabled: T::Boolean,
      description_scheme: Symbol,
      active: T::Boolean,
      on_click: String,
      id: String,
      system_arguments: T::Hash
    ).void
  end
  def initialize(label:, item_id:, label_classes:, label_arguments:, content_arguments:, form_arguments:, parent:, truncate_label:, href:, role:, size:, scheme:, disabled:, description_scheme:, active:, on_click:, id:, **system_arguments); end

  sig { returns(T.untyped) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.untyped) }
  def leading_visual; end

  sig { returns(T::Boolean) }
  def leading_visual?; end

  sig { returns(T.untyped) }
  def private_content; end

  sig { returns(T::Boolean) }
  def private_content?; end

  sig { returns(T.untyped) }
  def private_leading_action_icon; end

  sig { returns(T::Boolean) }
  def private_leading_action_icon?; end

  sig { returns(T.untyped) }
  def private_trailing_action_icon; end

  sig { returns(T::Boolean) }
  def private_trailing_action_icon?; end

  sig { returns(T.untyped) }
  def tooltip; end

  sig { returns(T::Boolean) }
  def tooltip?; end

  sig { returns(T.untyped) }
  def trailing_action; end

  sig { returns(T::Boolean) }
  def trailing_action?; end

  sig { returns(T.untyped) }
  def trailing_visual; end

  sig { returns(T::Boolean) }
  def trailing_visual?; end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_description(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_leading_visual(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_content(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_leading_action_icon(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_trailing_action_icon(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_tooltip(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_trailing_action(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_trailing_visual(*args, **_arg1, &block); end
end
