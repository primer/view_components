# typed: true

# DO NOT EDIT MANUALLY
# This is an autogenerated file for dynamic methods in `Primer::Beta::NavList::Item`.
# Please instead update this file by running `bin/tapioca dsl Primer::Beta::NavList::Item`.


class Primer::Beta::NavList::Item
  sig do
    params(
      selected_item_id: Symbol,
      selected_by_ids: T::Array[],
      sub_item: T::Boolean,
      expanded: T::Boolean,
      system_arguments: T::Hash
    ).void
  end
  def initialize(selected_item_id:, selected_by_ids:, sub_item:, expanded:, **system_arguments); end

  sig { returns(T.untyped) }
  def description; end

  sig { returns(T::Boolean) }
  def description?; end

  sig { returns(T.untyped) }
  def items; end

  sig { returns(T::Boolean) }
  def items?; end

  sig { returns(T.untyped) }
  def leading_visual; end

  sig { returns(T::Boolean) }
  def leading_visual?; end

  sig { returns(T.untyped) }
  def private_content; end

  sig { returns(T::Boolean) }
  def private_content?; end

  sig { returns(T.untyped) }
  def private_leading_action_icon; end

  sig { returns(T::Boolean) }
  def private_leading_action_icon?; end

  sig { returns(T.untyped) }
  def private_trailing_action_icon; end

  sig { returns(T::Boolean) }
  def private_trailing_action_icon?; end

  sig { returns(T.untyped) }
  def tooltip; end

  sig { returns(T::Boolean) }
  def tooltip?; end

  sig { returns(T.untyped) }
  def trailing_action; end

  sig { returns(T::Boolean) }
  def trailing_action?; end

  sig { returns(T.untyped) }
  def trailing_visual; end

  sig { returns(T::Boolean) }
  def trailing_visual?; end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_description(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_item(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_leading_visual(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_content(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_leading_action_icon(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_private_trailing_action_icon(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_tooltip(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_trailing_action(*args, **_arg1, &block); end

  sig { params(args: T.nilable(T::Array[T.untyped]), _arg1: T.untyped, block: T.untyped).returns(T.untyped) }
  def with_trailing_visual(*args, **_arg1, &block); end
end
