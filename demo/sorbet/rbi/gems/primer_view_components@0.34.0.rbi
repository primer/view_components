# typed: false

# DO NOT EDIT MANUALLY
# This is an autogenerated file for types exported from the `primer_view_components` gem.
# Please instead update this file by running `bin/tapioca gem primer_view_components`.


# source://yard/0.9.36/lib/yard.rb#61
::RUBY18 = T.let(T.unsafe(nil), FalseClass)

# source://yard/0.9.36/lib/yard.rb#62
::RUBY19 = T.let(T.unsafe(nil), TrueClass)

# source://actionpack/7.1.3.2/lib/abstract_controller/deprecator.rb#3
module AbstractController
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/abstract_controller/asset_paths.rb#4
module AbstractController::AssetPaths
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/base.rb#35
class AbstractController::Base
  include ::ActiveSupport::Configurable
  extend ::ActiveSupport::Configurable::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#4
module AbstractController::Caching
  include ::AbstractController::Caching::ConfigMethods
  extend ::ActiveSupport::Concern
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#46
module AbstractController::Caching::ClassMethods
  # source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#47
  def view_cache_dependency(&dependency); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#12
module AbstractController::Caching::ConfigMethods
  # source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#13
  def cache_store; end

  # source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#17
  def cache_store=(store); end

  private

  # source://actionpack/7.1.3.2/lib/abstract_controller/caching.rb#22
  def cache_configured?; end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/caching/fragments.rb#20
module AbstractController::Caching::Fragments
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/caching/fragments.rb#37
module AbstractController::Caching::Fragments::ClassMethods
  # source://actionpack/7.1.3.2/lib/abstract_controller/caching/fragments.rb#59
  def fragment_cache_key(value = T.unsafe(nil), &key); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#24
module AbstractController::Callbacks
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#74
module AbstractController::Callbacks::ClassMethods
  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#119
  def _insert_callbacks(callbacks, block = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#99
  def _normalize_callback_option(options, from, to); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#94
  def _normalize_callback_options(options); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def after_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def append_after_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def append_around_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def append_before_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def around_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#229
  def before_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#235
  def prepend_after_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#235
  def prepend_around_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#235
  def prepend_before_action(*names, &blk); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#243
  def skip_after_action(*names); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#243
  def skip_around_action(*names); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/callbacks.rb#243
  def skip_before_action(*names); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#6
module AbstractController::Collector
  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def atom(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def bmp(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def css(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def csv(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def gif(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def gzip(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def html(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def ics(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def jpeg(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def js(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def json(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def m4a(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def mp3(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def mp4(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def mpeg(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def multipart_form(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def ogg(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def otf(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def pdf(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def png(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def rss(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def svg(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def text(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def tiff(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def ttf(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def turbo_stream(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def url_encoded_form(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def vcf(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def vtt(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def webm(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def webp(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def woff(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def woff2(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def xml(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def yaml(*args, **_arg1, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#10
  def zip(*args, **_arg1, &block); end

  private

  # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#26
  def method_missing(symbol, *args, **_arg2, &block); end

  class << self
    # source://actionpack/7.1.3.2/lib/abstract_controller/collector.rb#7
    def generate_method_for_mime(mime); end
  end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#7
module AbstractController::Helpers
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  extend ::ActiveSupport::Concern
  extend ::AbstractController::Helpers::Resolution
end

# source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#80
module AbstractController::Helpers::ClassMethods
  include ::AbstractController::Helpers::Resolution

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#92
  def _helpers=(_arg0); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#231
  def _helpers_for_modification; end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#222
  def clear_helpers; end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#211
  def helper(*args, &block); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#140
  def helper_method(*methods); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#84
  def inherited(klass); end

  private

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#250
  def default_helper_module!; end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#239
  def define_helpers_module(klass, helpers = T.unsafe(nil)); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#48
module AbstractController::Helpers::Resolution
  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#64
  def all_helpers_from_path(path); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#73
  def helper_modules_from_paths(paths); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/helpers.rb#49
  def modules_for_helpers(modules_or_helper_prefixes); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/logger.rb#6
module AbstractController::Logger
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/rendering.rb#17
module AbstractController::Rendering
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/translation.rb#6
module AbstractController::Translation
  # source://actionpack/7.1.3.2/lib/abstract_controller/translation.rb#36
  def l(object, **options); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/translation.rb#36
  def localize(object, **options); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/translation.rb#15
  def t(key, **options); end

  # source://actionpack/7.1.3.2/lib/abstract_controller/translation.rb#15
  def translate(key, **options); end
end

# source://actionpack/7.1.3.2/lib/abstract_controller/url_for.rb#12
module AbstractController::UrlFor
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/abstract_controller/url_for.rb#21
module AbstractController::UrlFor::ClassMethods
  # source://actionpack/7.1.3.2/lib/abstract_controller/url_for.rb#22
  def _routes; end

  # source://actionpack/7.1.3.2/lib/abstract_controller/url_for.rb#26
  def action_methods; end
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/base.rb#100
class ActionCable::Channel::Base
  include ::ActiveSupport::Callbacks
  include ::ActionCable::Channel::Callbacks
  include ::ActionCable::Channel::PeriodicTimers
  include ::ActionCable::Channel::Streams
  include ::ActionCable::Channel::Naming
  include ::ActionCable::Channel::Broadcasting
  include ::ActiveSupport::Rescuable
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActionCable::Channel::Callbacks::ClassMethods
  extend ::ActionCable::Channel::PeriodicTimers::ClassMethods
  extend ::ActionCable::Channel::Naming::ClassMethods
  extend ::ActionCable::Channel::Broadcasting::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/broadcasting.rb#7
module ActionCable::Channel::Broadcasting
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/broadcasting.rb#14
module ActionCable::Channel::Broadcasting::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/channel/broadcasting.rb#16
  def broadcast_to(model, message); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/broadcasting.rb#26
  def broadcasting_for(model); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/broadcasting.rb#30
  def serialize_broadcasting(object); end
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#35
module ActionCable::Channel::Callbacks
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#44
module ActionCable::Channel::Callbacks::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#58
  def after_subscribe(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#67
  def after_unsubscribe(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#45
  def before_subscribe(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#63
  def before_unsubscribe(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#58
  def on_subscribe(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/callbacks.rb#67
  def on_unsubscribe(*methods, &block); end
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/naming.rb#5
module ActionCable::Channel::Naming
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/naming.rb#8
module ActionCable::Channel::Naming::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/channel/naming.rb#16
  def channel_name; end
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/periodic_timers.rb#5
module ActionCable::Channel::PeriodicTimers
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/periodic_timers.rb#15
module ActionCable::Channel::PeriodicTimers::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/channel/periodic_timers.rb#31
  def periodically(callback_or_method_name = T.unsafe(nil), every:, &block); end
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/streams.rb#67
module ActionCable::Channel::Streams
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#186
class ActionCable::Channel::TestCase < ::ActiveSupport::TestCase
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionCable::TestHelper
  include ::ActionCable::Channel::TestCase::Behavior
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionCable::Channel::TestCase::Behavior::ClassMethods
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#187
module ActionCable::Channel::TestCase::Behavior
  include ::ActionCable::TestHelper
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#203
module ActionCable::Channel::TestCase::Behavior::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#215
  def channel_class; end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#223
  def determine_default_channel(name); end

  # source://actioncable/7.1.3.2/lib/action_cable/channel/test_case.rb#204
  def tests(channel); end
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#20
module ActionCable::Connection::Assertions
  # source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#25
  def assert_reject_connection(&block); end
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/authorization.rb#5
module ActionCable::Connection::Authorization
  # source://actioncable/7.1.3.2/lib/action_cable/connection/authorization.rb#9
  def reject_unauthorized_connection; end
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/authorization.rb#6
class ActionCable::Connection::Authorization::UnauthorizedError < ::StandardError; end

# source://actioncable/7.1.3.2/lib/action_cable/connection/base.rb#48
class ActionCable::Connection::Base
  include ::ActionCable::Connection::Identification
  include ::ActionCable::Connection::InternalChannel
  include ::ActionCable::Connection::Authorization
  include ::ActiveSupport::Callbacks
  include ::ActionCable::Connection::Callbacks
  include ::ActiveSupport::Rescuable
  extend ::ActionCable::Connection::Identification::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActionCable::Connection::Callbacks::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/callbacks.rb#32
module ActionCable::Connection::Callbacks
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/callbacks.rb#40
module ActionCable::Connection::Callbacks::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/connection/callbacks.rb#45
  def after_command(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/connection/callbacks.rb#49
  def around_command(*methods, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/connection/callbacks.rb#41
  def before_command(*methods, &block); end
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/identification.rb#7
module ActionCable::Connection::Identification
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/identification.rb#14
module ActionCable::Connection::Identification::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/connection/identification.rb#20
  def identified_by(*identifiers); end
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/internal_channel.rb#8
module ActionCable::Connection::InternalChannel
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#131
class ActionCable::Connection::TestCase < ::ActiveSupport::TestCase
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionCable::Connection::Assertions
  include ::ActionCable::Connection::TestCase::Behavior
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionCable::Connection::TestCase::Behavior::ClassMethods
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#132
module ActionCable::Connection::TestCase::Behavior
  include ::ActionCable::Connection::Assertions
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#148
module ActionCable::Connection::TestCase::Behavior::ClassMethods
  # source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#160
  def connection_class; end

  # source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#168
  def determine_default_connection(name); end

  # source://actioncable/7.1.3.2/lib/action_cable/connection/test_case.rb#149
  def tests(connection); end
end

# source://actioncable/7.1.3.2/lib/action_cable/helpers/action_cable_helper.rb#5
module ActionCable::Helpers::ActionCableHelper
  # source://actioncable/7.1.3.2/lib/action_cable/helpers/action_cable_helper.rb#34
  def action_cable_meta_tag; end
end

# source://actioncable/7.1.3.2/lib/action_cable/remote_connections.rb#45
class ActionCable::RemoteConnections::RemoteConnection
  include ::ActionCable::Connection::InternalChannel
  include ::ActionCable::Connection::Identification
  extend ::ActionCable::Connection::Identification::ClassMethods
end

# source://actioncable/7.1.3.2/lib/action_cable/server/worker.rb#10
class ActionCable::Server::Worker
  include ::ActiveSupport::Callbacks
  include ::ActionCable::Server::Worker::ActiveRecordConnectionManagement
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://actioncable/7.1.3.2/lib/action_cable/server/worker/active_record_connection_management.rb#6
module ActionCable::Server::Worker::ActiveRecordConnectionManagement
  extend ::ActiveSupport::Concern
end

# source://actioncable/7.1.3.2/lib/action_cable/test_case.rb#6
class ActionCable::TestCase < ::ActiveSupport::TestCase
  include ::ActionCable::TestHelper
end

# source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#5
module ActionCable::TestHelper
  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#16
  def after_teardown; end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#116
  def assert_broadcast_on(stream, data, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#49
  def assert_broadcasts(stream, number, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#81
  def assert_no_broadcasts(stream, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#6
  def before_setup; end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#147
  def broadcasts(*_arg0, **_arg1, &_arg2); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#97
  def capture_broadcasts(stream, &block); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#147
  def clear_messages(*_arg0, **_arg1, &_arg2); end

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#143
  def pubsub_adapter; end

  private

  # source://actioncable/7.1.3.2/lib/action_cable/test_helper.rb#150
  def new_broadcasts_from(current_messages, stream, assertion, &block); end
end

# source://actionpack/7.1.3.2/lib/action_controller/deprecator.rb#3
module ActionController
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/action_controller/api.rb#91
class ActionController::API < ::ActionController::Metal
  include ::ActionView::ViewPaths
  include ::AbstractController::Rendering
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor
  include ::AbstractController::Logger
  include ::ActiveSupport::Benchmarkable
  include ::ActionController::Redirecting
  include ::ActionController::ApiRendering
  include ::ActionController::Rendering
  include ::ActionController::Renderers
  include ::ActionController::Renderers::All
  include ::ActionController::Head
  include ::ActionController::ConditionalGet
  include ::ActionController::BasicImplicitRender
  include ::ActionController::StrongParameters
  include ::ActionController::DataStreaming
  include ::ActionController::DefaultHeaders
  include ::ActionController::Logging
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::ActiveSupport::Rescuable
  include ::ActionController::Rescue
  include ::ActionController::Instrumentation
  include ::ActionController::ParamsWrapper
  include ::Turbo::RequestIdTracking
  extend ::ActionView::ViewPaths::ClassMethods
  extend ::AbstractController::UrlFor::ClassMethods
  extend ::ActionController::Rendering::ClassMethods
  extend ::ActionController::Renderers::ClassMethods
  extend ::ActionController::ConditionalGet::ClassMethods
  extend ::ActionController::DefaultHeaders::ClassMethods
  extend ::ActionController::Logging::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
  extend ::ActionController::Instrumentation::ClassMethods
  extend ::ActionController::ParamsWrapper::ClassMethods
end

# source://actionpack/7.1.3.2/lib/action_controller/api/api_rendering.rb#4
module ActionController::ApiRendering
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/base.rb#169
class ActionController::Base < ::ActionController::Metal
  include ::ActionView::ViewPaths
  include ::AbstractController::Rendering
  include ::AbstractController::Translation
  include ::AbstractController::AssetPaths
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  include ::AbstractController::Helpers
  include ::ActionController::Helpers
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::AbstractController::UrlFor
  include ::ActionController::UrlFor
  include ::AbstractController::Logger
  include ::ActiveSupport::Benchmarkable
  include ::ActionController::Redirecting
  include ::ActionView::Rendering
  include ::ActionView::Layouts
  include ::ActionController::Rendering
  include ::ActionController::Renderers
  include ::ActionController::Renderers::All
  include ::ActionController::Head
  include ::ActionController::ConditionalGet
  include ::ActionController::EtagWithTemplateDigest
  include ::ActionController::EtagWithFlash
  include ::ActionController::Caching
  include ::AbstractController::Caching::Fragments
  include ::AbstractController::Caching::ConfigMethods
  include ::AbstractController::Caching
  include ::ActionController::MimeResponds
  include ::ActionController::BasicImplicitRender
  include ::ActionController::ImplicitRender
  include ::ActionController::StrongParameters
  include ::ActionController::ParameterEncoding
  include ::ActionController::Cookies
  include ::ActionController::Flash
  include ::ActionController::FormBuilder
  include ::ActiveSupport::Callbacks
  include ::AbstractController::Callbacks
  include ::ActionController::RequestForgeryProtection
  include ::ActionController::ContentSecurityPolicy
  include ::ActionController::PermissionsPolicy
  include ::ActionController::Streaming
  include ::ActionController::DataStreaming
  include ::ActionController::HttpAuthentication::Basic::ControllerMethods
  include ::ActionController::HttpAuthentication::Digest::ControllerMethods
  include ::ActionController::HttpAuthentication::Token::ControllerMethods
  include ::ActionController::DefaultHeaders
  include ::ActionController::Logging
  include ::ActiveSupport::Rescuable
  include ::ActionController::Rescue
  include ::ActionController::Instrumentation
  include ::ActionController::ParamsWrapper
  include ::Turbo::Native::Navigation
  include ::Turbo::Frames::FrameRequest
  include ::Turbo::Streams::TurboStreamsTagBuilder
  include ::Turbo::RequestIdTracking
  extend ::ActionView::ViewPaths::ClassMethods
  extend ::AbstractController::Helpers::Resolution
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionController::Helpers::ClassMethods
  extend ::AbstractController::UrlFor::ClassMethods
  extend ::ActionView::Rendering::ClassMethods
  extend ::ActionView::Layouts::ClassMethods
  extend ::ActionController::Rendering::ClassMethods
  extend ::ActionController::Renderers::ClassMethods
  extend ::ActionController::ConditionalGet::ClassMethods
  extend ::AbstractController::Caching::Fragments::ClassMethods
  extend ::AbstractController::Caching::ClassMethods
  extend ::AbstractController::Caching::ConfigMethods
  extend ::ActionController::ParameterEncoding::ClassMethods
  extend ::ActionController::Flash::ClassMethods
  extend ::ActionController::FormBuilder::ClassMethods
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::AbstractController::Callbacks::ClassMethods
  extend ::ActionController::RequestForgeryProtection::ClassMethods
  extend ::ActionController::ContentSecurityPolicy::ClassMethods
  extend ::ActionController::PermissionsPolicy::ClassMethods
  extend ::ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  extend ::ActionController::DefaultHeaders::ClassMethods
  extend ::ActionController::Logging::ClassMethods
  extend ::ActiveSupport::Rescuable::ClassMethods
  extend ::ActionController::Instrumentation::ClassMethods
  extend ::ActionController::ParamsWrapper::ClassMethods
end

# source://actionpack/7.1.3.2/lib/action_controller/base.rb#0
module ActionController::Base::HelperMethods
  include ::Primer::FormHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ViteRails::TagHelpers
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/basic_implicit_render.rb#4
module ActionController::BasicImplicitRender
  # source://actionpack/7.1.3.2/lib/action_controller/metal/basic_implicit_render.rb#11
  def default_render; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/basic_implicit_render.rb#5
  def send_action(method, *args); end
end

# source://actionpack/7.1.3.2/lib/action_controller/caching.rb#26
module ActionController::Caching
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/conditional_get.rb#7
module ActionController::ConditionalGet
  include ::ActionController::Head
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/conditional_get.rb#16
module ActionController::ConditionalGet::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/conditional_get.rb#31
  def etag(&etagger); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/content_security_policy.rb#4
module ActionController::ContentSecurityPolicy
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/content_security_policy.rb#15
module ActionController::ContentSecurityPolicy::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/content_security_policy.rb#39
  def content_security_policy(enabled = T.unsafe(nil), **options, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/content_security_policy.rb#65
  def content_security_policy_report_only(report_only = T.unsafe(nil), **options); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/cookies.rb#4
module ActionController::Cookies
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/data_streaming.rb#11
module ActionController::DataStreaming
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/default_headers.rb#8
module ActionController::DefaultHeaders
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/default_headers.rb#11
module ActionController::DefaultHeaders::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/default_headers.rb#12
  def make_response!(request); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/etag_with_flash.rb#11
module ActionController::EtagWithFlash
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/etag_with_template_digest.rb#23
module ActionController::EtagWithTemplateDigest
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/flash.rb#4
module ActionController::Flash
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/flash.rb#14
module ActionController::Flash::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/flash.rb#45
  def action_methods; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/flash.rb#32
  def add_flash_types(*types); end
end

# source://actionpack/7.1.3.2/lib/action_controller/form_builder.rb#29
module ActionController::FormBuilder
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/form_builder.rb#36
module ActionController::FormBuilder::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/form_builder.rb#42
  def default_form_builder(builder); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/head.rb#4
module ActionController::Head
  # source://actionpack/7.1.3.2/lib/action_controller/metal/head.rb#21
  def head(status, options = T.unsafe(nil)); end

  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/head.rb#54
  def include_content?(status); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#58
module ActionController::Helpers
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#69
module ActionController::Helpers::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#78
  def helper_attr(*attrs); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#88
  def helpers; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#104
  def modules_for_helpers(args); end

  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/helpers.rb#111
  def all_application_helpers; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#69
module ActionController::HttpAuthentication::Basic::ControllerMethods
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#72
module ActionController::HttpAuthentication::Basic::ControllerMethods::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#76
  def http_basic_authenticate_with(name:, password:, realm: T.unsafe(nil), **options); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#188
module ActionController::HttpAuthentication::Digest::ControllerMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#193
  def authenticate_or_request_with_http_digest(realm = T.unsafe(nil), message = T.unsafe(nil), &password_procedure); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#199
  def authenticate_with_http_digest(realm = T.unsafe(nil), &password_procedure); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#205
  def request_http_digest_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#425
module ActionController::HttpAuthentication::Token::ControllerMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#432
  def authenticate_or_request_with_http_token(realm = T.unsafe(nil), message = T.unsafe(nil), &login_procedure); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#441
  def authenticate_with_http_token(&login_procedure); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/http_authentication.rb#447
  def request_http_token_authentication(realm = T.unsafe(nil), message = T.unsafe(nil)); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/implicit_render.rb#31
module ActionController::ImplicitRender
  include ::ActionController::BasicImplicitRender

  # source://actionpack/7.1.3.2/lib/action_controller/metal/implicit_render.rb#35
  def default_render; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/implicit_render.rb#54
  def method_for_action(action_name); end

  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/implicit_render.rb#61
  def interactive_browser_request?; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/instrumentation.rb#14
module ActionController::Instrumentation
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/instrumentation.rb#107
module ActionController::Instrumentation::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/instrumentation.rb#111
  def log_process_action(payload); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/live.rb#54
module ActionController::Live
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/logging.rb#4
module ActionController::Logging
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/logging.rb#7
module ActionController::Logging::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/logging.rb#15
  def log_at(level, **options); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal.rb#121
class ActionController::Metal < ::AbstractController::Base
  include ::ActionController::Testing::Functional

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#185
  def initialize; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def content_type(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def content_type=(arg); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#156
  def controller_name; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#224
  def dispatch(name, request, response); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#180
  def headers(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def location(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def location=(arg); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def media_type(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
  def middleware_stack; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
  def middleware_stack=(_arg0); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
  def middleware_stack?; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#194
  def params; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#198
  def params=(val); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#220
  def performed?; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def request; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def request=(_arg0); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#258
  def reset_session; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def response; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#242
  def response=(response); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#209
  def response_body=(body); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def response_code(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#176
  def session(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#249
  def set_request!(request); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#232
  def set_response!(response); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def status(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#182
  def status=(arg); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#254
  def to_a; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#205
  def url_for(string); end

  class << self
    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#289
    def action(name); end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#140
    def action_encoding_template(action); end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#130
    def controller_name; end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#305
    def dispatch(name, req, res); end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#134
    def make_response!(request); end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#284
    def middleware; end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
    def middleware_stack; end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
    def middleware_stack=(value); end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
    def middleware_stack?; end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#267
    def use(*_arg0, **_arg1, &_arg2); end

    private

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#146
    def inherited(subclass); end
  end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#6
module ActionController::MimeResponds
  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#201
  def respond_to(*mimes); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#242
class ActionController::MimeResponds::Collector
  include ::AbstractController::Collector

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#246
  def initialize(mimes, variant = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#253
  def all(*args, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#253
  def any(*args, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#271
  def any_response?; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#262
  def custom(mime_type, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#244
  def format; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#244
  def format=(_arg0); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#288
  def negotiate_format(request); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#275
  def response; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#292
class ActionController::MimeResponds::Collector::VariantCollector
  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#293
  def initialize(variant = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#298
  def all(*args, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#298
  def any(*args, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#309
  def method_missing(name, *args, &block); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#313
  def variant; end

  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/mime_responds.rb#322
  def variant_key; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#5
module ActionController::ParameterEncoding
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#8
module ActionController::ParameterEncoding::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#18
  def action_encoding_template(action); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#9
  def inherited(klass); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#77
  def param_encoding(action, param, encoding); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#14
  def setup_param_encode; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/parameter_encoding.rb#48
  def skip_parameter_encoding(action); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/strong_parameters.rb#140
class ActionController::Parameters
  include ::ActiveSupport::DeepMergeable
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/params_wrapper.rb#82
module ActionController::ParamsWrapper
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/params_wrapper.rb#190
module ActionController::ParamsWrapper::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/params_wrapper.rb#191
  def _set_wrapper_options(options); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/params_wrapper.rb#246
  def inherited(klass); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/params_wrapper.rb#222
  def wrap_parameters(name_or_model_or_options, options = T.unsafe(nil)); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/permissions_policy.rb#4
module ActionController::PermissionsPolicy
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/permissions_policy.rb#7
module ActionController::PermissionsPolicy::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/permissions_policy.rb#26
  def permissions_policy(**options, &block); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/redirecting.rb#4
module ActionController::Redirecting
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/renderers.rb#23
module ActionController::Renderers
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/renderers.rb#36
module ActionController::Renderers::All
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/renderers.rb#94
module ActionController::Renderers::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/renderers.rb#128
  def use_renderer(*args); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/renderers.rb#128
  def use_renderers(*args); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#4
module ActionController::Rendering
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#9
module ActionController::Rendering::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#21
  def inherited(klass); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#11
  def render(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#15
  def renderer; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/rendering.rb#17
  def setup_renderer!; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#59
module ActionController::RequestForgeryProtection
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#105
module ActionController::RequestForgeryProtection::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#179
  def protect_from_forgery(options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#196
  def skip_forgery_protection(options = T.unsafe(nil)); end

  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#228
  def is_storage_strategy?(object); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#201
  def protection_method_class(name); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/request_forgery_protection.rb#216
  def storage_strategy(name); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/rescue.rb#10
module ActionController::Rescue
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#206
module ActionController::Streaming
  private

  # source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#238
  def _process_options(options); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#252
  def _render_template(options); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#207
class ActionController::Streaming::Body
  # source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#212
  def initialize(body); end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#231
  def close; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#218
  def each(&block); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#209
ActionController::Streaming::Body::TAIL = T.let(T.unsafe(nil), String)

# source://actionpack/7.1.3.2/lib/action_controller/metal/streaming.rb#208
ActionController::Streaming::Body::TERM = T.let(T.unsafe(nil), String)

# source://actionpack/7.1.3.2/lib/action_controller/metal/strong_parameters.rb#1278
module ActionController::StrongParameters
  # source://actionpack/7.1.3.2/lib/action_controller/metal/strong_parameters.rb#1281
  def params; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/strong_parameters.rb#1296
  def params=(value); end
end

# source://actionpack/7.1.3.2/lib/action_controller/template_assertions.rb#4
module ActionController::TemplateAssertions
  # source://actionpack/7.1.3.2/lib/action_controller/template_assertions.rb#5
  def assert_template(options = T.unsafe(nil), message = T.unsafe(nil)); end
end

# source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#345
class ActionController::TestCase < ::ActiveSupport::TestCase
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionController::TestCase::Behavior
  include ::ActionController::TemplateAssertions
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionController::TestCase::Behavior::ClassMethods
  extend ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
end

# source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#348
module ActionController::TestCase::Behavior
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#356
module ActionController::TestCase::Behavior::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#378
  def controller_class; end

  # source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#374
  def controller_class=(new_class); end

  # source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#386
  def determine_default_controller_class(name); end

  # source://actionpack/7.1.3.2/lib/action_controller/test_case.rb#363
  def tests(controller_class); end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/testing.rb#6
module ActionController::Testing::Functional
  # source://actionpack/7.1.3.2/lib/action_controller/metal/testing.rb#7
  def clear_instance_variables_between_requests; end

  # source://actionpack/7.1.3.2/lib/action_controller/metal/testing.rb#16
  def recycle!; end
end

# source://actionpack/7.1.3.2/lib/action_controller/metal/url_for.rb#25
module ActionController::UrlFor
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/deprecator.rb#3
module ActionDispatch
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#4
module ActionDispatch::Assertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#6
module ActionDispatch::Assertions::ResponseAssertions
  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#57
  def assert_redirected_to(url_options = T.unsafe(nil), options = T.unsafe(nil), message = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#30
  def assert_response(type, message = T.unsafe(nil)); end

  private

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#102
  def code_with_name(code_or_name); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#86
  def generate_response_message(expected, actual = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#96
  def location_if_redirected; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#77
  def normalize_argument_to_redirection(fragment); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#73
  def parameterize(value); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#91
  def response_body_if_short; end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/response.rb#7
ActionDispatch::Assertions::ResponseAssertions::RESPONSE_PREDICATES = T.let(T.unsafe(nil), Hash)

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/routing.rb#11
module ActionDispatch::Assertions::RoutingAssertions
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/routing.rb#14
module ActionDispatch::Assertions::RoutingAssertions::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/assertions/routing.rb#28
  def with_routing(&block); end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/middleware/callbacks.rb#7
class ActionDispatch::Callbacks
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://actionpack/7.1.3.2/lib/action_dispatch.rb#95
module ActionDispatch::Http
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/action_dispatch/http/mime_negotiation.rb#7
module ActionDispatch::Http::MimeNegotiation
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/http/parameters.rb#5
module ActionDispatch::Http::Parameters
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#12
module ActionDispatch::Integration::RequestHelpers
  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#39
  def delete(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#63
  def follow_redirect!(headers: T.unsafe(nil), **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#15
  def get(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#45
  def head(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#51
  def options(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#27
  def patch(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#21
  def post(path, **args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#33
  def put(path, **args); end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#325
module ActionDispatch::Integration::Runner
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  extend ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#333
  def initialize(*args, &blk); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#330
  def app; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#404
  def assertions; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#408
  def assertions=(assertions); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def assigns(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#338
  def before_setup; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def cookies(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#414
  def copy_session_variables!; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#353
  def create_session(app); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#420
  def default_url_options; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#424
  def default_url_options=(options); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def delete(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def follow_redirect!(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def get(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def head(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#343
  def integration_session; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#396
  def open_session; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def patch(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def post(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#376
  def put(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#365
  def remove!; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#349
  def reset!; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#331
  def root_session; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#331
  def root_session=(_arg0); end

  private

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#434
  def method_missing(method, *args, **_arg2, &block); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#429
  def respond_to_missing?(method, _); end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#328
ActionDispatch::Integration::Runner::APP_SESSIONS = T.let(T.unsafe(nil), Hash)

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#89
class ActionDispatch::Integration::Session
  include ::Minitest::Assertions
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActionDispatch::Integration::RequestHelpers
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  extend ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#641
class ActionDispatch::IntegrationTest < ::ActiveSupport::TestCase
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActionDispatch::Integration::Runner
  include ::ActionController::TemplateAssertions
  include ::ActionDispatch::IntegrationTest::Behavior
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::IntegrationTest::UrlOptions
  include ::Turbo::TestAssertions::IntegrationTestAssertions
  extend ::ActionDispatch::IntegrationTest::Behavior::ClassMethods
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#651
module ActionDispatch::IntegrationTest::Behavior
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActionDispatch::Integration::Runner
  include ::ActionController::TemplateAssertions
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#664
module ActionDispatch::IntegrationTest::Behavior::ClassMethods
  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#665
  def app; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#673
  def app=(app); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#677
  def register_encoder(*args, **options); end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/integration.rb#644
module ActionDispatch::IntegrationTest::UrlOptions
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing.rb#246
module ActionDispatch::Routing
  extend ::ActiveSupport::Autoload
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#59
module ActionDispatch::Routing::PolymorphicRoutes
  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#155
  def edit_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#151
  def edit_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#155
  def new_polymorphic_path(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#151
  def new_polymorphic_url(record_or_hash, options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#126
  def polymorphic_path(record_or_hash_or_array, options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#103
  def polymorphic_url(record_or_hash_or_array, options = T.unsafe(nil)); end

  private

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#170
  def polymorphic_mapping(record); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#166
  def polymorphic_path_for_action(action, record_or_hash, options); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#162
  def polymorphic_url_for_action(action, record_or_hash, options); end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#178
class ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder
  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#241
  def initialize(key_strategy, prefix, suffix); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#255
  def handle_class(klass); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#259
  def handle_class_call(target, klass); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#286
  def handle_list(list); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#263
  def handle_model(record); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#277
  def handle_model_call(target, record); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#247
  def handle_string(record); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#251
  def handle_string_call(target, str); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#239
  def prefix; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#239
  def suffix; end

  private

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#340
  def get_method_for_class(klass); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#345
  def get_method_for_string(str); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#332
  def polymorphic_mapping(target, record); end

  class << self
    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#189
    def build(action, type); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#181
    def get(action, type); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#187
    def path; end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#203
    def plural(prefix, suffix); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#207
    def polymorphic_method(recipient, record_or_hash_or_array, action, type, options); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#199
    def singular(prefix, suffix); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#186
    def url; end
  end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/polymorphic_routes.rb#179
ActionDispatch::Routing::PolymorphicRoutes::HelperMethodBuilder::CACHE = T.let(T.unsafe(nil), Hash)

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/route_set.rb#468
module ActionDispatch::Routing::RouteSet::MountedHelpers
  extend ::ActiveSupport::Concern
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/routes_proxy.rb#7
class ActionDispatch::Routing::RoutesProxy
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
end

# source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#89
module ActionDispatch::Routing::UrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#108
  def initialize(*_arg0, **_arg1, &_arg2); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#177
  def full_url_for(options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#217
  def route_for(name, *args); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#173
  def url_for(options = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#116
  def url_options; end

  protected

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#222
  def optimize_routes_generation?; end

  private

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#234
  def _routes_context; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#227
  def _with_routes(routes); end

  module GeneratedClassMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end

  module GeneratedInstanceMethods
    def default_url_options; end
    def default_url_options=(value); end
    def default_url_options?; end
  end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#7
module ActionDispatch::TestProcess
  include ::ActionDispatch::TestProcess::FixtureFile

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#31
  def assigns(key = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#45
  def cookies; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#41
  def flash; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#49
  def redirect_to_url; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#37
  def session; end
end

# source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#8
module ActionDispatch::TestProcess::FixtureFile
  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#19
  def file_fixture_upload(path, mime_type = T.unsafe(nil), binary = T.unsafe(nil)); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/testing/test_process.rb#19
  def fixture_file_upload(path, mime_type = T.unsafe(nil), binary = T.unsafe(nil)); end
end

class ActionMenuForm < ::ApplicationForm; end

# source://actionview/7.1.3.2/lib/action_view/gem_version.rb#3
module ActionView
  extend ::ActiveSupport::Autoload
end

# source://actionview/7.1.3.2/lib/action_view/base.rb#141
class ActionView::Base
  include ::ActionView::Context
  include ::ERB::Escape
  include ::ERB::Util
  include ::ActiveSupport::CoreExt::ERBUtil
  include ::ActiveSupport::CoreExt::ERBUtilPrivate
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  include ::ViteRails::TagHelpers
  include ::ActionCable::Helpers::ActionCableHelper
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.1.3.2/lib/action_view/base.rb#228
  def initialize(lookup_context, assigns, controller); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#165
  def _routes; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#165
  def _routes=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#165
  def _routes?; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#245
  def _run(method, template, locals, buffer, add_to_stack: T.unsafe(nil), has_strict_locals: T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#163
  def annotate_rendered_view_with_filenames=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#207
  def assign(new_assigns); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def assigns=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#160
  def automatically_disable_submit_tag; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#160
  def automatically_disable_submit_tag=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#270
  def compiled_method_container; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def config; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/attr_internal.rb#33
  def config=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/translation_helper.rb#18
  def debug_missing_translation=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#157
  def default_formats; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#157
  def default_formats=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#145
  def field_error_proc; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#145
  def field_error_proc=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def formats(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def formats=(arg); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#278
  def in_rendering_context(options); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def locale(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def locale=(arg); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#166
  def logger; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#166
  def logger=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#166
  def logger?; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#202
  def lookup_context; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#154
  def prefix_partial_path_with_controller_namespace?; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#149
  def streaming_completion_on_exception; end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#149
  def streaming_completion_on_exception=(val); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def view_paths(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#205
  def view_paths=(arg); end

  # source://actionview/7.1.3.2/lib/action_view/base.rb#202
  def view_renderer; end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/base.rb#165
    def _routes; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#165
    def _routes=(value); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#165
    def _routes?; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#163
    def annotate_rendered_view_with_filenames=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#160
    def automatically_disable_submit_tag; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#160
    def automatically_disable_submit_tag=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#171
    def cache_template_loading; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#175
    def cache_template_loading=(value); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#197
    def changed?(other); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/translation_helper.rb#18
    def debug_missing_translation=(val); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2759
    def default_form_builder; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2759
    def default_form_builder=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#157
    def default_formats; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#157
    def default_formats=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#214
    def empty; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#169
    def erb_trim_mode=(arg); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#145
    def field_error_proc; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#145
    def field_error_proc=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#166
    def logger; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#166
    def logger=(value); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#166
    def logger?; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace=(value); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#154
    def prefix_partial_path_with_controller_namespace?; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#149
    def streaming_completion_on_exception; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#149
    def streaming_completion_on_exception=(val); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#222
    def with_context(context, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#183
    def with_empty_template_cache; end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#218
    def with_view_paths(view_paths, assigns = T.unsafe(nil), controller = T.unsafe(nil)); end

    # source://actionview/7.1.3.2/lib/action_view/base.rb#179
    def xss_safe?; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/renderer/partial_renderer/collection_caching.rb#6
module ActionView::CollectionCaching
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/context.rb#14
module ActionView::Context
  # source://actionview/7.1.3.2/lib/action_view/context.rb#27
  def _layout_for(name = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/context.rb#18
  def _prepare_context; end

  # source://actionview/7.1.3.2/lib/action_view/context.rb#15
  def output_buffer; end

  # source://actionview/7.1.3.2/lib/action_view/context.rb#15
  def output_buffer=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/context.rb#15
  def view_flow; end

  # source://actionview/7.1.3.2/lib/action_view/context.rb#15
  def view_flow=(_arg0); end
end

# source://actionview/7.1.3.2/lib/action_view/dependency_tracker.rb#8
class ActionView::DependencyTracker
  extend ::ActiveSupport::Autoload
end

# source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#6
module ActionView::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#8
module ActionView::Helpers::ActiveModelHelper; end

# source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#12
module ActionView::Helpers::ActiveModelInstanceTag
  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#20
  def content_tag(type, options, *_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#36
  def error_message; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#28
  def error_wrapping(html_tag); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#13
  def object; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#24
  def tag(type, options, *_arg2); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#41
  def object_has_errors?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#45
  def select_markup_helper?(type); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/active_model_helper.rb#49
  def tag_generate_errors?(options); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#21
module ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#28
  def apply_stylesheet_media_default; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#28
  def apply_stylesheet_media_default=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#581
  def audio_tag(*sources); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#259
  def auto_discovery_link_tag(type = T.unsafe(nil), url_options = T.unsafe(nil), tag_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#300
  def favicon_link_tag(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#26
  def image_decoding; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#26
  def image_decoding=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#25
  def image_loading; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#25
  def image_loading=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#418
  def image_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#111
  def javascript_include_tag(*sources); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#479
  def picture_tag(*sources, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#343
  def preload_link_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#27
  def preload_links_header; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#27
  def preload_links_header=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#193
  def stylesheet_link_tag(*sources); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#549
  def video_tag(*sources); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#622
  def check_for_image_tag_errors(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#613
  def extract_dimensions(size); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#586
  def multiple_sources_tag_builder(type, sources); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#603
  def resolve_asset_source(asset_type, source, skip_pipeline); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#628
  def resolve_link_as(extname, mime_type); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#642
  def send_preload_links_header(preload_links, max_header_size: T.unsafe(nil)); end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#28
    def apply_stylesheet_media_default; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#28
    def apply_stylesheet_media_default=(val); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#26
    def image_decoding; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#26
    def image_decoding=(val); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#25
    def image_loading; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#25
    def image_loading=(val); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#27
    def preload_links_header; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#27
    def preload_links_header=(val); end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_tag_helper.rb#640
ActionView::Helpers::AssetTagHelper::MAX_HEADER_SIZE = T.let(T.unsafe(nil), Integer)

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#121
module ActionView::Helpers::AssetUrlHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#187
  def asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#231
  def asset_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#430
  def audio_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#442
  def audio_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#243
  def compute_asset_extname(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#277
  def compute_asset_host(source = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#266
  def compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#455
  def font_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#467
  def font_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#378
  def image_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#390
  def image_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#321
  def javascript_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#333
  def javascript_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#187
  def path_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#430
  def path_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#455
  def path_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#378
  def path_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#321
  def path_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#348
  def path_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#404
  def path_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#266
  def public_compute_asset_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#348
  def stylesheet_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#360
  def stylesheet_url(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#231
  def url_to_asset(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#442
  def url_to_audio(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#467
  def url_to_font(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#390
  def url_to_image(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#333
  def url_to_javascript(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#360
  def url_to_stylesheet(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#416
  def url_to_video(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#404
  def video_path(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#416
  def video_url(source, options = T.unsafe(nil)); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#236
ActionView::Helpers::AssetUrlHelper::ASSET_EXTENSIONS = T.let(T.unsafe(nil), Hash)

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#254
ActionView::Helpers::AssetUrlHelper::ASSET_PUBLIC_DIRECTORIES = T.let(T.unsafe(nil), Hash)

# source://actionview/7.1.3.2/lib/action_view/helpers/asset_url_helper.rb#122
ActionView::Helpers::AssetUrlHelper::URI_REGEXP = T.let(T.unsafe(nil), Regexp)

# source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#8
module ActionView::Helpers::AtomFeedHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#98
  def atom_feed(options = T.unsafe(nil), &block); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#129
class ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#132
  def initialize(xml); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#140
  def method_missing(method, *arguments, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#155
  def xhtml_block?(method, arguments); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#130
ActionView::Helpers::AtomFeedHelper::AtomBuilder::XHTML_TAG_NAMES = T.let(T.unsafe(nil), Set)

# source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#163
class ActionView::Helpers::AtomFeedHelper::AtomFeedBuilder < ::ActionView::Helpers::AtomFeedHelper::AtomBuilder
  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#164
  def initialize(xml, view, feed_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#182
  def entry(record, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/atom_feed_helper.rb#169
  def updated(date_or_time = T.unsafe(nil)); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#6
module ActionView::Helpers::CacheHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#168
  def cache(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#240
  def cache_fragment_name(name = T.unsafe(nil), skip_digest: T.unsafe(nil), digest_path: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#215
  def cache_if(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#231
  def cache_unless(condition, name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#188
  def caching?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#248
  def digest_path_from_template(template); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#205
  def uncacheable!; end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#270
  def fragment_for(name = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#259
  def fragment_name_with_digest(name, digest_path); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#280
  def read_fragment_for(name, options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#284
  def write_fragment_for(name, options, &block); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#289
module ActionView::Helpers::CacheHelper::CachingRegistry
  extend ::ActionView::Helpers::CacheHelper::CachingRegistry

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#292
  def caching?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#296
  def track_caching; end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/cache_helper.rb#7
class ActionView::Helpers::CacheHelper::UncacheableFragmentError < ::StandardError; end

# source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#17
module ActionView::Helpers::CaptureHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#47
  def capture(*args, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#172
  def content_for(name, content = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#215
  def content_for?(name); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#194
  def provide(name, content = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/capture_helper.rb#221
  def with_output_buffer(buf = T.unsafe(nil)); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#5
module ActionView::Helpers::ContentExfiltrationPreventionHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
  def prepend_content_exfiltration_prevention; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
  def prepend_content_exfiltration_prevention=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#61
  def prevent_content_exfiltration(html); end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
    def prepend_content_exfiltration_prevention; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#6
    def prepend_content_exfiltration_prevention=(val); end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#32
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_CDATA_COMMENT = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#57
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_FORM_TAG = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#45
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_OPTION_TAG = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#18
ActionView::Helpers::ContentExfiltrationPreventionHelper::CLOSE_QUOTES_COMMENT = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview/7.1.3.2/lib/action_view/helpers/content_exfiltration_prevention_helper.rb#59
ActionView::Helpers::ContentExfiltrationPreventionHelper::CONTENT_EXFILTRATION_PREVENTION_MARKUP = T.let(T.unsafe(nil), ActiveSupport::SafeBuffer)

# source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#11
module ActionView::Helpers::ControllerHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def action_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#20
  def assign_controller(controller); end

  def controller; end
  def controller=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def controller_name(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def controller_path(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def cookies(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def flash(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def headers(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#32
  def logger; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def params(*_arg0, **_arg1, &_arg2); end

  def request; end
  def request=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def request_forgery_protection_token(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#36
  def respond_to?(method_name, include_private = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def response(*_arg0, **_arg1, &_arg2); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#18
  def session(*_arg0, **_arg1, &_arg2); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/controller_helper.rb#14
ActionView::Helpers::ControllerHelper::CONTROLLER_DELEGATES = T.let(T.unsafe(nil), Array)

# source://actionview/7.1.3.2/lib/action_view/helpers/csp_helper.rb#6
module ActionView::Helpers::CspHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/csp_helper.rb#17
  def csp_meta_tag(**options); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/csrf_helper.rb#6
module ActionView::Helpers::CsrfHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tag; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/csrf_helper.rb#22
  def csrf_meta_tags; end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#24
module ActionView::Helpers::DateHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#290
  def date_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#366
  def datetime_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#95
  def distance_of_time_in_words(from_time, to_time = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#176
  def distance_of_time_in_words_to_now(from_time, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#454
  def select_date(date = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#415
  def select_datetime(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#597
  def select_day(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#570
  def select_hour(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#541
  def select_minute(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#642
  def select_month(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#517
  def select_second(datetime, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#494
  def select_time(datetime = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#671
  def select_year(date, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#176
  def time_ago_in_words(from_time, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#331
  def time_select(object_name, method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#690
  def time_tag(date_or_time, *args, &block); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#699
  def normalize_distance_of_time_argument_to_time(value); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#26
ActionView::Helpers::DateHelper::MINUTES_IN_QUARTER_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#27
ActionView::Helpers::DateHelper::MINUTES_IN_THREE_QUARTERS_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#25
ActionView::Helpers::DateHelper::MINUTES_IN_YEAR = T.let(T.unsafe(nil), Integer)

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#710
class ActionView::Helpers::DateTimeSelector
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/debug_helper.rb#10
module ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  # source://actionview/7.1.3.2/lib/action_view/helpers/debug_helper.rb#28
  def debug(object); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#1228
class ActionView::Helpers::FormBuilder
  include ::ActionView::ModelNaming

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1715
  def initialize(object_name, object, template, options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2644
  def button(value = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2468
  def check_box(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#908
  def collection_check_boxes(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#920
  def collection_radio_buttons(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#860
  def collection_select(method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def color_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def date_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#1237
  def date_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def datetime_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def datetime_local_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#1261
  def datetime_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def email_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2665
  def emitted_hidden_id?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
  def field_helpers; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
  def field_helpers=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
  def field_helpers?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1772
  def field_id(method, *suffixes, namespace: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1792
  def field_name(method, *methods, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2322
  def fields(scope = T.unsafe(nil), model: T.unsafe(nil), **options, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2284
  def fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2551
  def file_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#872
  def grouped_collection_select(method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2512
  def hidden_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1752
  def id; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1692
  def index; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2399
  def label(method, text = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def month_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1692
  def multipart; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1695
  def multipart=(multipart); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1692
  def multipart?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def number_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def object; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def object=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def object_name; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def object_name=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def options; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1690
  def options=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def password_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def phone_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2490
  def radio_button(method, tag_value, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def range_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def search_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#848
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2583
  def submit(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def telephone_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def text_area(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def text_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def time_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/date_helper.rb#1249
  def time_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#884
  def time_zone_select(method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1711
  def to_model; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1707
  def to_partial_path; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def url_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2021
  def week_field(method, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#896
  def weekday_select(method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2750
  def convert_to_legacy_options(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2732
  def fields_for_nested_model(name, object, fields_options, block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2703
  def fields_for_with_nested_attributes(association_name, association, options, block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2699
  def nested_attributes_association?(association_name); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2745
  def nested_child_index(name); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2670
  def objectify_options(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2676
  def submit_default_value; end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1703
    def _to_partial_path; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
    def field_helpers; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
    def field_helpers=(value); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#1680
    def field_helpers?; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#112
module ActionView::Helpers::FormHelper
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#94
module ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::TextHelper
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#782
  def collection_check_boxes(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#698
  def collection_radio_buttons(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#199
  def collection_select(object, method, collection, value_method, text_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#258
  def grouped_collection_select(object, method, collection, group_method, group_label_method, option_key_method, option_value_method, options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#534
  def grouped_options_for_select(grouped_options, selected_key = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#462
  def option_groups_from_collection_for_select(collection, group_method, group_label_method, option_key_method, option_value_method, selected_key = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#358
  def options_for_select(container, selected = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#401
  def options_from_collection_for_select(collection, value_method, text_method, selected = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#159
  def select(object, method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#579
  def time_zone_options_for_select(selected = T.unsafe(nil), priority_zones = T.unsafe(nil), model = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#292
  def time_zone_select(object, method, priority_zones = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#611
  def weekday_options_for_select(selected = T.unsafe(nil), index_as_value: T.unsafe(nil), day_format: T.unsafe(nil), beginning_of_week: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#298
  def weekday_select(object, method, options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#809
  def extract_selected_and_disabled(selected); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#820
  def extract_values_from_collection(collection, value_method, selected); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#787
  def option_html_attributes(element); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#795
  def option_text_and_value(option); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#805
  def option_value_selected?(value, selected); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#834
  def prompt_text(prompt); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_options_helper.rb#830
  def value_for_collection(item, value); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#19
module ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  extend ::ActiveSupport::Concern
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper

  mixes_in_class_methods ::ActionView::Helpers::UrlHelper::ClassMethods
  mixes_in_class_methods ::ActionView::Helpers::SanitizeHelper::ClassMethods

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#605
  def button_tag(content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#455
  def check_box_tag(name, *args); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#703
  def color_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#773
  def date_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#801
  def datetime_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#801
  def datetime_local_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#29
  def default_enforce_utf8; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#29
  def default_enforce_utf8=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#875
  def email_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#26
  def embed_authenticity_token_in_remote_forms; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#26
  def embed_authenticity_token_in_remote_forms=(val); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#102
  def field_id(object_name, method_name, *suffixes, index: T.unsafe(nil), namespace: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#132
  def field_name(object_name, method_name, *method_names, multiple: T.unsafe(nil), index: T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#677
  def field_set_tag(legend = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#347
  def file_field_tag(name, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#78
  def form_tag(url_for_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#308
  def hidden_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#651
  def image_submit_tag(source, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#281
  def label_tag(name = T.unsafe(nil), content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#816
  def month_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#923
  def number_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#380
  def password_field_tag(name = T.unsafe(nil), value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#749
  def phone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#491
  def radio_button_tag(name, value, *args); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#937
  def range_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#726
  def search_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#201
  def select_tag(name, option_tags = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#544
  def submit_tag(value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#749
  def telephone_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#413
  def text_area_tag(name, content = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#263
  def text_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#787
  def time_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#852
  def url_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#943
  def utf8_enforcer_tag; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#829
  def week_field_tag(name, value = T.unsafe(nil), options = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#1040
  def convert_direct_upload_option_to_url(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#978
  def extra_tags_for_form(html_options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#1008
  def form_tag_html(html_options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#1014
  def form_tag_with_body(html_options, content); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#951
  def html_options_for_form(url_for_options, options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#1021
  def sanitize_to_id(name); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#1025
  def set_default_disable_with(value, tag_options); end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#29
    def default_enforce_utf8; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#29
    def default_enforce_utf8=(val); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#26
    def embed_authenticity_token_in_remote_forms; end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#26
    def embed_authenticity_token_in_remote_forms=(val); end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#6
module ActionView::Helpers::JavaScriptHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#28
  def escape_javascript(javascript); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#28
  def j(javascript); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#91
  def javascript_cdata_section(content); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#75
  def javascript_tag(content_or_options_with_block = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/javascript_helper.rb#7
ActionView::Helpers::JavaScriptHelper::JS_ESCAPE_MAP = T.let(T.unsafe(nil), Hash)

# source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#17
module ActionView::Helpers::NumberHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#51
  def number_to_currency(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#111
  def number_to_human(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#99
  def number_to_human_size(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#63
  def number_to_percentage(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#35
  def number_to_phone(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#75
  def number_with_delimiter(number, options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#87
  def number_with_precision(number, options = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#116
  def delegate_number_helper_method(method, number, options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#135
  def escape_units(units); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#125
  def escape_unsafe_options(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#158
  def parse_float(number, raise_error); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#154
  def valid_float?(number); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#141
  def wrap_with_output_safety_handling(number, raise_on_invalid, &block); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#20
class ActionView::Helpers::NumberHelper::InvalidNumberError < ::StandardError
  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#22
  def initialize(number); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#21
  def number; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/number_helper.rb#21
  def number=(_arg0); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/output_safety_helper.rb#8
module ActionView::Helpers::OutputSafetyHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/output_safety_helper.rb#18
  def raw(stringish); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/output_safety_helper.rb#33
  def safe_join(array, sep = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/output_safety_helper.rb#43
  def to_sentence(array, options = T.unsafe(nil)); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/rendering_helper.rb#10
module ActionView::Helpers::RenderingHelper
  # source://actionview/7.1.3.2/lib/action_view/helpers/rendering_helper.rb#97
  def _layout_for(*args, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/rendering_helper.rb#30
  def render(options = T.unsafe(nil), locals = T.unsafe(nil), &block); end
end

# source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#16
module ActionView::Helpers::SanitizeHelper
  extend ::ActiveSupport::Concern
end

# source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#17
module ActionView::Helpers::SanitizeHelper::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#175
  def full_sanitizer; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#155
  def full_sanitizer=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#185
  def link_sanitizer; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#155
  def link_sanitizer=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#195
  def safe_list_sanitizer; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#155
  def safe_list_sanitizer=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#165
  def sanitized_allowed_attributes; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#34
  def sanitized_allowed_attributes=(attributes); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_css_keywords; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_css_keywords=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_css_properties; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_css_properties=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_allowed_protocols; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_allowed_protocols=(_); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#161
  def sanitized_allowed_tags; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#24
  def sanitized_allowed_tags=(tags); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_bad_tags; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_bad_tags=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_protocol_separator; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_protocol_separator=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_shorthand_css_properties; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_shorthand_css_properties=(_); end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#47
  def sanitized_uri_attributes; end

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#48
  def sanitized_uri_attributes=(_); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/sanitize_helper.rb#157
  def sanitizer_vendor; end

  private

  # source://rails-html-sanitizer/1.6.0/lib/rails-html-sanitizer.rb#52
  def deprecate_option(name); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#15
module ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#386
  def cdata_section(content); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#366
  def class_names(*args); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#346
  def content_tag(name, content_or_options_with_block = T.unsafe(nil), options = T.unsafe(nil), escape = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#398
  def escape_once(html); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#309
  def tag(name = T.unsafe(nil), options = T.unsafe(nil), open = T.unsafe(nil), escape = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#366
  def token_list(*args); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#403
  def build_tag_values(*args); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#423
  def tag_builder; end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#403
    def build_tag_values(*args); end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#32
ActionView::Helpers::TagHelper::ARIA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#19
ActionView::Helpers::TagHelper::BOOLEAN_ATTRIBUTES = T.let(T.unsafe(nil), Set)

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#33
ActionView::Helpers::TagHelper::DATA_PREFIXES = T.let(T.unsafe(nil), Set)

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#41
ActionView::Helpers::TagHelper::PRE_CONTENT_STRINGS = T.let(T.unsafe(nil), Hash)

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#35
ActionView::Helpers::TagHelper::TAG_TYPES = T.let(T.unsafe(nil), Hash)

# source://actionview/7.1.3.2/lib/action_view/helpers/tag_helper.rb#45
class ActionView::Helpers::TagHelper::TagBuilder
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags.rb#5
module ActionView::Helpers::Tags
  extend ::ActiveSupport::Autoload
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#6
class ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionView::Helpers::ActiveModelInstanceTag
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods

  def initialize(*args, **kwargs, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#9
  def object; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#31
  def render; end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#96
  def add_default_name_and_id(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#83
  def add_default_name_and_id_for_value(tag_value, options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#132
  def generate_ids?; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#124
  def name_and_id_index(options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#74
  def retrieve_autoindex(pre_match); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#63
  def retrieve_object(object); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#116
  def sanitized_method_name; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#120
  def sanitized_value(value); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#112
  def tag_id(index = T.unsafe(nil), namespace = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#108
  def tag_name(multiple = T.unsafe(nil), index = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#36
  def value; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#46
  def value_before_type_cast; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/base.rb#58
  def value_came_from_user?; end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_check_boxes.rb#8
class ActionView::Helpers::Tags::CollectionCheckBoxes < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#6
module ActionView::Helpers::Tags::CollectionHelpers
  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#30
  def initialize(object_name, method_name, template_object, collection, value_method, text_method, options, html_options); end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#47
  def default_html_options_for_collection(item, value); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#107
  def hidden_field; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#112
  def hidden_field_name; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#40
  def instantiate_builder(builder_class, item, value, text, html_options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#75
  def render_collection; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#86
  def render_collection_for(builder_class, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#71
  def sanitize_attribute_name(value); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#7
class ActionView::Helpers::Tags::CollectionHelpers::Builder
  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#10
  def initialize(template_object, object_name, method_name, object, sanitized_attribute_name, text, value, input_html_options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#22
  def label(label_html_options = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#8
  def object; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#8
  def text; end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_helpers.rb#8
  def value; end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_radio_buttons.rb#8
class ActionView::Helpers::Tags::CollectionRadioButtons < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::CollectionHelpers
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/collection_select.rb#6
class ActionView::Helpers::Tags::CollectionSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/date_select.rb#8
class ActionView::Helpers::Tags::DateSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/grouped_collection_select.rb#6
class ActionView::Helpers::Tags::GroupedCollectionSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/placeholderable.rb#6
module ActionView::Helpers::Tags::Placeholderable
  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/placeholderable.rb#7
  def initialize(*_arg0); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/select.rb#6
class ActionView::Helpers::Tags::Select < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/select_renderer.rb#6
module ActionView::Helpers::Tags::SelectRenderer
  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/select_renderer.rb#36
  def add_options(option_tags, options, value = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/select_renderer.rb#31
  def placeholder_required?(html_options); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/select_renderer.rb#8
  def select_content_tag(option_tags, options, html_options); end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/text_area.rb#8
class ActionView::Helpers::Tags::TextArea < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/text_field.rb#8
class ActionView::Helpers::Tags::TextField < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::Placeholderable

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/text_field.rb#11
  def render; end

  private

  # source://actionview/7.1.3.2/lib/action_view/helpers/tags/text_field.rb#27
  def field_type; end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/tags/text_field.rb#21
    def field_type; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/time_zone_select.rb#6
class ActionView::Helpers::Tags::TimeZoneSelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/tags/weekday_select.rb#6
class ActionView::Helpers::Tags::WeekdaySelect < ::ActionView::Helpers::Tags::Base
  include ::ActionView::Helpers::Tags::SelectRenderer
  include ::ActionView::Helpers::FormOptionsHelper
end

# source://actionview/7.1.3.2/lib/action_view/helpers/text_helper.rb#36
module ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/helpers/translation_helper.rb#9
module ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/helpers/url_helper.rb#17
module ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/helpers/url_helper.rb#29
module ActionView::Helpers::UrlHelper::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/helpers/url_helper.rb#30
  def _url_for_modules; end
end

# source://actionview/7.1.3.2/lib/action_view/layouts.rb#205
module ActionView::Layouts
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/layouts.rb#219
module ActionView::Layouts::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#285
  def _write_layout_method; end

  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#220
  def inherited(klass); end

  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#271
  def layout(layout, conditions = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#347
  def _implied_layout_name; end
end

# source://actionview/7.1.3.2/lib/action_view/layouts.rb#227
module ActionView::Layouts::ClassMethods::LayoutConditions
  private

  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#235
  def _conditional_layout?; end
end

# source://actionview/7.1.3.2/lib/action_view/model_naming.rb#4
module ActionView::ModelNaming
  # source://actionview/7.1.3.2/lib/action_view/model_naming.rb#6
  def convert_to_model(object); end

  # source://actionview/7.1.3.2/lib/action_view/model_naming.rb#10
  def model_name_from_record_or_class(record_or_class); end
end

# source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#60
module ActionView::RecordIdentifier
  include ::ActionView::ModelNaming
  extend ::ActionView::RecordIdentifier
  extend ::ActionView::ModelNaming

  # source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#78
  def dom_class(record_or_class, prefix = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#93
  def dom_id(record_or_class, prefix = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#113
  def record_key_for_dom_id(record); end
end

# source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#66
ActionView::RecordIdentifier::JOIN = T.let(T.unsafe(nil), String)

# source://actionview/7.1.3.2/lib/action_view/record_identifier.rb#67
ActionView::RecordIdentifier::NEW = T.let(T.unsafe(nil), String)

# source://actionview/7.1.3.2/lib/action_view/rendering.rb#26
module ActionView::Rendering
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/rendering.rb#45
module ActionView::Rendering::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#49
  def _helpers; end

  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#46
  def _routes; end

  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#59
  def build_view_context_class(klass, supports_path, routes, helpers); end

  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#76
  def eager_load!; end

  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#52
  def inherit_view_context_class?; end

  # source://actionview/7.1.3.2/lib/action_view/rendering.rb#82
  def view_context_class; end
end

# source://actionview/7.1.3.2/lib/action_view/template/resolver.rb#12
class ActionView::Resolver
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
end

# source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#6
module ActionView::RoutingUrlFor
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#99
  def default_url_options=(val); end

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#82
  def url_for(options = T.unsafe(nil)); end

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#124
  def url_options; end

  private

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#139
  def _generate_paths_by_default; end

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#130
  def _routes_context; end

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#143
  def ensure_only_path_option(options); end

  # source://actionview/7.1.3.2/lib/action_view/routing_url_for.rb#134
  def optimize_routes_generation?; end

  class << self
    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#99
    def default_url_options=(val); end
  end
end

# source://actionview/7.1.3.2/lib/action_view/template.rb#8
class ActionView::Template
  extend ::ActiveSupport::Autoload
  extend ::ActionView::Template::Handlers
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#6
module ActionView::Template::Handlers
  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#61
  def handler_for_extension(extension); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#56
  def register_default_template_handler(extension, klass); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#31
  def register_template_handler(*extensions, handler); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#52
  def registered_template_handler(extension); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#48
  def template_handler_extensions; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#40
  def unregister_template_handler(*extensions); end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#12
    def extended(base); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers.rb#23
    def extensions; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#5
class ActionView::Template::Handlers::Builder
  # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#8
  def call(template, source); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
  def default_format; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
  def default_format=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
  def default_format?; end

  private

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#17
  def require_engine; end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
    def default_format; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
    def default_format=(value); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/builder.rb#6
    def default_format?; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#9
class ActionView::Template::Handlers::ERB
  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#61
  def call(template, source); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
  def erb_implementation; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
  def erb_implementation=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
  def erb_implementation?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
  def erb_trim_mode?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
  def escape_ignore_list?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#37
  def handles_encoding?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
  def strip_trailing_newlines?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#33
  def supports_streaming?; end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#43
  def translate_location(spot, backtrace_location, source); end

  private

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#108
  def find_offset(compiled, source_tokens, error_column); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#93
  def valid_encoding(string, encoding); end

  class << self
    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#29
    def call(template, source); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
    def erb_implementation; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
    def erb_implementation=(value); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#17
    def erb_implementation?; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode=(value); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#14
    def erb_trim_mode?; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list=(value); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#20
    def escape_ignore_list?; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines; end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines=(value); end

    # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#23
    def strip_trailing_newlines?; end
  end
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#25
ActionView::Template::Handlers::ERB::ENCODING_TAG = T.let(T.unsafe(nil), Regexp)

# source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#9
class ActionView::Template::Handlers::ERB::Erubi < ::Erubi::Engine
  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#11
  def initialize(input, properties = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#65
  def add_code(code); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#47
  def add_expression(indicator, code); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#70
  def add_postamble(_); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#30
  def add_text(text); end

  # source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#75
  def flush_newline_if_pending(src); end
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/erb/erubi.rb#45
ActionView::Template::Handlers::ERB::Erubi::BLOCK_EXPR = T.let(T.unsafe(nil), Regexp)

# source://actionview/7.1.3.2/lib/action_view/template/handlers/erb.rb#27
class ActionView::Template::Handlers::ERB::LocationParsingError < ::StandardError; end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/html.rb#5
class ActionView::Template::Handlers::Html < ::ActionView::Template::Handlers::Raw
  # source://actionview/7.1.3.2/lib/action_view/template/handlers/html.rb#6
  def call(template, source); end
end

# source://actionview/7.1.3.2/lib/action_view/template/handlers/raw.rb#5
class ActionView::Template::Handlers::Raw
  # source://actionview/7.1.3.2/lib/action_view/template/handlers/raw.rb#6
  def call(template, source); end
end

# source://actionview/7.1.3.2/lib/action_view/template/sources.rb#5
module ActionView::Template::Sources
  extend ::ActiveSupport::Autoload
end

# source://actionview/7.1.3.2/lib/action_view/test_case.rb#15
class ActionView::TestCase < ::ActiveSupport::TestCase
  include ::ActionDispatch::Assertions::RoutingAssertions
  include ::ActionDispatch::Assertions::ResponseAssertions
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionDispatch::Assertions
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
  include ::AbstractController::Helpers
  include ::ActiveSupport::Benchmarkable
  include ::ActionView::Helpers::ActiveModelHelper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::ActionView::Helpers::AtomFeedHelper
  include ::ActionView::Helpers::CacheHelper
  include ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  include ::ActionView::Helpers::UrlHelper
  include ::ActionView::Helpers::SanitizeHelper
  include ::ActionView::Helpers::ControllerHelper
  include ::ActionView::Helpers::CspHelper
  include ::ActionView::Helpers::CsrfHelper
  include ::ActionView::Helpers::DateHelper
  include ::ActionView::Helpers::DebugHelper
  include ::ActionView::Helpers::TextHelper
  include ::ActionView::Helpers::FormTagHelper
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionView::Helpers::FormHelper
  include ::ActionView::Helpers::TranslationHelper
  include ::ActionView::Helpers::FormOptionsHelper
  include ::ActionView::Helpers::JavaScriptHelper
  include ::ActionView::Helpers::NumberHelper
  include ::ActionView::Helpers::RenderingHelper
  include ::ActionView::Helpers
  include ::ActiveSupport::Testing::ConstantLookup
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::ActionView::TestCase::Behavior
  extend ::ActionDispatch::Assertions::RoutingAssertions::ClassMethods
  extend ::AbstractController::Helpers::Resolution
  extend ::AbstractController::Helpers::ClassMethods
  extend ::ActionView::Helpers::UrlHelper::ClassMethods
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods
  extend ::ActiveSupport::Testing::ConstantLookup::ClassMethods
  extend ::ActionView::TestCase::Behavior::ClassMethods
end

# source://actionview/7.1.3.2/lib/action_view/test_case.rb#45
module ActionView::TestCase::Behavior
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
  include ::Rails::Dom::Testing::Assertions
  include ::ActionController::TemplateAssertions
  include ::ActionView::Context
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionView::ModelNaming
  include ::ActionView::RecordIdentifier
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/test_case.rb#65
module ActionView::TestCase::Behavior::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#164
  def determine_default_helper_class(name); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#184
  def helper_class; end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#182
  def helper_class=(_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#170
  def helper_method(*methods); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#66
  def inherited(descendant); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#188
  def new(*_arg0); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#148
  def register_parser(format, callable = T.unsafe(nil), &block); end

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#155
  def tests(helper_class); end

  private

  # source://actionview/7.1.3.2/lib/action_view/test_case.rb#194
  def include_helper_modules!; end
end

# source://actionview/7.1.3.2/lib/action_view/test_case.rb#16
class ActionView::TestCase::TestController < ::ActionController::Base
  include ::ActionDispatch::TestProcess::FixtureFile
  include ::ActionDispatch::TestProcess
end

# source://actionview/7.1.3.2/lib/action_view/view_paths.rb#4
module ActionView::ViewPaths
  extend ::ActiveSupport::Concern
end

# source://actionview/7.1.3.2/lib/action_view/view_paths.rb#14
module ActionView::ViewPaths::ClassMethods
  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#31
  def _build_view_paths(paths); end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#23
  def _prefixes; end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#15
  def _view_paths; end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#19
  def _view_paths=(paths); end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#44
  def append_view_path(path); end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#54
  def prepend_view_path(path); end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#59
  def view_paths; end

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#68
  def view_paths=(paths); end

  private

  # source://actionview/7.1.3.2/lib/action_view/view_paths.rb#75
  def local_prefixes; end
end

# source://activemodel/7.1.3.2/lib/active_model/gem_version.rb#3
module ActiveModel
  extend ::ActiveSupport::Autoload
end

# source://activemodel/7.1.3.2/lib/active_model/api.rb#59
module ActiveModel::API
  include ::ActiveModel::ForbiddenAttributesProtection
  include ::ActiveModel::AttributeAssignment
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/access.rb#7
module ActiveModel::Access
  # source://activemodel/7.1.3.2/lib/active_model/access.rb#8
  def slice(*methods); end

  # source://activemodel/7.1.3.2/lib/active_model/access.rb#12
  def values_at(*methods); end
end

# source://activemodel/7.1.3.2/lib/active_model/attribute_assignment.rb#6
module ActiveModel::AttributeAssignment
  include ::ActiveModel::ForbiddenAttributesProtection

  # source://activemodel/7.1.3.2/lib/active_model/attribute_assignment.rb#28
  def assign_attributes(new_attributes); end

  # source://activemodel/7.1.3.2/lib/active_model/attribute_assignment.rb#28
  def attributes=(new_attributes); end

  private

  # source://activemodel/7.1.3.2/lib/active_model/attribute_assignment.rb#46
  def _assign_attribute(k, v); end

  # source://activemodel/7.1.3.2/lib/active_model/attribute_assignment.rb#40
  def _assign_attributes(attributes); end
end

# source://activemodel/7.1.3.2/lib/active_model/attribute_methods.rb#64
module ActiveModel::AttributeMethods
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/attribute_registration.rb#8
module ActiveModel::AttributeRegistration
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/attributes.rb#30
module ActiveModel::Attributes
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/conversion.rb#24
module ActiveModel::Conversion
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/dirty.rb#123
module ActiveModel::Dirty
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/forbidden_attributes_protection.rb#21
module ActiveModel::ForbiddenAttributesProtection
  private

  # source://activemodel/7.1.3.2/lib/active_model/forbidden_attributes_protection.rb#23
  def sanitize_for_mass_assignment(attributes); end

  # source://activemodel/7.1.3.2/lib/active_model/forbidden_attributes_protection.rb#23
  def sanitize_forbidden_attributes(attributes); end
end

# source://activemodel/7.1.3.2/lib/active_model/model.rb#42
module ActiveModel::Model
  include ::ActiveModel::Access
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/secure_password.rb#4
module ActiveModel::SecurePassword
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/serialization.rb#69
module ActiveModel::Serialization
  def read_attribute_for_serialization(*_arg0); end

  # source://activemodel/7.1.3.2/lib/active_model/serialization.rb#125
  def serializable_hash(options = T.unsafe(nil)); end

  private

  # source://activemodel/7.1.3.2/lib/active_model/serialization.rb#152
  def attribute_names_for_serialization; end

  # source://activemodel/7.1.3.2/lib/active_model/serialization.rb#184
  def serializable_add_includes(options = T.unsafe(nil)); end

  # source://activemodel/7.1.3.2/lib/active_model/serialization.rb#174
  def serializable_attributes(attribute_names); end
end

# source://activemodel/7.1.3.2/lib/active_model.rb#68
module ActiveModel::Serializers
  extend ::ActiveSupport::Autoload
end

# source://activemodel/7.1.3.2/lib/active_model/serializers/json.rb#8
module ActiveModel::Serializers::JSON
  include ::ActiveModel::Serialization
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/type/serialize_cast_value.rb#5
module ActiveModel::Type::SerializeCastValue
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/validations.rb#37
module ActiveModel::Validations
  extend ::ActiveSupport::Concern
end

# source://activemodel/7.1.3.2/lib/active_model/validations/callbacks.rb#22
module ActiveModel::Validations::Callbacks
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/deep_mergeable.rb#3
module ActiveSupport
  extend ::ActiveSupport::LazyLoadHooks
  extend ::ActiveSupport::Autoload
end

# source://activesupport/7.1.3.2/lib/active_support/actionable_error.rb#11
module ActiveSupport::ActionableError
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#29
module ActiveSupport::Autoload
  # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#42
  def autoload(const_name, path = T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#63
  def autoload_at(path); end

  # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#56
  def autoload_under(path); end

  # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#70
  def eager_autoload; end

  # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#77
  def eager_load!; end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/dependencies/autoload.rb#30
    def extended(base); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/benchmarkable.rb#8
module ActiveSupport::Benchmarkable
  # source://activesupport/7.1.3.2/lib/active_support/benchmarkable.rb#38
  def benchmark(message = T.unsafe(nil), options = T.unsafe(nil), &block); end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#65
module ActiveSupport::Callbacks
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::ActiveSupport::Callbacks::ClassMethods
  mixes_in_class_methods ::ActiveSupport::DescendantsTracker

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#97
  def run_callbacks(kind, type = T.unsafe(nil)); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#150
  def halted_callback_hook(filter, name); end

  module GeneratedClassMethods
    def __callbacks; end
    def __callbacks=(value); end
    def __callbacks?; end
  end

  module GeneratedInstanceMethods
    def __callbacks; end
    def __callbacks?; end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#73
ActiveSupport::Callbacks::CALLBACK_FILTER_TYPES = T.let(T.unsafe(nil), Array)

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#378
module ActiveSupport::Callbacks::CallTemplate
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#536
    def build(filter, callback); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#437
class ActiveSupport::Callbacks::CallTemplate::InstanceExec0
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#438
  def initialize(block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#442
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#452
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#446
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#459
class ActiveSupport::Callbacks::CallTemplate::InstanceExec1
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#460
  def initialize(block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#464
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#474
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#468
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#481
class ActiveSupport::Callbacks::CallTemplate::InstanceExec2
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#482
  def initialize(block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#486
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#498
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#491
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#379
class ActiveSupport::Callbacks::CallTemplate::MethodCall
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#380
  def initialize(method); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#397
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#407
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#401
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#414
class ActiveSupport::Callbacks::CallTemplate::ObjectCall
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#415
  def initialize(target, method); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#420
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#430
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#424
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#506
class ActiveSupport::Callbacks::CallTemplate::ProcCall
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#507
  def initialize(target); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#511
  def expand(target, value, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#521
  def inverted_lambda; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#515
  def make_lambda; end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#283
class ActiveSupport::Callbacks::Callback
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#298
  def initialize(name, filter, kind, options, chain_config); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#333
  def apply(callback_sequence); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#296
  def chain_config; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#347
  def current_scopes; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#323
  def duplicates?(other); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#296
  def filter; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#295
  def kind; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#295
  def kind=(_arg0); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#319
  def matches?(_kind, _filter); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#307
  def merge_conditional_options(chain, if_option:, unless_option:); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#295
  def name; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#295
  def name=(_arg0); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#355
  def check_conditionals(conditionals); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#370
  def conditions_lambdas; end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#284
    def build(chain, filter, kind, options); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#606
class ActiveSupport::Callbacks::CallbackChain
  include ::Enumerable

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#611
  def initialize(name, config); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#671
  def append(*callbacks); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#639
  def clear; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#653
  def compile(type); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#609
  def config; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#633
  def delete(o); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#623
  def each(&block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#625
  def empty?; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#624
  def index(o); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#627
  def insert(index, o); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#609
  def name; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#675
  def prepend(*callbacks); end

  protected

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#680
  def chain; end

  private

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#683
  def append_one(callback); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#703
  def default_terminator; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#646
  def initialize_copy(other); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#690
  def prepend_one(callback); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#697
  def remove_duplicates(callback); end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#559
class ActiveSupport::Callbacks::CallbackSequence
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#560
  def initialize(nested = T.unsafe(nil), call_template = T.unsafe(nil), user_conditions = T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#574
  def after(&after); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#579
  def around(call_template, user_conditions); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#569
  def before(&before); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#593
  def expand_call_template(arg, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#589
  def final?; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#601
  def invoke_after(arg); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#597
  def invoke_before(arg); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#587
  def nested; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#583
  def skip?(arg); end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#715
module ActiveSupport::Callbacks::ClassMethods
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#725
  def __update_callbacks(name); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#940
  def define_callbacks(*names); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#716
  def normalize_callback_params(filters, block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#850
  def reset_callbacks(name); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#776
  def set_callback(name, *filter_list, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#825
  def skip_callback(name, *filter_list, &block); end

  protected

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#971
  def get_callbacks(name); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#975
  def set_callbacks(name, callbacks); end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#153
module ActiveSupport::Callbacks::Conditionals; end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#154
class ActiveSupport::Callbacks::Conditionals::Value
  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#155
  def initialize(&block); end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#158
  def call(target, value); end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#162
module ActiveSupport::Callbacks::Filters; end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#215
class ActiveSupport::Callbacks::Filters::After
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#216
    def build(callback_sequence, user_callback, user_conditions, chain_config); end

    private

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#258
    def conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#247
    def halting(callback_sequence, user_callback); end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#232
    def halting_and_conditional(callback_sequence, user_callback, user_conditions); end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#272
    def simple(callback_sequence, user_callback); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#165
class ActiveSupport::Callbacks::Filters::Before
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#166
    def build(callback_sequence, user_callback, user_conditions, chain_config, filter, name); end

    private

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#195
    def halting(callback_sequence, user_callback, halted_lambda, filter, name); end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#176
    def halting_and_conditional(callback_sequence, user_callback, user_conditions, halted_lambda, filter, name); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#163
class ActiveSupport::Callbacks::Filters::Environment < ::Struct
  def halted; end
  def halted=(_); end
  def target; end
  def target=(_); end
  def value; end
  def value=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/concern.rb#112
module ActiveSupport::Concern
  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#129
  def append_features(base); end

  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#209
  def class_methods(&class_methods_module_definition); end

  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#158
  def included(base = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#142
  def prepend_features(base); end

  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#175
  def prepended(base = T.unsafe(nil), &block); end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/concern.rb#125
    def extended(base); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/concern.rb#113
class ActiveSupport::Concern::MultipleIncludedBlocks < ::StandardError
  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#114
  def initialize; end
end

# source://activesupport/7.1.3.2/lib/active_support/concern.rb#119
class ActiveSupport::Concern::MultiplePrependBlocks < ::StandardError
  # source://activesupport/7.1.3.2/lib/active_support/concern.rb#120
  def initialize; end
end

# source://activesupport/7.1.3.2/lib/active_support/configurable.rb#11
module ActiveSupport::Configurable
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/configurable.rb#29
module ActiveSupport::Configurable::ClassMethods
  # source://activesupport/7.1.3.2/lib/active_support/configurable.rb#30
  def config; end

  # source://activesupport/7.1.3.2/lib/active_support/configurable.rb#39
  def configure; end

  private

  # source://activesupport/7.1.3.2/lib/active_support/configurable.rb#111
  def config_accessor(*names, instance_reader: T.unsafe(nil), instance_writer: T.unsafe(nil), instance_accessor: T.unsafe(nil), default: T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/configurable.rb#132
  def inherited(subclass); end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#7
module ActiveSupport::CoreExt::ERBUtil
  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#25
  def h(s); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#25
  def html_escape(s); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#10
  def unwrapped_html_escape(s); end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#31
module ActiveSupport::CoreExt::ERBUtilPrivate
  include ::ActiveSupport::CoreExt::ERBUtil

  private

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#25
  def h(s); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#25
  def html_escape(s); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#10
  def unwrapped_html_escape(s); end
end

# source://activesupport/7.1.3.2/lib/active_support/current_attributes.rb#91
class ActiveSupport::CurrentAttributes
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://activesupport/7.1.3.2/lib/active_support/deep_mergeable.rb#6
module ActiveSupport::DeepMergeable
  # source://activesupport/7.1.3.2/lib/active_support/deep_mergeable.rb#29
  def deep_merge(other, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/deep_mergeable.rb#34
  def deep_merge!(other, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/deep_mergeable.rb#49
  def deep_merge?(other); end
end

# source://activesupport/7.1.3.2/lib/active_support/dependencies/require_dependency.rb#3
module ActiveSupport::Dependencies::RequireDependency
  # source://activesupport/7.1.3.2/lib/active_support/dependencies/require_dependency.rb#11
  def require_dependency(filename); end
end

# source://activesupport/7.1.3.2/lib/active_support/deprecation/constant_accessor.rb#27
module ActiveSupport::Deprecation::DeprecatedConstantAccessor
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/deprecation/constant_accessor.rb#28
    def included(base); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#15
module ActiveSupport::DescendantsTracker
  # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#109
  def descendants; end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#79
    def clear(classes); end

    # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#104
    def descendants(klass); end

    # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#70
    def disable_clear!; end

    # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#90
    def reject!(classes); end

    # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#100
    def subclasses(klass); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#59
module ActiveSupport::DescendantsTracker::ReloadedClassesFiltering
  # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#64
  def descendants; end

  # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#60
  def subclasses; end
end

# source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#21
class ActiveSupport::DescendantsTracker::WeakSet < ::ObjectSpace::WeakMap
  # source://activesupport/7.1.3.2/lib/active_support/descendants_tracker.rb#24
  def <<(object); end

  def to_a; end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/enumerable.rb#5
module ActiveSupport::EnumerableCoreExt::Constants
  private

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/enumerable.rb#7
  def const_missing(name); end
end

# source://activesupport/7.1.3.2/lib/active_support/execution_wrapper.rb#8
class ActiveSupport::ExecutionWrapper
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#43
module ActiveSupport::LazyLoadHooks
  # source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#60
  def on_load(name, options = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#75
  def run_load_hooks(name, base = T.unsafe(nil)); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#91
  def execute_hook(name, base, options, block); end

  # source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#83
  def with_execution_control(name, block, once); end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/lazy_load_hooks.rb#44
    def extended(base); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/logger_silence.rb#8
module ActiveSupport::LoggerSilence
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/logger_thread_safe_level.rb#7
module ActiveSupport::LoggerThreadSafeLevel
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/number_helper.rb#4
module ActiveSupport::NumberHelper
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::NumberHelper
end

# source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#11
module ActiveSupport::Rescuable
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#18
module ActiveSupport::Rescuable::ClassMethods
  # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#105
  def handler_for_rescue(exception, object: T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#53
  def rescue_from(*klasses, with: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#90
  def rescue_with_handler(exception, object: T.unsafe(nil), visited_exceptions: T.unsafe(nil)); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#139
  def constantize_rescue_handler_class(class_or_name); end

  # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#124
  def find_rescue_handler(exception); end
end

# source://activesupport/7.1.3.2/lib/active_support/test_case.rb#20
class ActiveSupport::TestCase < ::Minitest::Test
  include ::ActiveSupport::Testing::SetupAndTeardown
  include ::ActiveSupport::Testing::TaggedLogging
  include ::ActiveSupport::Callbacks
  include ::ActiveSupport::Testing::Assertions
  include ::ActiveSupport::Testing::ErrorReporterAssertions
  include ::ActiveSupport::Testing::Deprecation
  include ::ActiveSupport::Testing::ConstantStubbing
  include ::ActiveSupport::Testing::TimeHelpers
  include ::ActiveSupport::Testing::FileFixtures
  include ::Turbo::TestAssertions
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
  extend ::ActiveSupport::Testing::SetupAndTeardown::ClassMethods
  extend ::ActiveSupport::Testing::Declarative
end

# source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#7
module ActiveSupport::Testing::Assertions
  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#191
  def assert_changes(expression, message = T.unsafe(nil), from: T.unsafe(nil), to: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#101
  def assert_difference(expression, *args, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#238
  def assert_no_changes(expression, message = T.unsafe(nil), from: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#153
  def assert_no_difference(expression, message = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#21
  def assert_not(object, message = T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#48
  def assert_nothing_raised; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#34
  def assert_raise(*exp, match: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#34
  def assert_raises(*exp, match: T.unsafe(nil), &block); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#265
  def _assert_nothing_raised_or_warn(assertion, &block); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/assertions.rb#8
ActiveSupport::Testing::Assertions::UNTRACKED = T.let(T.unsafe(nil), Object)

# source://activesupport/7.1.3.2/lib/active_support/testing/constant_lookup.rb#32
module ActiveSupport::Testing::ConstantLookup
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/testing/constant_lookup.rb#35
module ActiveSupport::Testing::ConstantLookup::ClassMethods
  # source://activesupport/7.1.3.2/lib/active_support/testing/constant_lookup.rb#36
  def determine_constant_from_test_name(test_name); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/constant_stubbing.rb#5
module ActiveSupport::Testing::ConstantStubbing
  # source://activesupport/7.1.3.2/lib/active_support/testing/constant_stubbing.rb#21
  def stub_const(mod, constant, new_value); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/declarative.rb#5
module ActiveSupport::Testing::Declarative
  # source://activesupport/7.1.3.2/lib/active_support/testing/declarative.rb#13
  def test(name, &block); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/deprecation.rb#7
module ActiveSupport::Testing::Deprecation
  # source://activesupport/7.1.3.2/lib/active_support/testing/deprecation.rb#30
  def assert_deprecated(match = T.unsafe(nil), deprecator = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/deprecation.rb#54
  def assert_not_deprecated(deprecator = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/deprecation.rb#72
  def collect_deprecations(deprecator = T.unsafe(nil)); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#5
module ActiveSupport::Testing::ErrorReporterAssertions
  # source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#88
  def assert_error_reported(error_class = T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#62
  def assert_no_error_reported(&block); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#6
module ActiveSupport::Testing::ErrorReporterAssertions::ErrorCollector
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#16
    def record; end

    # source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#29
    def report(error, **kwargs); end

    private

    # source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#38
    def subscribe; end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/error_reporter_assertions.rb#10
class ActiveSupport::Testing::ErrorReporterAssertions::ErrorCollector::Report < ::Struct
  def context; end
  def context=(_); end
  def error; end
  def error=(_); end
  def handled; end
  def handled=(_); end
  def handled?; end
  def severity; end
  def severity=(_); end
  def source; end
  def source=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/file_fixtures.rb#16
module ActiveSupport::Testing::FileFixtures
  extend ::ActiveSupport::Concern
end

# source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#20
module ActiveSupport::Testing::SetupAndTeardown
  # source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#44
  def after_teardown; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#39
  def before_setup; end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#21
    def prepended(klass); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#27
module ActiveSupport::Testing::SetupAndTeardown::ClassMethods
  # source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#29
  def setup(*args, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/setup_and_teardown.rb#34
  def teardown(*args, &block); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/stream.rb#5
module ActiveSupport::Testing::Stream
  private

  # source://activesupport/7.1.3.2/lib/active_support/testing/stream.rb#23
  def capture(stream); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/stream.rb#17
  def quietly(&block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/stream.rb#7
  def silence_stream(stream); end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/tagged_logging.rb#7
module ActiveSupport::Testing::TaggedLogging
  # source://activesupport/7.1.3.2/lib/active_support/testing/tagged_logging.rb#10
  def before_setup; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/tagged_logging.rb#8
  def tagged_logger=(_arg0); end

  private

  # source://activesupport/7.1.3.2/lib/active_support/testing/tagged_logging.rb#22
  def tagged_logger; end
end

# source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#68
module ActiveSupport::Testing::TimeHelpers
  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#69
  def after_teardown; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#256
  def freeze_time(with_usec: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#97
  def travel(duration, with_usec: T.unsafe(nil), &block); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#230
  def travel_back; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#133
  def travel_to(date_or_time, with_usec: T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#230
  def unfreeze_time; end

  private

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#265
  def in_block; end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#265
  def in_block=(_arg0); end

  # source://activesupport/7.1.3.2/lib/active_support/testing/time_helpers.rb#261
  def simple_stubs; end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/object/json.rb#35
module ActiveSupport::ToJsonWithActiveSupportEncoder
  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/json.rb#36
  def to_json(options = T.unsafe(nil)); end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/object/try.rb#6
module ActiveSupport::Tryable
  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/try.rb#7
  def try(*args, **_arg1, &block); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/try.rb#20
  def try!(*args, **_arg1, &block); end
end

class AfterContentForm < ::ApplicationForm; end
class ApplicationForm < ::Primer::Forms::Base; end

# source://yard/0.9.36/lib/yard/core_ext/array.rb#2
class Array
  include ::Enumerable
  include ::MessagePack::CoreExt
end

class ArrayCheckBoxGroupForm < ::ApplicationForm; end
class AutoCompleteForm < ::ApplicationForm; end
class BothTypesOfCaptionForm < ::ApplicationForm; end
class CaptionTemplateForm < ::ApplicationForm; end
class CheckBoxGroupForm < ::ApplicationForm; end
class CheckBoxWithNestedForm < ::ApplicationForm; end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/class/attribute.rb#5
class Class < ::Module
  include ::ActiveSupport::DescendantsTracker::ReloadedClassesFiltering
end

class ComposedForm < ::ApplicationForm; end
class CustomCitiesForm < ::ApplicationForm; end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/object/try.rb#117
class Delegator < ::BasicObject
  include ::ActiveSupport::Tryable
end

module ERB::Escape
  private

  def html_escape(_arg0); end

  class << self
    def html_escape(_arg0); end
  end
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/erb/util.rb#39
module ERB::Util
  include ::ActiveSupport::CoreExt::ERBUtil
  include ::ActiveSupport::CoreExt::ERBUtilPrivate
  extend ::ActiveSupport::CoreExt::ERBUtil
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/object/json.rb#147
module Enumerable
  include ::ActiveSupport::ToJsonWithActiveSupportEncoder
  extend ::ActiveSupport::EnumerableCoreExt::Constants
end

# source://erubi/1.13.0/lib/erubi.rb#51
class Erubi::Engine
  # source://erubi/1.13.0/lib/erubi.rb#91
  def initialize(input, properties = T.unsafe(nil)); end

  # source://erubi/1.13.0/lib/erubi.rb#62
  def bufvar; end

  # source://erubi/1.13.0/lib/erubi.rb#59
  def filename; end

  # source://erubi/1.13.0/lib/erubi.rb#56
  def src; end

  private

  # source://erubi/1.13.0/lib/erubi.rb#223
  def add_code(code); end

  # source://erubi/1.13.0/lib/erubi.rb#232
  def add_expression(indicator, code); end

  # source://erubi/1.13.0/lib/erubi.rb#241
  def add_expression_result(code); end

  # source://erubi/1.13.0/lib/erubi.rb#246
  def add_expression_result_escaped(code); end

  # source://erubi/1.13.0/lib/erubi.rb#252
  def add_postamble(postamble); end

  # source://erubi/1.13.0/lib/erubi.rb#210
  def add_text(text); end

  # source://erubi/1.13.0/lib/erubi.rb#258
  def handle(indicator, code, tailch, rspace, lspace); end

  # source://erubi/1.13.0/lib/erubi.rb#286
  def terminate_expression; end

  # source://erubi/1.13.0/lib/erubi.rb#268
  def with_buffer; end
end

# source://erubi/1.13.0/lib/erubi.rb#53
Erubi::Engine::DEFAULT_REGEXP = T.let(T.unsafe(nil), Regexp)

class ExampleToggleSwitchForm < ::Primer::Forms::ToggleSwitchForm
  def initialize(**system_arguments); end
end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#37
class FalseClass
  include ::MessagePack::CoreExt
end

class FirstNameForm < ::ApplicationForm; end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#47
class Float < ::Numeric
  include ::MessagePack::CoreExt
end

class FriendForm < ::ApplicationForm; end
class FriendTextAreaForm < ::ApplicationForm; end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#77
class Hash
  include ::Enumerable
  include ::MessagePack::CoreExt
  include ::ActiveSupport::DeepMergeable
end

class HorizontalForm < ::ApplicationForm; end

module Hotwire::Livereload::LivereloadTagsHelper
  def hotwire_livereload_tags; end
end

class ImmediateValidationForm < ::ApplicationForm; end

module Importmap::ImportmapTagsHelper
  def javascript_import_module_tag(*module_names); end
  def javascript_importmap_module_preload_tags(importmap = T.unsafe(nil)); end
  def javascript_importmap_tags(entry_point = T.unsafe(nil), importmap: T.unsafe(nil)); end
  def javascript_inline_importmap_tag(importmap_json = T.unsafe(nil)); end
  def javascript_module_preload_tag(*paths); end
end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#98
class Integer < ::Numeric
  include ::MessagePack::CoreExt
end

class InvalidForm < ::ApplicationForm; end
class LastNameForm < ::ApplicationForm; end

# source://lookbook/2.3.2/lib/lookbook/entities/concerns/annotatable_entity.rb#2
module Lookbook::AnnotatableEntity
  extend ::ActiveSupport::Concern
end

class Lookbook::ApplicationController < ::ActionController::Base
  def index; end
  def not_found; end

  protected

  def assign_instance_vars; end
  def assign_theme_overrides; end
  def current_layout; end
  def handle_error(err); end
  def raise_not_found(message = T.unsafe(nil)); end

  private

  # source://actionview/7.1.3.2/lib/action_view/layouts.rb#330
  def _layout(lookup_context, formats); end

  def _layout_from_proc; end
  def get_status_code(err); end
  def sidebar_panels; end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://actionview/7.1.3.2/lib/action_view/layouts.rb#211
    def _layout; end

    # source://actionview/7.1.3.2/lib/action_view/layouts.rb#212
    def _layout_conditions; end

    def controller_path; end

    # source://actionpack/7.1.3.2/lib/action_controller/metal.rb#262
    def middleware_stack; end

    # source://activesupport/7.1.3.2/lib/active_support/rescuable.rb#15
    def rescue_handlers; end
  end
end

module Lookbook::ApplicationController::HelperMethods
  include ::Primer::FormHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ViteRails::TagHelpers
  include ::ActionController::Base::HelperMethods
  include ::Lookbook::ApplicationHelper
  include ::Lookbook::UiElementsHelper
end

module Lookbook::ApplicationHelper
  def frame_request?; end
  def lookbook_asset_path(file, version: T.unsafe(nil)); end
  def lookbook_landing_path; end
  def request_frame; end
end

class Lookbook::BaseComponent < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Lookbook::UiElementsHelper
end

class Lookbook::EmbedsController < ::Lookbook::ApplicationController
  include ::ActionView::Helpers::SanitizeHelper
  include ::Lookbook::TargetableConcern
  include ::Lookbook::WithPreviewControllerConcern
  extend ::ActionView::Helpers::SanitizeHelper::ClassMethods
end

# source://lookbook/2.3.2/lib/lookbook/entities/entity.rb#5
class Lookbook::Entity
  include ::Comparable
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
end

# source://lookbook/2.3.2/lib/lookbook/entities/collections/concerns/hierarchical_collection.rb#2
module Lookbook::HierarchicalCollection
  extend ::ActiveSupport::Concern
end

# source://lookbook/2.3.2/lib/lookbook/entities/concerns/inspectable_entity.rb#2
module Lookbook::InspectableEntity
  extend ::ActiveSupport::Concern
end

# source://lookbook/2.3.2/lib/lookbook/entities/concerns/locatable_entity.rb#2
module Lookbook::LocatableEntity
  extend ::ActiveSupport::Concern
end

# source://lookbook/2.3.2/lib/lookbook/entities/concerns/navigable_entity.rb#2
module Lookbook::NavigableEntity
  extend ::ActiveSupport::Concern
end

module Lookbook::PageController::HelperMethods
  include ::Primer::FormHelper
  include ::Hotwire::Livereload::LivereloadTagsHelper
  include ::Importmap::ImportmapTagsHelper
  include ::Turbo::DriveHelper
  include ::Turbo::FramesHelper
  include ::Turbo::IncludesHelper
  include ::Turbo::StreamsHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
  include ::ViteRails::TagHelpers
  include ::ActionController::Base::HelperMethods
  include ::Primer::Yard::LookbookDocsHelper
  include ::Lookbook::PageHelper
  include ::Lookbook::UiElementsHelper
end

# source://lookbook/2.3.2/lib/lookbook/helpers/page_helper.rb#5
module Lookbook::PageHelper
  include ::Primer::Yard::LookbookDocsHelper
end

# source://lookbook/2.3.2/lib/lookbook/preview.rb#2
class Lookbook::Preview
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  extend ::Lookbook::PreviewAfterRender
end

# source://lookbook/2.3.2/lib/lookbook/preview_after_render.rb#3
module Lookbook::PreviewAfterRender
  # source://lookbook/2.3.2/lib/lookbook/preview_after_render.rb#4
  def after_render(method:, html:, context:); end
end

# source://lookbook/2.3.2/lib/lookbook/preview_controller_actions.rb#2
module Lookbook::PreviewControllerActions
  extend ::ActiveSupport::Concern
end

class Lookbook::TagComponent < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Lookbook::UiElementsHelper
end

module Lookbook::TargetableConcern
  extend ::ActiveSupport::Concern
end

# source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#8
module Lookbook::UiElementsHelper
  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#32
  def code(language = T.unsafe(nil), **opts, &block); end

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#20
  def icon(name, **opts); end

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#48
  def lookbook_render(ref, **attrs, &block); end

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#43
  def lookbook_tag(tag = T.unsafe(nil), **attrs, &block); end

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#38
  def prose(**opts, &block); end

  private

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#76
  def component_class(ref); end

  # source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#67
  def render_method_name; end
end

# source://lookbook/2.3.2/lib/lookbook/helpers/ui_elements_helper.rb#64
Lookbook::UiElementsHelper::COMPONENT_CLASSES = T.let(T.unsafe(nil), Hash)

module Lookbook::WithPanelsConcern
  extend ::ActiveSupport::Concern
end

module Lookbook::WithPreviewControllerConcern
  extend ::ActiveSupport::Concern
end

# source://minitest/5.25.1/lib/minitest/assertions.rb#16
module Minitest::Assertions
  # source://minitest/5.25.1/lib/minitest/assertions.rb#181
  def _synchronize; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#194
  def _where; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#171
  def assert(test, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#188
  def assert_empty(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#214
  def assert_equal(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#235
  def assert_in_delta(exp, act, delta = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#247
  def assert_in_epsilon(exp, act, epsilon = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#254
  def assert_includes(collection, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#265
  def assert_instance_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#276
  def assert_kind_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#287
  def assert_match(matcher, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#299
  def assert_nil(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#309
  def assert_operator(o1, op, o2 = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#327
  def assert_output(stdout = T.unsafe(nil), stderr = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#351
  def assert_path_exists(path, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#370
  def assert_pattern; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#391
  def assert_predicate(o1, op, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#418
  def assert_raises(*exp); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#450
  def assert_respond_to(obj, meth, msg = T.unsafe(nil), include_all: T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#460
  def assert_same(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#473
  def assert_send(send_ary, m = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#488
  def assert_silent; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#497
  def assert_throws(sym, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#538
  def capture_io; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#571
  def capture_subprocess_io; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#57
  def diff(exp, act); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#603
  def exception_details(e, msg); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#619
  def fail_after(y, m, d, msg); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#626
  def flunk(msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#634
  def message(msg = T.unsafe(nil), ending = T.unsafe(nil), &default); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#127
  def mu_pp(obj); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#145
  def mu_pp_for_diff(obj); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#645
  def pass(_msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#652
  def refute(test, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#660
  def refute_empty(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#671
  def refute_equal(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#683
  def refute_in_delta(exp, act, delta = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#695
  def refute_in_epsilon(a, b, epsilon = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#702
  def refute_includes(collection, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#713
  def refute_instance_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#723
  def refute_kind_of(cls, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#731
  def refute_match(matcher, obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#741
  def refute_nil(obj, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#776
  def refute_operator(o1, op, o2 = T.unsafe(nil), msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#785
  def refute_path_exists(path, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#758
  def refute_pattern; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#799
  def refute_predicate(o1, op, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#808
  def refute_respond_to(obj, meth, msg = T.unsafe(nil), include_all: T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#817
  def refute_same(exp, act, msg = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#830
  def skip(msg = T.unsafe(nil), _ignored = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#842
  def skip_until(y, m, d, msg); end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#851
  def skipped?; end

  # source://minitest/5.25.1/lib/minitest/assertions.rb#102
  def things_to_diff(exp, act); end

  class << self
    # source://minitest/5.25.1/lib/minitest/assertions.rb#27
    def diff; end

    # source://minitest/5.25.1/lib/minitest/assertions.rb#45
    def diff=(o); end
  end
end

# source://minitest/5.25.1/lib/minitest/assertions.rb#199
Minitest::Assertions::E = T.let(T.unsafe(nil), String)

# source://minitest/5.25.1/lib/minitest/assertions.rb#17
Minitest::Assertions::UNDEFINED = T.let(T.unsafe(nil), Object)

# source://minitest/5.25.1/lib/minitest/expectations.rb#20
module Minitest::Expectations
  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_close_to(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_empty(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_instance_of(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_kind_of(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_nil(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_same_as(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_silent(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_within_delta(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_be_within_epsilon(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_equal(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_include(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_match(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_output(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_pattern_match(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_raise(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_respond_to(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def must_throw(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def path_must_exist(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def path_wont_exist(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_close_to(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_empty(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_instance_of(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_kind_of(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_nil(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_same_as(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_within_delta(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_be_within_epsilon(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_equal(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_include(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_match(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_pattern_match(*args, **_arg1); end

  # source://minitest/5.25.1/lib/minitest/spec.rb#15
  def wont_respond_to(*args, **_arg1); end
end

# source://minitest/5.25.1/lib/minitest.rb#1118
module Minitest::Guard
  # source://minitest/5.25.1/lib/minitest.rb#1123
  def jruby?(platform = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest.rb#1130
  def maglev?(platform = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest.rb#1140
  def mri?(platform = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest.rb#1147
  def osx?(platform = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest.rb#1154
  def rubinius?(platform = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest.rb#1164
  def windows?(platform = T.unsafe(nil)); end
end

# source://minitest/5.25.1/lib/minitest.rb#580
module Minitest::Reportable
  # source://minitest/5.25.1/lib/minitest.rb#602
  def class_name; end

  # source://minitest/5.25.1/lib/minitest.rb#623
  def error?; end

  # source://minitest/5.25.1/lib/minitest.rb#597
  def location; end

  # source://minitest/5.25.1/lib/minitest.rb#587
  def passed?; end

  # source://minitest/5.25.1/lib/minitest.rb#609
  def result_code; end

  # source://minitest/5.25.1/lib/minitest.rb#616
  def skipped?; end
end

# source://minitest/5.25.1/lib/minitest.rb#591
Minitest::Reportable::BASE_DIR = T.let(T.unsafe(nil), String)

# source://minitest/5.25.1/lib/minitest.rb#635
class Minitest::Result < ::Minitest::Runnable
  include ::Minitest::Reportable
end

# source://minitest/5.25.1/lib/minitest.rb#348
class Minitest::Runnable
  # source://minitest/5.25.1/lib/minitest.rb#511
  def initialize(name); end

  # source://minitest/5.25.1/lib/minitest.rb#352
  def assertions; end

  # source://minitest/5.25.1/lib/minitest.rb#352
  def assertions=(_arg0); end

  # source://minitest/5.25.1/lib/minitest.rb#507
  def failure; end

  # source://minitest/5.25.1/lib/minitest.rb#357
  def failures; end

  # source://minitest/5.25.1/lib/minitest.rb#357
  def failures=(_arg0); end

  # source://minitest/5.25.1/lib/minitest.rb#493
  def marshal_dump; end

  # source://minitest/5.25.1/lib/minitest.rb#503
  def marshal_load(ary); end

  # source://minitest/5.25.1/lib/minitest.rb#526
  def metadata; end

  # source://minitest/5.25.1/lib/minitest.rb#533
  def metadata=(_arg0); end

  # source://minitest/5.25.1/lib/minitest.rb#538
  def metadata?; end

  # source://minitest/5.25.1/lib/minitest.rb#375
  def name; end

  # source://minitest/5.25.1/lib/minitest.rb#382
  def name=(o); end

  # source://minitest/5.25.1/lib/minitest.rb#555
  def passed?; end

  # source://minitest/5.25.1/lib/minitest.rb#564
  def result_code; end

  # source://minitest/5.25.1/lib/minitest.rb#545
  def run; end

  # source://minitest/5.25.1/lib/minitest.rb#571
  def skipped?; end

  # source://minitest/5.25.1/lib/minitest.rb#362
  def time; end

  # source://minitest/5.25.1/lib/minitest.rb#362
  def time=(_arg0); end

  # source://minitest/5.25.1/lib/minitest.rb#364
  def time_it; end

  class << self
    # source://minitest/5.25.1/lib/minitest.rb#1225
    def inherited(klass); end

    # source://minitest/5.25.1/lib/minitest.rb#389
    def methods_matching(re); end

    # source://minitest/5.25.1/lib/minitest.rb#463
    def on_signal(name, action); end

    # source://minitest/5.25.1/lib/minitest.rb#393
    def reset; end

    # source://minitest/5.25.1/lib/minitest.rb#404
    def run(reporter, options = T.unsafe(nil)); end

    # source://minitest/5.25.1/lib/minitest.rb#444
    def run_one_method(klass, method_name, reporter); end

    # source://minitest/5.25.1/lib/minitest.rb#480
    def runnable_methods; end

    # source://minitest/5.25.1/lib/minitest.rb#487
    def runnables; end

    # source://minitest/5.25.1/lib/minitest.rb#453
    def test_order; end

    # source://minitest/5.25.1/lib/minitest.rb#457
    def with_info_handler(reporter, &block); end
  end
end

# source://minitest/5.25.1/lib/minitest.rb#461
Minitest::Runnable::SIGNALS = T.let(T.unsafe(nil), Hash)

# source://minitest/5.25.1/lib/minitest/test.rb#10
class Minitest::Test < ::Minitest::Runnable
  include ::Minitest::Assertions
  include ::Minitest::Reportable
  include ::Minitest::Test::LifecycleHooks
  include ::Minitest::Guard
  extend ::Minitest::Guard

  # source://minitest/5.25.1/lib/minitest/test.rb#189
  def capture_exceptions; end

  # source://minitest/5.25.1/lib/minitest/test.rb#15
  def class_name; end

  # source://minitest/5.25.1/lib/minitest/test.rb#206
  def neuter_exception(e); end

  # source://minitest/5.25.1/lib/minitest/test.rb#217
  def new_exception(klass, msg, bt, kill = T.unsafe(nil)); end

  # source://minitest/5.25.1/lib/minitest/test.rb#87
  def run; end

  # source://minitest/5.25.1/lib/minitest/test.rb#199
  def sanitize_exception(e); end

  class << self
    # source://minitest/5.25.1/lib/minitest/test.rb#35
    def i_suck_and_my_tests_are_order_dependent!; end

    # source://minitest/5.25.1/lib/minitest/test.rb#26
    def io_lock; end

    # source://minitest/5.25.1/lib/minitest/test.rb#26
    def io_lock=(_arg0); end

    # source://minitest/5.25.1/lib/minitest/test.rb#48
    def make_my_diffs_pretty!; end

    # source://minitest/5.25.1/lib/minitest/test.rb#60
    def parallelize_me!; end

    # source://minitest/5.25.1/lib/minitest/test.rb#70
    def runnable_methods; end
  end
end

# source://minitest/5.25.1/lib/minitest/test.rb#112
module Minitest::Test::LifecycleHooks
  # source://minitest/5.25.1/lib/minitest/test.rb#162
  def after_setup; end

  # source://minitest/5.25.1/lib/minitest/test.rb#186
  def after_teardown; end

  # source://minitest/5.25.1/lib/minitest/test.rb#147
  def before_setup; end

  # source://minitest/5.25.1/lib/minitest/test.rb#171
  def before_teardown; end

  # source://minitest/5.25.1/lib/minitest/test.rb#153
  def setup; end

  # source://minitest/5.25.1/lib/minitest/test.rb#177
  def teardown; end
end

# source://minitest/5.25.1/lib/minitest/test.rb#19
Minitest::Test::PASSTHROUGH_EXCEPTIONS = T.let(T.unsafe(nil), Array)

# source://minitest/5.25.1/lib/minitest/test.rb#21
Minitest::Test::SETUP_METHODS = T.let(T.unsafe(nil), Array)

# source://minitest/5.25.1/lib/minitest/test.rb#23
Minitest::Test::TEARDOWN_METHODS = T.let(T.unsafe(nil), Array)

class MultiInputForm < ::ApplicationForm; end
class MultiTextFieldForm < ::ApplicationForm; end
class NameWithQuestionMarkForm < ::ApplicationForm; end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#17
class NilClass
  include ::MessagePack::CoreExt
end

# source://activesupport/7.1.3.2/lib/active_support/core_ext/object/blank.rb#5
class Object < ::BasicObject
  include ::ActiveSupport::ToJsonWithActiveSupportEncoder
  include ::ActiveSupport::Dependencies::RequireDependency
  include ::Kernel
  include ::PP::ObjectMixin
  include ::ActiveSupport::Tryable
  include ::Minitest::Expectations

  # source://pry/0.14.2/lib/pry/core_extensions.rb#70
  def __binding__; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/acts_like.rb#33
  def acts_like?(duck); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/json.rb#59
  def as_json(options = T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/blank.rb#18
  def blank?; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/deep_dup.rb#15
  def deep_dup; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/duplicable.rb#26
  def duplicable?; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/string/output_safety.rb#7
  def html_safe?; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/inclusion.rb#15
  def in?(another_object); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/instance_variables.rb#14
  def instance_values; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/instance_variables.rb#30
  def instance_variable_names; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/blank.rb#45
  def presence; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/inclusion.rb#34
  def presence_in(another_object); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/blank.rb#25
  def present?; end

  # source://pry/0.14.2/lib/pry/core_extensions.rb#43
  def pry(object = T.unsafe(nil), hash = T.unsafe(nil)); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/to_query.rb#7
  def to_param; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/to_query.rb#13
  def to_query(key); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/with.rb#24
  def with(**attributes); end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/object/with_options.rb#92
  def with_options(options, &block); end

  private

  # source://domain_name/0.6.20240107/lib/domain_name.rb#298
  def DomainName(hostname); end

  # source://nokogiri/1.16.7/lib/nokogiri.rb#108
  def Nokogiri(*args, &block); end

  # source://yard/0.9.36/lib/yard/globals.rb#8
  def P(namespace, name = T.unsafe(nil), type = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/globals.rb#20
  def log; end
end

# :nocov:
#
# source://primer_view_components//lib/primer/classify/utilities.rb#6
module Primer; end

# source://primer_view_components//lib/primer/yard/component_manifest.rb#0
module Primer::Alpha; end

class Primer::Alpha::ActionBar < ::Primer::Component
  def initialize(size: T.unsafe(nil), overflow_menu: T.unsafe(nil), **system_arguments); end

  def _call_item_divider; end
  def _call_item_icon_button(icon:, label:, item_arguments: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def items?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_item_divider(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_item_divider_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_item_icon_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_item_icon_button_content(content); end

  private

  def before_render; end
  def render?; end
  def render_overflow_menu?; end
  def with_menu_item(id:, **system_arguments, &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionBar::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionBar::Divider < ::Primer::Component
  def initialize; end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionBar::Item < ::Primer::Component
  def initialize(item_content, **item_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionBar::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionBar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList < ::Primer::Component
  def initialize(id: T.unsafe(nil), role: T.unsafe(nil), item_classes: T.unsafe(nil), scheme: T.unsafe(nil), show_dividers: T.unsafe(nil), aria_selection_variant: T.unsafe(nil), select_variant: T.unsafe(nil), form_arguments: T.unsafe(nil), **system_arguments); end

  def _call_avatar_item(**system_arguments); end
  def _call_heading(component_klass: T.unsafe(nil), **system_arguments); end
  def _call_item(**system_arguments); end
  def _call_primer__alpha__action_list; end
  def acts_as_form_input?; end
  def acts_as_listbox?; end
  def acts_as_menu?; end
  def allows_selection?; end
  def aria_selection_variant; end
  def before_render; end
  def build_avatar_item(src:, username:, full_name: T.unsafe(nil), full_name_scheme: T.unsafe(nil), component_klass: T.unsafe(nil), avatar_arguments: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments); end
  def call; end
  def custom_element_name; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  def id; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def items?; end

  def multi_select?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  def required_form_arguments_given?; end
  def role; end
  def select_variant; end
  def single_select?; end
  def will_add_item(_item); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_avatar_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_avatar_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_divider(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_divider_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_item_content(content); end

  private

  def post_list_content_block; end
  def with_post_list_content(&block); end

  class << self
    def audit_date; end
    def component_status; end
    def custom_element_name; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::ARIA_SELECTION_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::DEFAULT_ARIA_SELECTION_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_MENU_ITEM_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionList::Divider < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), **system_arguments); end

  def _call_primer__alpha__action_list__divider; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Divider::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Divider::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Divider::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::FormWrapper < ::Primer::Component
  def initialize(list:, action: T.unsafe(nil), **form_arguments); end

  def form_required?; end
  def get?; end
  def render_inputs?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def extract_http_method(args); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::FormWrapper::DEFAULT_HTTP_METHOD = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::FormWrapper::HTTP_METHOD_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::Heading < ::Primer::Component
  def initialize(title:, heading_level: T.unsafe(nil), scheme: T.unsafe(nil), subtitle: T.unsafe(nil), **system_arguments); end

  def _call_primer__alpha__action_list__heading; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  def subtitle?; end
  def subtitle_id; end
  def title_id; end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Heading::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Heading::HEADING_LEVELS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Heading::HEADING_MAX = T.let(T.unsafe(nil), Integer)
Primer::Alpha::ActionList::Heading::HEADING_MIN = T.let(T.unsafe(nil), Integer)
Primer::Alpha::ActionList::Heading::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Heading::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionList::Item < ::Primer::Component
  def initialize(list:, label: T.unsafe(nil), item_id: T.unsafe(nil), label_classes: T.unsafe(nil), label_arguments: T.unsafe(nil), content_arguments: T.unsafe(nil), form_arguments: T.unsafe(nil), parent: T.unsafe(nil), truncate_label: T.unsafe(nil), href: T.unsafe(nil), role: T.unsafe(nil), size: T.unsafe(nil), scheme: T.unsafe(nil), disabled: T.unsafe(nil), description_scheme: T.unsafe(nil), active: T.unsafe(nil), on_click: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_description(legacy_content = T.unsafe(nil), test_selector: T.unsafe(nil)); end
  def _call_leading_visual_avatar(*_arg0); end
  def _call_leading_visual_content(**system_arguments); end
  def _call_leading_visual_icon(**system_arguments, &block); end
  def _call_leading_visual_svg(**system_arguments); end
  def _call_primer__alpha__action_list__item; end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_action(**system_arguments); end
  def _call_trailing_visual_text(text); end
  def active; end
  def active?; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def description?; end

  def disabled; end
  def disabled?; end
  def href; end
  def id; end
  def item_id; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  def list; end
  def parent; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def private_content; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def private_content?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def private_leading_action_icon; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def private_leading_action_icon?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def private_trailing_action_icon; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def private_trailing_action_icon?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def trailing_action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def trailing_action?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_avatar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_avatar_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_content_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_raw_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_raw_content_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_svg(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_svg_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_private_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_private_content_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_private_leading_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_private_leading_action_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_private_trailing_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_private_trailing_action_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_trailing_action(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_trailing_action_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_text(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_text_content(content); end

  private

  def before_render; end
  def list_class; end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionList::Item::DEFAULT_DESCRIPTION_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DEFAULT_TRUNCATION_BEHAVIOR = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::Item::DESCRIPTION_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::DESCRIPTION_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::Item::TRUNCATION_BEHAVIOR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::Item::TRUNCATION_BEHAVIOR_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::LIST_BOX_ITEM_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::MENU_ROLE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionList::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ActionList::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ActionList::SELECT_VARIANT_ROLE_MAP = T.let(T.unsafe(nil), Hash)

class Primer::Alpha::ActionMenu < ::Primer::Component
  def initialize(menu_id: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_side: T.unsafe(nil), size: T.unsafe(nil), src: T.unsafe(nil), preload: T.unsafe(nil), dynamic_label: T.unsafe(nil), dynamic_label_prefix: T.unsafe(nil), select_variant: T.unsafe(nil), form_arguments: T.unsafe(nil), overlay_arguments: T.unsafe(nil), **system_arguments); end

  def list; end
  def preload; end
  def preload?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_avatar_item(**system_arguments, &block); end
  def with_divider(**system_arguments, &block); end
  def with_group(**system_arguments, &block); end
  def with_item(**system_arguments, &block); end
  def with_show_button(**system_arguments, &block); end

  private

  def before_render; end
  def render?; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::DEFAULT_PRELOAD = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::ActionMenu::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::ActionMenu::Group < ::Primer::Alpha::ActionList
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_divider; end
  def with_heading(**system_arguments, &block); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionMenu::Heading < ::Primer::Alpha::ActionList::Heading
  def initialize(**_arg0); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ActionMenu::List < ::Primer::Component
  def initialize(**system_arguments); end

  def items; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_avatar_item(**system_arguments, &block); end
  def with_divider(**system_arguments, &block); end
  def with_group(**system_arguments, &block); end
  def with_item(**system_arguments, &block); end

  private

  def add_item(item, to:); end
  def before_render; end
  def contains_group?; end
  def organize_arguments(data: T.unsafe(nil), **system_arguments); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::List::DEFAULT_ITEM_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ActionMenu::List::ITEM_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ActionMenu::ListWrapper < ::Primer::Alpha::ActionList
  def initialize(menu_id:, **system_arguments); end

  def _call_group(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_group(**system_arguments, &block); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ActionMenu::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::AutoComplete < ::Primer::Component
  def initialize(label_text:, src:, list_id:, input_id:, input_name: T.unsafe(nil), is_label_visible: T.unsafe(nil), is_label_inline: T.unsafe(nil), with_icon: T.unsafe(nil), is_clearable: T.unsafe(nil), **system_arguments); end

  def _call_input(**system_arguments); end
  def _call_results(**system_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def input; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def input?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def results; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def results?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_input(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_input_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_results(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_results_content(content); end

  private

  def label_classes(**args); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::AutoComplete::Item < ::Primer::Component
  def initialize(value:, selected: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Banner < ::Primer::Component
  def initialize(tag: T.unsafe(nil), full: T.unsafe(nil), full_when_narrow: T.unsafe(nil), dismiss_scheme: T.unsafe(nil), dismiss_label: T.unsafe(nil), description: T.unsafe(nil), icon: T.unsafe(nil), scheme: T.unsafe(nil), **system_arguments); end

  def _call_action_button(**system_arguments); end
  def _call_action_content(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def action?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_action_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_action_button_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_action_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_action_content_content(content); end

  private

  def catalyst_action(event:, function:); end
  def catalyst_target(field:); end
  def custom_element_name; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Banner::DEFAULT_DISMISS_LABEL = T.let(T.unsafe(nil), String)
Primer::Alpha::Banner::DEFAULT_DISMISS_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DEFAULT_ICONS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Banner::DISMISS_SCHEMES = T.let(T.unsafe(nil), Array)
Primer::Alpha::Banner::LEGACY_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Banner::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ButtonMarketing < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), variant: T.unsafe(nil), tag: T.unsafe(nil), type: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ButtonMarketing::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ButtonMarketing::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ButtonMarketing::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ButtonMarketing::VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ButtonMarketing::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dialog < ::Primer::Component
  def initialize(title:, subtitle: T.unsafe(nil), size: T.unsafe(nil), position: T.unsafe(nil), position_narrow: T.unsafe(nil), visually_hide_title: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_header(show_divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end
  def _call_show_button(icon: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def header?; end

  def id; end
  def labelledby; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def show_button?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dialog::Body < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dialog::DEFAULT_POSITION = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::DEFAULT_POSITION_NARROW = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::Dialog::Footer < ::Primer::Component
  def initialize(show_divider: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dialog::Header < ::Primer::Component
  def initialize(id:, title:, subtitle: T.unsafe(nil), show_divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), variant: T.unsafe(nil), **system_arguments); end

  def _call_filter(**system_arguments); end
  def _call_subtitle(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def filter; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def filter?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_filter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_filter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dialog::Header::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dialog::Header::VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::Header::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::POSITION_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::POSITION_NARROW_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::POSITION_NARROW_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::POSITION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dialog::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Dialog::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dropdown < ::Primer::Component
  def initialize(overlay: T.unsafe(nil), with_caret: T.unsafe(nil), **system_arguments); end

  def _call_button(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def button; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def button?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def menu; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def menu?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_button_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_menu(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_menu_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Dropdown::Menu < ::Primer::Component
  def initialize(as: T.unsafe(nil), direction: T.unsafe(nil), scheme: T.unsafe(nil), header: T.unsafe(nil), **system_arguments); end

  def _call_items(divider: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  private

  def list?; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dropdown::Menu::AS_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::AS_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Dropdown::Menu::Item < ::Primer::Component
  def initialize(as:, tag: T.unsafe(nil), divider: T.unsafe(nil), **system_arguments); end

  def call; end
  def divider?; end
  def list?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Dropdown::Menu::Item::BUTTON_TAGS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::Item::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::Item::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Dropdown::Menu::SCHEME_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Dropdown::Menu::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Alpha::FormControl < ::Primer::Component
  def initialize(label:, caption: T.unsafe(nil), validation_message: T.unsafe(nil), required: T.unsafe(nil), visually_hide_label: T.unsafe(nil), full_width: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def caption; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def caption?; end

  def full_width?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def required?; end
  def visually_hide_label?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_caption(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_caption_content(content); end

  def with_input(&block); end

  private

  def before_render; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::HellipButton < ::Primer::Component
  def initialize(inline: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::HiddenTextExpander < ::Primer::Component
  def initialize(inline: T.unsafe(nil), button_arguments: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Image < ::Primer::Component
  def initialize(src:, alt:, lazy: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::ImageCrop < ::Primer::Component
  def initialize(src:, rounded: T.unsafe(nil), **system_arguments); end

  def _call_loading(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def loading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def loading?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_loading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_loading_content(content); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Layout < ::Primer::Component
  def initialize(stacking_breakpoint: T.unsafe(nil), first_in_source: T.unsafe(nil), gutter: T.unsafe(nil), **system_arguments); end

  def _call_sidebar(width: T.unsafe(nil), col_placement: T.unsafe(nil), row_placement: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def main; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def main?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def sidebar; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def sidebar?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_main(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_main_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_sidebar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_sidebar_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::FIRST_IN_SOURCE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::FIRST_IN_SOURCE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::GUTTER_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::GUTTER_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::GUTTER_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Layout::Main < ::Primer::Component
  def initialize(tag: T.unsafe(nil), width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::Main::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Main::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::Main::WIDTH_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Main::WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_COL_PLACEMENT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_COL_PLACEMENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_ROW_PLACEMENT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_ROW_PLACEMENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::SIDEBAR_WIDTH_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::SIDEBAR_WIDTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::SIDEBAR_WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Layout::STACKING_BREAKPOINT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::STACKING_BREAKPOINT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Layout::STACKING_BREAKPOINT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Layout::Sidebar < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Layout::Sidebar::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Layout::Sidebar::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Menu < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_heading(tag:, **system_arguments); end
  def _call_items(href:, selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Menu::HEADING_TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Menu::HEADING_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::NavList < ::Primer::Beta::NavList
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Divider < ::Primer::Beta::NavList::Divider
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Group < ::Primer::Beta::NavList::Group
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Heading < ::Primer::Beta::NavList::Heading
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::NavList::Item < ::Primer::Beta::NavList::Item
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::Alpha::Navigation; end

class Primer::Alpha::Navigation::Tab < ::Primer::Component
  def initialize(list: T.unsafe(nil), selected: T.unsafe(nil), with_panel: T.unsafe(nil), panel_id: T.unsafe(nil), icon_classes: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_icon(icon = T.unsafe(nil), **system_arguments); end
  def _call_panel(**system_arguments); end
  def _call_primer__alpha__navigation__tab; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def counter; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def counter?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def icon; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def icon?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def panel; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def panel?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  def selected; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def text; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def text?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_counter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_panel(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_panel_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_text(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_text_content(content); end

  def wrapper; end

  private

  def panel_id(panel_id); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Navigation::Tab::ARIA_CURRENT_OPTIONS_FOR_ANCHOR = T.let(T.unsafe(nil), Array)
Primer::Alpha::Navigation::Tab::DEFAULT_ARIA_CURRENT_FOR_ANCHOR = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::OcticonSymbols < ::Primer::Component
  def initialize(icons: T.unsafe(nil)); end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def symbol_tags; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Overlay < ::Primer::Component
  def initialize(title:, role: T.unsafe(nil), subtitle: T.unsafe(nil), popover: T.unsafe(nil), size: T.unsafe(nil), padding: T.unsafe(nil), anchor: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_offset: T.unsafe(nil), anchor_side: T.unsafe(nil), allow_out_of_bounds: T.unsafe(nil), visually_hide_title: T.unsafe(nil), id: T.unsafe(nil), **system_arguments); end

  def _call_body(padding: T.unsafe(nil), **system_arguments); end
  def _call_header(divider: T.unsafe(nil), size: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end
  def _call_show_button(icon: T.unsafe(nil), controls: T.unsafe(nil), **button_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def header?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def show_button?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  private

  def show_button_id; end
  def title_id; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::ALIGN_CONTENT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::ALIGN_CONTENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_OFFSET_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ANCHOR_SIDE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::ANCHOR_SIDE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Overlay::Body < ::Primer::Component
  def initialize(padding: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::DEFAULT_ALIGN_CONTENT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_ALIGN = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_OFFSET = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_ANCHOR_SIDE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_PADDING = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_POPOVER = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::Overlay::Footer < ::Primer::Component
  def initialize(show_divider: T.unsafe(nil), align_content: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::Overlay::Header < ::Primer::Component
  def initialize(id:, title:, overlay_id: T.unsafe(nil), subtitle: T.unsafe(nil), size: T.unsafe(nil), divider: T.unsafe(nil), visually_hide_title: T.unsafe(nil), **system_arguments); end

  def _call_filter(**system_arguments); end
  def _call_subtitle(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def filter; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def filter?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_filter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_filter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Overlay::Header::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Overlay::Header::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::Header::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::PADDING_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::PADDING_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::POPOVER_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::ROLE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Overlay::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Overlay::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SegmentedControl < ::Primer::Component
  def initialize(hide_labels: T.unsafe(nil), full_width: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def _call_items(label:, selected: T.unsafe(nil), icon: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SegmentedControl::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SegmentedControl::FULL_WIDTH_DEFAULT = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::SegmentedControl::HIDE_LABELS_DEFAULT = T.let(T.unsafe(nil), FalseClass)

class Primer::Alpha::SegmentedControl::Item < ::Primer::BaseComponent
  def initialize(label:, selected: T.unsafe(nil), icon: T.unsafe(nil), hide_labels: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_trailing_visual_label(**system_arguments, &block); end

  private

  def before_render; end

  class << self
    def audit_date; end
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SegmentedControl::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::SegmentedControl::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SelectPanel < ::Primer::Component
  include ::Primer::Alpha::SelectPanel::Utils

  def initialize(src: T.unsafe(nil), title: T.unsafe(nil), id: T.unsafe(nil), size: T.unsafe(nil), select_variant: T.unsafe(nil), fetch_strategy: T.unsafe(nil), no_results_label: T.unsafe(nil), preload: T.unsafe(nil), dynamic_label: T.unsafe(nil), dynamic_label_prefix: T.unsafe(nil), dynamic_aria_label_prefix: T.unsafe(nil), body_id: T.unsafe(nil), list_arguments: T.unsafe(nil), form_arguments: T.unsafe(nil), show_filter: T.unsafe(nil), open_on_load: T.unsafe(nil), anchor_align: T.unsafe(nil), anchor_side: T.unsafe(nil), loading_label: T.unsafe(nil), loading_description: T.unsafe(nil), banner_scheme: T.unsafe(nil), **system_arguments); end

  def _call_show_button(**system_arguments); end
  def banner_scheme; end
  def body_id; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def error_content; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def error_content?; end

  def fetch_strategy; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def footer?; end

  def panel_id; end
  def preload; end
  def preload?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def preload_error_content; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def preload_error_content?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def select_variant; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def show_button; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def show_button?; end

  def show_filter; end
  def show_filter?; end
  def src; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def subtitle; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def subtitle?; end

  def with_avatar_item(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_error_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_error_content_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  def with_item(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_preload_error_content(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_preload_error_content_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_show_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_show_button_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_subtitle(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_subtitle_content(content); end

  private

  def before_render; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SelectPanel::BANNER_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::SelectPanel::DEFAULT_BANNER_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SelectPanel::DEFAULT_FETCH_STRATEGY = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SelectPanel::DEFAULT_PRELOAD = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::SelectPanel::DEFAULT_SELECT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::SelectPanel::FETCH_STRATEGIES = T.let(T.unsafe(nil), Array)

class Primer::Alpha::SelectPanel::ItemList < ::Primer::Alpha::ActionList
  include ::Primer::Alpha::SelectPanel::Utils

  def initialize(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def with_avatar_item(**system_arguments); end
  def with_item(**system_arguments); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::SelectPanel::SELECT_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::Alpha::SelectPanel::Utils
  def raise_if_role_given!(**system_arguments); end
end

class Primer::Alpha::Stack < ::Primer::Component
  def initialize(tag: T.unsafe(nil), justify: T.unsafe(nil), gap: T.unsafe(nil), direction: T.unsafe(nil), align: T.unsafe(nil), wrap: T.unsafe(nil), padding: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Stack::ARG_CLASSES = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Stack::AlignArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::AlignArg::DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Stack::AlignArg::OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Stack::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::Stack::DirectionArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::DirectionArg::DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Stack::DirectionArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Stack::GapArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::GapArg::DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Alpha::Stack::GapArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Stack::JustifyArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::JustifyArg::DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Stack::JustifyArg::MAPPING = T.let(T.unsafe(nil), Hash)
Primer::Alpha::Stack::JustifyArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Stack::PaddingArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::PaddingArg::DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Stack::PaddingArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Stack::WrapArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::Stack::WrapArg::DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Stack::WrapArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::StackItem < ::Primer::Component
  def initialize(tag: T.unsafe(nil), grow: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::StackItem::ARG_CLASSES = T.let(T.unsafe(nil), Array)
Primer::Alpha::StackItem::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Alpha::StackItem::GrowArg < ::Primer::ResponsiveArg
  def initialize(values); end

  def values; end

  class << self
    def arg_name; end
  end
end

Primer::Alpha::StackItem::GrowArg::DEFAULT = T.let(T.unsafe(nil), FalseClass)
Primer::Alpha::StackItem::GrowArg::OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::TabContainer < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end
  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Alpha::TabNav < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::TabNavHelper

  def initialize(label:, tag: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  def _call_extra(align: T.unsafe(nil), &block); end
  def _call_tabs(selected: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def extra; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def extra?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_extra(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_extra_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::TabNav::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabNav::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabNav::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::TabPanels < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::TabNavHelper

  def initialize(label:, body_arguments: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_extra(align: T.unsafe(nil), &block); end
  def _call_tabs(id:, selected: T.unsafe(nil), **system_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def extra; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def extra?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_extra(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_extra_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::TabPanels::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabPanels::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::TabPanels::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::ToggleSwitch < ::Primer::Component
  def initialize(src: T.unsafe(nil), csrf_token: T.unsafe(nil), checked: T.unsafe(nil), enabled: T.unsafe(nil), size: T.unsafe(nil), status_label_position: T.unsafe(nil), turbo: T.unsafe(nil), **system_arguments); end

  def disabled?; end
  def enabled?; end
  def on?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def before_render; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::ToggleSwitch::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ToggleSwitch::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ToggleSwitch::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Alpha::ToggleSwitch::STATUS_LABEL_POSITION_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::Tooltip < ::Primer::Component
  def initialize(type:, for_id:, text:, direction: T.unsafe(nil), **system_arguments); end

  def call; end
  def id; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::Tooltip::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Tooltip::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Alpha::Tooltip::TYPE_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::Tooltip::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::UnderlineNav < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::UnderlineNavHelper

  def initialize(label:, tag: T.unsafe(nil), align: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  def _call_actions(tag: T.unsafe(nil), **system_arguments); end
  def _call_tabs(selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  private

  def body; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Alpha::UnderlineNav::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::UnderlineNav::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Alpha::UnderlineNav::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Alpha::UnderlinePanels < ::Primer::Component
  include ::Primer::TabbedComponentHelper
  include ::Primer::UnderlineNavHelper

  def initialize(label:, align: T.unsafe(nil), body_arguments: T.unsafe(nil), wrapper_arguments: T.unsafe(nil), **system_arguments); end

  def _call_actions(tag: T.unsafe(nil), **system_arguments); end
  def _call_tabs(id:, selected: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def tabs; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def tabs?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_tab(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_tab_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_tabs(collection_args = T.unsafe(nil), &block); end

  private

  def body; end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::AttributesHelper
  def aria(val, system_arguments); end
  def data(val, system_arguments); end
  def extract_data(val, system_arguments); end
  def merge_aria(*hashes); end
  def merge_data(*hashes); end
  def merge_prefixed_attribute_hashes(*hashes, prefix:, plural_keys:); end
end

Primer::AttributesHelper::PLURAL_ARIA_ATTRIBUTES = T.let(T.unsafe(nil), Array)
Primer::AttributesHelper::PLURAL_DATA_ATTRIBUTES = T.let(T.unsafe(nil), Array)
module Primer::Audited; end

module Primer::Audited::Dsl
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::Primer::Audited::Dsl::ClassMethods

  module GeneratedClassMethods
    def audit_date; end
    def audit_date=(value); end
    def audit_date?; end
  end

  module GeneratedInstanceMethods
    def audit_date; end
    def audit_date?; end
  end
end

module Primer::Audited::Dsl::ClassMethods
  def audited_at(date = T.unsafe(nil)); end
end

class Primer::BaseComponent < ::Primer::Component
  def initialize(tag:, classes: T.unsafe(nil), **system_arguments); end

  def _call_primer__base_component; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::BaseComponent::SELF_CLOSING_TAGS = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/yard/component_manifest.rb#0
module Primer::Beta; end

class Primer::Beta::AutoComplete < ::Primer::Component
  def initialize(label_text:, src:, list_id:, input_id:, input_name: T.unsafe(nil), placeholder: T.unsafe(nil), show_clear_button: T.unsafe(nil), visually_hide_label: T.unsafe(nil), size: T.unsafe(nil), full_width: T.unsafe(nil), width: T.unsafe(nil), disabled: T.unsafe(nil), invalid: T.unsafe(nil), inset: T.unsafe(nil), monospace: T.unsafe(nil), **system_arguments); end

  def _call_input(**system_arguments); end
  def _call_leading_visual_icon(**system_arguments); end
  def _call_results(**system_arguments); end
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def input; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def input?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def results; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def results?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_input(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_input_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_results(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_results_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AutoComplete::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AutoComplete::DEFAULT_WIDTH = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::AutoComplete::Item < ::Primer::Component
  def initialize(value:, selected: T.unsafe(nil), disabled: T.unsafe(nil), description_variant: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_avatar(**kwargs); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_avatar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_avatar_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AutoComplete::Item::DEFAULT_DESCRIPTION_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AutoComplete::Item::DESCRIPTION_VARIANT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::Item::DESCRIPTION_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AutoComplete::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AutoComplete::WIDTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::AutoComplete::WIDTH_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Avatar < ::Primer::Component
  def initialize(src:, alt: T.unsafe(nil), size: T.unsafe(nil), shape: T.unsafe(nil), href: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Avatar::DEFAULT_SHAPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Avatar::DEFAULT_SIZE = T.let(T.unsafe(nil), Integer)
Primer::Beta::Avatar::SHAPE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Avatar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Avatar::SMALL_THRESHOLD = T.let(T.unsafe(nil), Integer)

class Primer::Beta::AvatarStack < ::Primer::Component
  def initialize(tag: T.unsafe(nil), align: T.unsafe(nil), tooltipped: T.unsafe(nil), body_arguments: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def avatars; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def avatars?; end

  def before_render; end
  def body_component; end
  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_avatar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_avatar_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_avatars(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::AvatarStack::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AvatarStack::BODY_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::AvatarStack::DEFAULT_BODY_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::AvatarStack::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::BaseButton < ::Primer::Component
  def initialize(tag: T.unsafe(nil), type: T.unsafe(nil), block: T.unsafe(nil), disabled: T.unsafe(nil), inactive: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__base_button; end
  def call; end
  def disabled; end
  def disabled?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BaseButton::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BaseButton::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BaseButton::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::BaseButton::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Blankslate < ::Primer::Component
  def initialize(narrow: T.unsafe(nil), spacious: T.unsafe(nil), border: T.unsafe(nil), **system_arguments); end

  def _call_description(**system_arguments); end
  def _call_heading(tag:, **system_arguments); end
  def _call_primary_action(href:, **system_arguments); end
  def _call_secondary_action(href:, **system_arguments); end
  def _call_visual_icon(**system_arguments); end
  def _call_visual_image(**system_arguments); end
  def _call_visual_spinner(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def primary_action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def primary_action?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def secondary_action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def secondary_action?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def visual?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_primary_action(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_primary_action_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_secondary_action(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_secondary_action_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_visual_image(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_visual_image_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_visual_spinner(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_visual_spinner_content(content); end

  def wrapper; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Blankslate::VISUAL_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::BorderBox < ::Primer::Component
  def initialize(padding: T.unsafe(nil), **system_arguments); end

  def _call_body(**system_arguments); end
  def _call_footer(**system_arguments); end
  def _call_rows(scheme: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def footer; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def footer?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def header; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def header?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def rows; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def rows?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_footer(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_footer_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_header(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_header_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_row(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_row_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_rows(collection_args = T.unsafe(nil), &block); end

  private

  def before_render; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BorderBox::DEFAULT_PADDING = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BorderBox::DEFAULT_ROW_SCHEME = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::BorderBox::Header < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_title(tag:, **system_arguments); end
  def id; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def title; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def title?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_title(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_title_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::BorderBox::Header::TITLE_TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Beta::BorderBox::Header::TITLE_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::BorderBox::PADDING_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::BorderBox::PADDING_SUGGESTION = T.let(T.unsafe(nil), String)
Primer::Beta::BorderBox::ROW_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Breadcrumbs < ::Primer::Component
  def initialize(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Breadcrumbs::ARGS_DENYLIST = T.let(T.unsafe(nil), Hash)
Primer::Beta::Breadcrumbs::ARIA_LABEL = T.let(T.unsafe(nil), Hash)
Primer::Beta::Breadcrumbs::FONT_SIZE_MESSAGE = T.let(T.unsafe(nil), String)

class Primer::Beta::Breadcrumbs::Item < ::Primer::Component
  def initialize(href:, target: T.unsafe(nil), **system_arguments); end

  def call; end
  def href; end
  def href=(_arg0); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  def selected; end
  def selected=(_arg0); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Breadcrumbs::PADDING_MESSAGE = T.let(T.unsafe(nil), String)

class Primer::Beta::Button < ::Primer::Component
  def initialize(base_button_class: T.unsafe(nil), scheme: T.unsafe(nil), size: T.unsafe(nil), block: T.unsafe(nil), align_content: T.unsafe(nil), disabled: T.unsafe(nil), label_wrap: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_icon(**system_arguments); end
  def _call_leading_visual_svg(**system_arguments); end
  def _call_primer__beta__button; end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_visual_counter(**system_arguments); end
  def call; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def trailing_action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def trailing_action?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_svg(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_svg_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_action_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_action_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_label(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_label_content(content); end

  private

  def before_render; end
  def trimmed_content; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Button::ALIGN_CONTENT_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::ALIGN_CONTENT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Button::DEFAULT_ALIGN_CONTENT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Button::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Button::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Button::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::ButtonGroup < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def _call_button(icon: T.unsafe(nil), **kwargs); end
  def _call_clipboard_copy_button(**kwargs); end
  def _call_menu_button(menu_arguments: T.unsafe(nil), button_arguments: T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def buttons; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def buttons?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_button_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_clipboard_copy_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_clipboard_copy_button_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_menu_button(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_menu_button_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ButtonGroup::MenuButton < ::Primer::Component
  def initialize(menu_arguments: T.unsafe(nil), button_arguments: T.unsafe(nil)); end

  def before_render; end
  def call; end
  def render_in(view_context, &block); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopy < ::Primer::Component
  def initialize(value: T.unsafe(nil), **system_arguments); end

  def before_render; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def validate!; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopyBaseButton < ::Primer::Beta::BaseButton
  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::ClipboardCopyButton < ::Primer::Beta::Button
  def initialize(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::CloseButton < ::Primer::Component
  def initialize(type: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::CloseButton::DEFAULT_TYPE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::CloseButton::TYPE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Counter < ::Primer::Component
  def initialize(count: T.unsafe(nil), scheme: T.unsafe(nil), limit: T.unsafe(nil), hide_if_zero: T.unsafe(nil), text: T.unsafe(nil), round: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def title; end
  def value; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Counter::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Counter::DEPRECATED_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Counter::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Counter::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Details < ::Primer::Component
  def initialize(overlay: T.unsafe(nil), reset: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  def _call_body(tag: T.unsafe(nil), **system_arguments); end
  def _call_summary(button: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  def disabled; end
  def disabled?; end
  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def summary; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def summary?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_summary(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_summary_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Details::BODY_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Details::BODY_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Details::NO_OVERLAY = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Details::OVERLAY_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Flash < ::Primer::Component
  def initialize(full: T.unsafe(nil), spacious: T.unsafe(nil), dismissible: T.unsafe(nil), icon: T.unsafe(nil), scheme: T.unsafe(nil), **system_arguments); end

  def _call_action(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def action; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def action?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_action(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_action_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Flash::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Flash::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Heading < ::Primer::Component
  def initialize(tag:, **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Heading::TAG_FALLBACK = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Heading::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::IconButton < ::Primer::Component
  def initialize(icon:, scheme: T.unsafe(nil), show_tooltip: T.unsafe(nil), tooltip_direction: T.unsafe(nil), size: T.unsafe(nil), disabled: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def render_tooltip?; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::IconButton::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::IconButton::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::IconButton::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Label < ::Primer::Component
  def initialize(tag: T.unsafe(nil), scheme: T.unsafe(nil), size: T.unsafe(nil), inline: T.unsafe(nil), variant: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Label::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEFAULT_VARIANT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Label::DEPRECATED_SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::DEPRECATED_VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::INLINE_CLASS = T.let(T.unsafe(nil), String)
Primer::Beta::Label::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Label::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Label::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Label::VARIANT_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Link < ::Primer::Component
  def initialize(href: T.unsafe(nil), scheme: T.unsafe(nil), muted: T.unsafe(nil), underline: T.unsafe(nil), **system_arguments); end

  def _call_tooltip(**system_arguments); end
  def before_render; end
  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Link::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Link::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)

class Primer::Beta::Markdown < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Markdown::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Markdown::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::NavList < ::Primer::Component
  def initialize(selected_item_id: T.unsafe(nil), **system_arguments); end

  def _call_avatar_item(**system_arguments); end
  def _call_group(**system_arguments, &block); end
  def _call_item(**system_arguments, &block); end
  def _call_primer__beta__nav_list; end
  def build_avatar_item(src:, username:, full_name: T.unsafe(nil), full_name_scheme: T.unsafe(nil), component_klass: T.unsafe(nil), avatar_arguments: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments, &block); end
  def call; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def items?; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_avatar_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_avatar_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_divider(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_divider_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_group(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_group_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_item_content(content); end

  private

  def before_render; end
  def both_are_groups?(item1, item2); end
  def divider?(item); end
  def either_is_divider?(item1, item2); end
  def group?(item); end
  def heterogeneous?(item1, item2); end
  def kind(item); end
  def render_divider_between?(item1, item2); end
  def render_outer_list?; end
  def top_level_group; end

  class << self
    def audit_date; end
    def component_status; end
    def custom_element_name; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Divider < ::Primer::Alpha::ActionList::Divider
  def _call_primer__beta__nav_list__divider; end
  def kind; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Group < ::Primer::Alpha::ActionList
  def initialize(selected_item_id: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__nav_list__group; end
  def _call_show_more_item(src:, pages:, component_klass: T.unsafe(nil), **system_arguments); end
  def before_render; end
  def build_avatar_item(component_klass: T.unsafe(nil), **system_arguments); end
  def build_item(component_klass: T.unsafe(nil), **system_arguments); end
  def call; end
  def expand!; end
  def kind; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def show_more_item; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def show_more_item?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_show_more_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_show_more_item_content(content); end

  class << self
    def custom_element_name; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Heading < ::Primer::Component
  def initialize(title:, id: T.unsafe(nil), heading_level: T.unsafe(nil), **system_arguments); end

  def _call_primer__beta__nav_list__heading; end
  def call; end
  def heading_level; end
  def id; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  def system_arguments; end
  def title; end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::NavList::Item < ::Primer::Alpha::ActionList::Item
  def initialize(selected_item_id: T.unsafe(nil), selected_by_ids: T.unsafe(nil), sub_item: T.unsafe(nil), expanded: T.unsafe(nil), **system_arguments); end

  def _call_items(**system_arguments); end
  def _call_primer__beta__nav_list__item; end
  def active?; end
  def before_render; end
  def call; end
  def expand!; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def kind; end

  # source://view_component/3.14.0/lib/view_component/compiler.rb#130
  def render_template_for(variant = T.unsafe(nil)); end

  def selected_by_ids; end
  def sub_item; end
  def sub_item?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  private

  def active_sub_item?; end
  def current_page?(url); end
  def item_active?(item); end
  def list_class; end

  class << self
    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Octicon < ::Primer::Component
  def initialize(icon_name = T.unsafe(nil), icon: T.unsafe(nil), size: T.unsafe(nil), use_symbol: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Octicon::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Octicon::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Octicon::SIZE_MEDIUM = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Octicon::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Octicon::SIZE_XSMALL = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::Popover < ::Primer::Component
  def initialize(**system_arguments); end

  def _call_body(caret: T.unsafe(nil), large: T.unsafe(nil), **system_arguments); end
  def _call_heading(tag: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  def body_component; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Popover::CARET_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Popover::CARET_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Popover::DEFAULT_HEADING_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::ProgressBar < ::Primer::Component
  def initialize(size: T.unsafe(nil), **system_arguments); end

  def _call_items(percentage: T.unsafe(nil), bg: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::ProgressBar::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::ProgressBar::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::ProgressBar::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::RelativeTime < ::Primer::Component
  def initialize(datetime:, tense: T.unsafe(nil), prefix: T.unsafe(nil), second: T.unsafe(nil), minute: T.unsafe(nil), hour: T.unsafe(nil), weekday: T.unsafe(nil), day: T.unsafe(nil), month: T.unsafe(nil), year: T.unsafe(nil), time_zone_name: T.unsafe(nil), threshold: T.unsafe(nil), precision: T.unsafe(nil), format: T.unsafe(nil), format_style: T.unsafe(nil), lang: T.unsafe(nil), title: T.unsafe(nil), no_title: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::RelativeTime::DAY_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::DAY_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::DAY_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::FORMAT_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::RelativeTime::FORMAT_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::FORMAT_STYLE_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::FORMAT_STYLE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::HOUR_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::HOUR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::HOUR_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::MINUTE_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::MINUTE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::MINUTE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::MONTH_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::MONTH_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::MONTH_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::PRECISION_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::PRECISION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::SECOND_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::SECOND_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::SECOND_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TENSE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::RelativeTime::TENSE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TIMEZONENAME_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::TIMEZONENAME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::TIMEZONE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::WEEKDAY_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::WEEKDAY_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::RelativeTime::YEAR_DEFAULT = T.let(T.unsafe(nil), T.untyped)
Primer::Beta::RelativeTime::YEAR_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::RelativeTime::YEAR_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Spinner < ::Primer::Component
  def initialize(size: T.unsafe(nil), style: T.unsafe(nil), sr_text: T.unsafe(nil), **system_arguments); end

  def no_aria_label?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Spinner::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Spinner::DEFAULT_SR_TEXT = T.let(T.unsafe(nil), String)
Primer::Beta::Spinner::DEFAULT_STYLE = T.let(T.unsafe(nil), String)
Primer::Beta::Spinner::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::Spinner::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::State < ::Primer::Component
  def initialize(title:, scheme: T.unsafe(nil), tag: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::State::DEPRECATED_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::NEW_SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SCHEME_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::State::SIZE_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Beta::State::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::State::TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Beta::State::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Subhead < ::Primer::Component
  def initialize(spacious: T.unsafe(nil), hide_border: T.unsafe(nil), **system_arguments); end

  def _call_actions(**system_arguments); end
  def _call_description(**system_arguments); end
  def _call_heading(tag: T.unsafe(nil), danger: T.unsafe(nil), size: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def actions; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def actions?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def description; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def description?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def heading; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def heading?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_actions(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_actions_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_description(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_description_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_heading(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_heading_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Subhead::DEFAULT_HEADING_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Subhead::DEFAULT_HEADING_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Beta::Subhead::HEADING_SIZE_MAP = T.let(T.unsafe(nil), Hash)
Primer::Beta::Subhead::HEADING_SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Beta::Subhead::HEADING_TAG_OPTIONS = T.let(T.unsafe(nil), Array)

class Primer::Beta::Text < ::Primer::Component
  def initialize(tag: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Beta::Text::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Beta::TimelineItem < ::Primer::Component
  def initialize(condensed: T.unsafe(nil), **system_arguments); end

  def _call_avatar(src:, size: T.unsafe(nil), shape: T.unsafe(nil), **system_arguments); end
  def _call_body(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def avatar; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def avatar?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def badge; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def badge?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def body; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def body?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_avatar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_avatar_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_badge(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_badge_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_body(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_body_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::TimelineItem::Badge < ::Primer::Component
  def initialize(icon: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Truncate < ::Primer::Component
  def initialize(**system_arguments); end

  def before_render; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#179
  def items; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#183
  def items?; end

  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#158
  def with_item(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#163
  def with_item_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#169
  def with_items(collection_args = T.unsafe(nil), &block); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Beta::Truncate::TruncateText < ::Primer::Component
  def initialize(priority: T.unsafe(nil), expandable: T.unsafe(nil), max_width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::BlankslateComponent < ::Primer::Component
  def initialize(title: T.unsafe(nil), title_tag: T.unsafe(nil), icon: T.unsafe(nil), icon_size: T.unsafe(nil), image_src: T.unsafe(nil), image_alt: T.unsafe(nil), description: T.unsafe(nil), button_text: T.unsafe(nil), button_url: T.unsafe(nil), button_classes: T.unsafe(nil), link_text: T.unsafe(nil), link_url: T.unsafe(nil), narrow: T.unsafe(nil), large: T.unsafe(nil), spacious: T.unsafe(nil), **system_arguments); end

  def _call_spinner(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def spinner; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def spinner?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_spinner(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_spinner_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Box < ::Primer::Component
  def initialize(**system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::ButtonComponent < ::Primer::Component
  def initialize(scheme: T.unsafe(nil), variant: T.unsafe(nil), size: T.unsafe(nil), group_item: T.unsafe(nil), block: T.unsafe(nil), dropdown: T.unsafe(nil), **system_arguments); end

  def _call_leading_visual_icon(**system_arguments); end
  def _call_tooltip(**system_arguments); end
  def _call_trailing_visual_counter(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def leading_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def leading_visual?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def tooltip; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def tooltip?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#210
  def trailing_visual; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#214
  def trailing_visual?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_leading_visual_icon(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_leading_visual_icon_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_tooltip(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_tooltip_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#244
  def with_trailing_visual_counter(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#249
  def with_trailing_visual_counter_content(content); end

  private

  def link?; end
  def trimmed_content; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::ButtonComponent::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::LINK_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::ButtonComponent::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::ButtonComponent::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::ButtonComponent::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::ButtonComponent::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::ClassNameHelper
  def class_names(*args); end
end

# source://primer_view_components//lib/primer/classify/utilities.rb#7
class Primer::Classify
  class << self
    # Utility for mapping component configuration into Primer CSS class names.
    #
    # **args can contain utility keys that mimic the interface used by
    # https://github.com/primer/components, as well as the special entries :classes
    # and :style.
    #
    # Returns a hash containing two entries. The :classes entry is a string of
    # Primer CSS class names, including any classes given in the :classes entry
    # in **args. The :style entry is the value of the given :style entry given in
    # **args.
    #
    #
    # Example usage:
    # extract_css_attrs({ mt: 4, py: 2 }) => { classes: "mt-4 py-2", style: nil }
    # extract_css_attrs(classes: "d-flex", mt: 4, py: 2) => { classes: "d-flex mt-4 py-2", style: nil }
    # extract_css_attrs(classes: "d-flex", style: "float: left", mt: 4, py: 2) => { classes: "d-flex mt-4 py-2", style: "float: left" }
    #
    # source://primer_view_components//lib/primer/classify.rb#45
    def call(args = T.unsafe(nil)); end

    private

    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify.rb#128
    def raise_on_invalid_options?; end

    # source://primer_view_components//lib/primer/classify.rb#104
    def validate(key, val, brk); end

    # source://primer_view_components//lib/primer/classify.rb#109
    def validated_class_names(classes); end
  end
end

# source://primer_view_components//lib/primer/classify.rb#23
Primer::Classify::FLEX_ALIGN_ITEMS_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#17
Primer::Classify::FLEX_ALIGN_SELF_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#19
Primer::Classify::FLEX_DIRECTION_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#21
Primer::Classify::FLEX_JUSTIFY_CONTENT_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#9
Primer::Classify::FLEX_VALUES = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify.rb#11
Primer::Classify::FLEX_WRAP_MAPPINGS = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify.rb#25
Primer::Classify::LOOKUP = T.let(T.unsafe(nil), Hash)

# Handler for PrimerCSS utility classes loaded from utilities.rake
#
# source://primer_view_components//lib/primer/classify/utilities.rb#9
class Primer::Classify::Utilities
  class << self
    # source://primer_view_components//lib/primer/classify/utilities.rb#126
    def classes_to_args(classes); end

    # Extract hash from classes ie. "mr-1 mb-2 foo" => { mr: 1, mb: 2, classes: "foo" }
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#95
    def classes_to_hash(classes); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#42
    def classname(key, val, breakpoint = T.unsafe(nil)); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#130
    def hash_to_args(hash); end

    # Get the options for the given key
    #
    # returns Array or nil if key not supported
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#88
    def mappings(key); end

    # Is the key and value responsive
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#81
    def responsive?(key, val); end

    # Does the Utility class support the given key
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#57
    def supported_key?(key); end

    # Does the given selector exist in the utilities file
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#71
    def supported_selector?(selector); end

    # Does the Utility class support the given key and value
    #
    # returns Boolean
    #
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#64
    def supported_value?(key, val); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#145
    def validate(key, val, breakpoint); end

    # Returns the value of attribute validate_class_names.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names; end

    # Sets the attribute validate_class_names
    #
    # @param value the value to set the attribute validate_class_names to.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names=(_arg0); end

    # Returns the value of attribute validate_class_names.
    #
    # source://primer_view_components//lib/primer/classify/utilities.rb#39
    def validate_class_names?; end

    private

    # source://primer_view_components//lib/primer/classify/utilities.rb#171
    def find_selector(selector); end

    # source://primer_view_components//lib/primer/classify/utilities.rb#191
    def infer_selector_key(selector); end
  end
end

# source://primer_view_components//lib/primer/classify/utilities.rb#17
Primer::Classify::Utilities::BREAKPOINTS = T.let(T.unsafe(nil), Array)

# source://primer_view_components//lib/primer/classify/utilities.rb#36
Primer::Classify::Utilities::BREAKPOINT_INDEX_CACHE = T.let(T.unsafe(nil), Hash)

# Replacements for some classnames that end up being a different argument key
#
# source://primer_view_components//lib/primer/classify/utilities.rb#20
Primer::Classify::Utilities::REPLACEMENT_KEYS = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/utilities.rb#35
Primer::Classify::Utilities::SUPPORTED_KEY_CACHE = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/utilities.rb#10
Primer::Classify::Utilities::UTILITIES = T.let(T.unsafe(nil), Hash)

# source://primer_view_components//lib/primer/classify/validation.rb#8
class Primer::Classify::Validation
  class << self
    # @return [Boolean]
    #
    # source://primer_view_components//lib/primer/classify/validation.rb#12
    def invalid?(class_name); end
  end
end

# source://primer_view_components//lib/primer/classify/validation.rb#9
Primer::Classify::Validation::INVALID_CLASS_NAME_PREFIXES = T.let(T.unsafe(nil), Regexp)

class Primer::Component < ::ViewComponent::Base
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::RoutingUrlFor
  include ::Primer::ExperimentalRenderHelpers
  include ::Primer::ExperimentalRenderHelpers::InstanceMethods
  include ::Primer::ExperimentalSlotHelpers
  include ::Primer::AttributesHelper
  include ::Primer::ClassNameHelper
  include ::Primer::FetchOrFallbackHelper
  include ::Primer::TestSelectorHelper
  include ::Primer::JoinStyleArgumentsHelper
  include ::Primer::ViewHelper
  include ::Primer::Status::Dsl
  include ::Primer::Audited::Dsl
  extend ::Primer::ExperimentalSlotHelpers::ClassMethods
  extend ::Primer::Status::Dsl::ClassMethods
  extend ::Primer::Audited::Dsl::ClassMethods

  def audit_date; end
  def audit_date?; end
  def component_status; end
  def component_status?; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options; end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options=(_arg0); end

  # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
  def default_url_options?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def check_denylist(denylist = T.unsafe(nil), **arguments); end
  def deny_aria_key(key, help_text, **arguments); end
  def deny_aria_label(tag:, arguments:); end
  def deny_single_argument(key, help_text, **arguments); end
  def deny_tag_argument(**arguments); end
  def deprecated_component_warning(new_class: T.unsafe(nil), version: T.unsafe(nil)); end
  def raise_on_invalid_aria?; end
  def raise_on_invalid_options?; end
  def should_raise_aria_error?; end
  def should_raise_error?; end
  def shouldnt_raise_error?; end
  def silence_deprecations?; end
  def validate_arguments(tag:, denylist_name: T.unsafe(nil), **arguments); end
  def validate_aria_label; end

  class << self
    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/route_set.rb#584
    def _routes; end

    def audit_date; end
    def audit_date=(value); end
    def audit_date?; end
    def component_status; end
    def component_status=(value); end
    def component_status?; end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options; end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options=(value); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options?; end

    def deprecated?; end
    def generate_id(base_name: T.unsafe(nil)); end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Component::INVALID_ARIA_LABEL_TAGS = T.let(T.unsafe(nil), Array)

class Primer::ConditionalWrapper < ::Primer::Component
  def initialize(condition:, **base_component_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

class Primer::Content < ::Primer::Component
  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::ExperimentalRenderHelpers
  include ::Primer::ExperimentalRenderHelpers::InstanceMethods

  class << self
    def included(base); end
  end
end

module Primer::ExperimentalRenderHelpers::InstanceMethods
  def evaluate_block(*args, **kwargs, &block); end
end

module Primer::ExperimentalSlotHelpers
  mixes_in_class_methods ::Primer::ExperimentalSlotHelpers::ClassMethods

  class << self
    def included(base); end
  end
end

module Primer::ExperimentalSlotHelpers::ClassMethods
  def add_polymorphic_slot_type(slot_name:, type:, callable:); end
end

module Primer::FetchOrFallbackHelper
  def fallback_raises; end
  def fallback_raises=(val); end
  def fetch_or_fallback(allowed_values, given_value, fallback = T.unsafe(nil), deprecated_values: T.unsafe(nil)); end
  def fetch_or_fallback_boolean(given_value, fallback = T.unsafe(nil)); end
  def silence_deprecations?; end

  class << self
    def fallback_raises; end
    def fallback_raises=(val); end
  end
end

class Primer::FetchOrFallbackHelper::InvalidValueError < ::StandardError; end

module Primer::FormHelper
  def inline_form(*args, &block); end
  def primer_fields_for(record_name, record_object = T.unsafe(nil), options = T.unsafe(nil), &block); end
  def primer_form_with(**kwargs, &block); end
  def render_inline_form(*args, &block); end
end

module Primer::Forms; end

class Primer::Forms::ActionMenu < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

module Primer::Forms::ActsAsComponent
  def compile!; end
  def renders_template(glob_pattern, method_name = T.unsafe(nil), &block); end
  def renders_templates(glob_pattern, method_name = T.unsafe(nil), &block); end
  def template_root_path; end
  def template_root_path=(_arg0); end

  private

  def compile_template(path); end
  def compile_templates_in(template_glob); end
  def define_template_method(template_path, method_name); end
  def template_globs; end

  class << self
    def extended(base); end
  end
end

module Primer::Forms::ActsAsComponent::InstanceMethods
  def before_render; end
  def capture(*args, &block); end
  def content_tag(*_arg0, **_arg1, &_arg2); end
  def output_buffer(*_arg0, **_arg1, &_arg2); end
  def perform_render(&_block); end
  def render(*_arg0, **_arg1, &_arg2); end
  def render_in(view_context, &block); end
  def set_original_view_context(view_context); end
end

class Primer::Forms::ActsAsComponent::TemplateGlob < ::Struct
  def glob_pattern; end
  def glob_pattern=(_); end
  def method_name; end
  def method_name=(_); end
  def on_compile_callback; end
  def on_compile_callback=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class Primer::Forms::ActsAsComponent::TemplateParams < ::Struct
  def format; end
  def format=(_); end
  def identifier; end
  def identifier=(_); end
  def source; end
  def source=(_); end
  def type; end
  def type=(_); end

  class << self
    def [](*_arg0); end
    def inspect; end
    def keyword_init?; end
    def members; end
    def new(*_arg0); end
  end
end

class Primer::Forms::AutoComplete < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end

  private

  def all_input_arguments; end
  def auto_complete_arguments; end
  def input_arguments; end
  def text_field_attributes; end

  class << self
    def auto_complete_argument_names; end
  end
end

Primer::Forms::AutoComplete::ARGUMENT_TYPES = T.let(T.unsafe(nil), Array)

class Primer::Forms::Base
  include ::Primer::Forms::ActsAsComponent::InstanceMethods
  extend ::Primer::Forms::ActsAsComponent

  def after_content?(*args); end
  def before_render; end
  def caption_template?(*args); end
  def each_input_in(root_input, &block); end
  def inputs; end
  def perform_render(&_block); end
  def render?; end
  def render_caption_template(field_name); end

  private

  def form_object; end

  class << self
    def __vcf_builder; end
    def __vcf_form_block; end
    def after_content?; end
    def caption_template?(field_name); end
    def fields_with_caption_templates; end
    def form(&block); end
    def has_after_content; end
    def inherited(base); end
    def new(builder, **options); end
    def sanitize_field_name_for_template_path(field_name); end
  end
end

class Primer::Forms::BaseComponent
  include ::Primer::ClassNameHelper
  include ::Primer::Forms::ActsAsComponent::InstanceMethods
  extend ::Primer::Forms::ActsAsComponent

  def content; end
  def disabled?(*_arg0, **_arg1, &_arg2); end
  def hidden?(*_arg0, **_arg1, &_arg2); end
  def input?; end
  def perform_render(&block); end
  def render?; end
  def required?(*_arg0, **_arg1, &_arg2); end
  def to_component; end
  def type; end

  private

  def compile_and_render_template; end
  def content_tag_if(condition, tag, **kwargs, &block); end

  class << self
    def inherited(base); end
  end
end

class Primer::Forms::BufferRewriter < ::Ripper
  def on_var_ref(var); end
  def var_refs; end

  class << self
    def rewrite(code); end

    private

    def calc_line_offsets(code); end
  end
end

class Primer::Forms::Builder < ::ActionView::Helpers::FormBuilder
  def check_box(method, options = T.unsafe(nil), checked_value = T.unsafe(nil), unchecked_value = T.unsafe(nil), &block); end
  def label(method, text = T.unsafe(nil), **options, &block); end

  # source://actionview/7.1.3.2/lib/action_view/helpers/form_helper.rb#2284
  def primer_fields_for(record_name, record_object = T.unsafe(nil), fields_options = T.unsafe(nil), &block); end

  def radio_button(*args, **options, &block); end
  def select(method, choices = T.unsafe(nil), options = T.unsafe(nil), html_options = T.unsafe(nil), &block); end
  def text_area(*args, **options, &block); end
  def text_field(*args, **options, &block); end
  def text_field_attributes(method, options = T.unsafe(nil)); end

  private

  def classify(options); end
end

class Primer::Forms::Button < ::Primer::Forms::BaseComponent
  def initialize(input:, type: T.unsafe(nil)); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
  def input_arguments; end

  private

  def tag_attributes; end
end

module Primer::Forms::Button::ButtonAttributeGenerator
  extend ::ActionView::Helpers::ContentExfiltrationPreventionHelper
  extend ::ActionView::Helpers::FormTagHelper

  class << self
    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#605
    def button_tag_attributes(content_or_options = T.unsafe(nil), options = T.unsafe(nil), &block); end

    # source://actionview/7.1.3.2/lib/action_view/helpers/form_tag_helper.rb#544
    def submit_tag_attributes(value = T.unsafe(nil), options = T.unsafe(nil)); end

    private

    def content_tag(_name, _content, options); end
    def tag(_name, options); end
  end
end

class Primer::Forms::Caption < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def before_render; end
  def caption_template?; end
  def render_caption_template; end
end

class Primer::Forms::CheckBox < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
  def nested_form_arguments; end

  private

  def checked_value; end
  def unchecked_value; end
end

class Primer::Forms::CheckBoxGroup < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

module Primer::Forms::Dsl; end

class Primer::Forms::Dsl::ActionMenuInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments, &block); end

  def block; end
  def focusable?; end
  def label; end
  def name; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::AutoCompleteInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments, &block); end

  def block; end
  def focusable?; end
  def label; end
  def name; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::ButtonInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments, &block); end

  def block; end
  def label; end
  def name; end
  def supports_validation?; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::CheckBoxGroupInput < ::Primer::Forms::Dsl::Input
  def initialize(name: T.unsafe(nil), label: T.unsafe(nil), **system_arguments); end

  def autofocus!; end
  def check_box(**system_arguments, &block); end
  def check_boxes; end
  def focusable?; end
  def label; end
  def name; end
  def to_component; end
  def type; end

  private

  def scheme; end
end

class Primer::Forms::Dsl::CheckBoxInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, value: T.unsafe(nil), unchecked_value: T.unsafe(nil), scheme: T.unsafe(nil), **system_arguments); end

  def label; end
  def name; end
  def nested_form(**system_arguments, &block); end
  def nested_form_arguments; end
  def nested_form_block; end
  def scheme; end
  def supports_validation?; end
  def to_component; end
  def type; end
  def unchecked_value; end
  def valid?; end
  def value; end

  private

  def caption_template_name; end
end

Primer::Forms::Dsl::CheckBoxInput::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::Forms::Dsl::CheckBoxInput::SCHEMES = T.let(T.unsafe(nil), Array)

class Primer::Forms::Dsl::FormObject
  include ::Primer::Forms::Dsl::InputMethods

  def initialize(builder:, form:); end

  def builder; end
  def form; end
  def group(**options, &block); end
end

class Primer::Forms::Dsl::FormReferenceInput < ::Primer::Forms::Dsl::Input
  def initialize(*fields_for_args, builder:, form:, nested: T.unsafe(nil), **fields_for_kwargs, &block); end

  def fields_for_args; end
  def fields_for_kwargs; end
  def label; end
  def name; end
  def nested; end
  def nested?; end
  def ref_block; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::HiddenInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, **system_arguments); end

  def label; end
  def name; end
  def supports_validation?; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::Input
  include ::Primer::ClassNameHelper

  def initialize(builder:, form:, **system_arguments); end

  def add_input_aria(key, value); end
  def add_input_classes(*class_names); end
  def add_input_data(key, value); end
  def add_label_classes(*class_names); end
  def autofocus!; end
  def base_id; end
  def builder; end
  def caption; end
  def caption?; end
  def caption_id; end
  def caption_template?; end
  def disabled?; end
  def focusable?; end
  def form; end
  def form_control; end
  def form_control?; end
  def full_width?; end
  def hidden?; end
  def id; end
  def ids; end
  def input?; end
  def input_arguments; end
  def invalid?; end
  def label; end
  def label_arguments; end
  def merge_input_arguments!(arguments); end
  def name; end
  def remove_input_data(key); end
  def render_caption_template; end
  def required?; end
  def size; end
  def supports_validation?; end
  def to_component; end
  def type; end
  def valid?; end
  def validation_arguments; end
  def validation_error_icon_target; end
  def validation_id; end
  def validation_message; end
  def validation_message_arguments; end
  def validation_messages; end
  def validation_success_icon_target; end

  private

  def aria_join(*values); end
  def caption_template_name; end
  def input_data; end
  def raise_for_abstract_method!(method_name); end
  def space_delimited_aria_attribute?(attrib); end
end

Primer::Forms::Dsl::Input::DEFAULT_SIZE = T.let(T.unsafe(nil), Symbol)
Primer::Forms::Dsl::Input::SIZE_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::Forms::Dsl::Input::SIZE_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Forms::Dsl::Input::SPACE_DELIMITED_ARIA_ATTRIBUTES = T.let(T.unsafe(nil), Array)

class Primer::Forms::Dsl::InputGroup
  include ::Primer::Forms::Dsl::InputMethods

  def initialize(builder:, form:, **system_arguments); end

  def builder; end
  def form; end
  def input?; end
  def system_arguments; end
  def to_component; end
  def type; end
end

module Primer::Forms::Dsl::InputMethods
  def action_menu(**options, &block); end
  def auto_complete(**options, &block); end
  def button(**options, &block); end
  def check_box(**options, &block); end
  def check_box_group(**options, &block); end
  def fields_for(*args, **kwargs, &block); end
  def hidden(**options); end
  def inputs; end
  def multi(**options, &block); end
  def radio_button_group(**options, &block); end
  def select_list(**options, &block); end
  def separator; end
  def submit(**options, &block); end
  def text_area(**options, &block); end
  def text_field(**options, &block); end

  private

  def add_input(input); end
  def decorate_options(**options); end
end

class Primer::Forms::Dsl::MultiInput < ::Primer::Forms::Dsl::Input
  include ::Primer::Forms::Dsl::InputMethods

  def initialize(name:, label:, **system_arguments); end

  def label; end
  def name; end
  def to_component; end
  def type; end

  private

  def add_input(input); end
  def check_one_input_visible!; end
  def decorate_options(name:, **options); end
end

class Primer::Forms::Dsl::RadioButtonGroupInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label: T.unsafe(nil), **system_arguments); end

  def autofocus!; end
  def focusable?; end
  def label; end
  def name; end
  def radio_button(**system_arguments, &block); end
  def radio_buttons; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::RadioButtonInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, value:, label:, **system_arguments); end

  def label; end
  def name; end
  def nested_form(**system_arguments, &block); end
  def nested_form_arguments; end
  def nested_form_block; end
  def supports_validation?; end
  def to_component; end
  def type; end
  def valid?; end
  def value; end
end

class Primer::Forms::Dsl::SelectInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments); end

  def focusable?; end
  def label; end
  def multiple?; end
  def name; end
  def option(**system_arguments); end
  def options; end
  def select_arguments; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::SelectInput::Option
  include ::Primer::TestSelectorHelper

  def initialize(label:, value:, **system_arguments); end

  def label; end
  def system_arguments; end
  def value; end
end

Primer::Forms::Dsl::SelectInput::SELECT_ARGUMENTS = T.let(T.unsafe(nil), Array)

class Primer::Forms::Dsl::SubmitButtonInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments, &block); end

  def block; end
  def label; end
  def name; end
  def supports_validation?; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::TextAreaInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments); end

  def focusable?; end
  def label; end
  def name; end
  def to_component; end
  def type; end
end

class Primer::Forms::Dsl::TextFieldInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, **system_arguments); end

  def auto_check_src; end
  def clear_button_id; end
  def field_wrap_classes; end
  def focusable?; end
  def inset; end
  def inset?; end
  def label; end
  def leading_spinner; end
  def leading_spinner?; end
  def leading_visual; end
  def leading_visual?; end
  def monospace; end
  def monospace?; end
  def name; end
  def show_clear_button; end
  def show_clear_button?; end
  def to_component; end
  def type; end
  def validation_arguments; end
  def validation_error_icon_target; end
  def validation_message_arguments; end
  def validation_success_icon_target; end
  def visually_hide_label; end
end

class Primer::Forms::Dsl::ToggleSwitchInput < ::Primer::Forms::Dsl::Input
  def initialize(name:, label:, src:, csrf: T.unsafe(nil), **system_arguments); end

  def csrf; end
  def label; end
  def name; end
  def src; end
  def to_component; end
  def type; end
  def validation_arguments; end
end

class Primer::Forms::FormControl < ::Primer::Forms::BaseComponent
  def initialize(input:, tag: T.unsafe(nil), **system_arguments); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::FormList
  include ::Primer::Forms::ActsAsComponent::InstanceMethods
  extend ::Primer::Forms::ActsAsComponent

  def initialize(*forms); end

  def perform_render(&_block); end
end

class Primer::Forms::FormReference < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def builder_or_view; end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::Group < ::Primer::Forms::BaseComponent
  def initialize(inputs:, builder:, form:, layout: T.unsafe(nil), **system_arguments); end

  def horizontal?; end
end

Primer::Forms::Group::DEFAULT_LAYOUT = T.let(T.unsafe(nil), Symbol)
Primer::Forms::Group::HORIZONTAL = T.let(T.unsafe(nil), Symbol)
Primer::Forms::Group::LAYOUTS = T.let(T.unsafe(nil), Array)
Primer::Forms::Group::VERTICAL = T.let(T.unsafe(nil), Symbol)

class Primer::Forms::HiddenField < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::Multi < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::PrimerBaseComponentWrapper < ::Primer::Forms::BaseComponent
  def initialize(**system_arguments); end
end

class Primer::Forms::RadioButton < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
  def nested_form_arguments; end
end

class Primer::Forms::RadioButtonGroup < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::Select < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
  def options; end
end

class Primer::Forms::Separator < ::Primer::Forms::BaseComponent; end
class Primer::Forms::SpacingWrapper < ::Primer::Forms::BaseComponent; end

class Primer::Forms::SubmitButton < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

module Primer::Forms::Tags; end

class Primer::Forms::Tags::TextField < ::ActionView::Helpers::Tags::TextField
  def attributes; end

  private

  def tag(_name, options); end
end

class Primer::Forms::TextArea < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

class Primer::Forms::TextField < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def auto_check_authenticity_token; end
  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
end

Primer::Forms::TextField::INPUT_WRAP_SIZE = T.let(T.unsafe(nil), Hash)

class Primer::Forms::ToggleSwitch < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def builder(*_arg0, **_arg1, &_arg2); end
  def form(*_arg0, **_arg1, &_arg2); end
  def label_id; end
end

class Primer::Forms::ToggleSwitchForm < ::Primer::Forms::Base
  def initialize(**system_arguments); end

  def render_in(view_context, &block); end

  class << self
    def define_form_on(klass); end
    def inherited(base); end
    def new(**options); end
  end
end

module Primer::Forms::Utils
  include ::Primer::ClassNameHelper
  extend ::Primer::ClassNameHelper
  extend ::Primer::Forms::Utils

  def classify(options); end
  def const_source_location(class_name); end
end

Primer::Forms::Utils::PRIMER_UTILITY_KEYS = T.let(T.unsafe(nil), Array)

class Primer::Forms::ValidationMessage < ::Primer::Forms::BaseComponent
  def initialize(input:); end

  def input; end
end

class Primer::IconButton < ::Primer::Component
  def initialize(icon:, scheme: T.unsafe(nil), box: T.unsafe(nil), tooltip_direction: T.unsafe(nil), **system_arguments); end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  private

  def render_tooltip?; end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::IconButton::DEFAULT_SCHEME = T.let(T.unsafe(nil), Symbol)
Primer::IconButton::SCHEME_MAPPINGS = T.let(T.unsafe(nil), Hash)
Primer::IconButton::SCHEME_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::JoinStyleArgumentsHelper
  def join_style_arguments(*args); end
end

class Primer::LayoutComponent < ::Primer::Component
  def initialize(responsive: T.unsafe(nil), side: T.unsafe(nil), sidebar_col: T.unsafe(nil), **system_arguments); end

  def _call_main(**system_arguments); end
  def _call_sidebar(**system_arguments); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def main; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def main?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#92
  def sidebar; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#96
  def sidebar?; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_main(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_main_content(content); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#87
  def with_sidebar(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#100
  def with_sidebar_content(content); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::LayoutComponent::ALLOWED_SIDEBAR_COLS = T.let(T.unsafe(nil), Array)
Primer::LayoutComponent::ALLOWED_SIDES = T.let(T.unsafe(nil), Array)
Primer::LayoutComponent::DEFAULT_SIDE = T.let(T.unsafe(nil), Symbol)
Primer::LayoutComponent::DEFAULT_SIDEBAR_COL = T.let(T.unsafe(nil), Integer)
Primer::LayoutComponent::MAX_COL = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/yard/component_manifest.rb#0
module Primer::Navigation; end

class Primer::Navigation::TabComponent < ::Primer::Alpha::Navigation::Tab
  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

module Primer::Octicon; end

class Primer::Octicon::Cache
  class << self
    def clear!; end
    def get_key(symbol:, size:, width: T.unsafe(nil), height: T.unsafe(nil)); end
    def limit; end
    def preload!; end
    def read(key); end
    def set(key, value); end
  end
end

Primer::Octicon::Cache::LOOKUP = T.let(T.unsafe(nil), Hash)
Primer::Octicon::Cache::PRELOADED_ICONS = T.let(T.unsafe(nil), Array)

class Primer::ResponsiveArg
  include ::Primer::FetchOrFallbackHelper

  def to_data_attributes; end

  private

  def data_attributes_for(property, values); end
  def fetch_or_fallback_all(options, values, default); end
  def values; end

  class << self
    def arg_name; end
    def for(values); end

    private

    def cache; end
  end
end

Primer::ResponsiveArg::BREAKPOINTS = T.let(T.unsafe(nil), Array)
module Primer::Status; end

module Primer::Status::Dsl
  extend ::ActiveSupport::Concern
  include GeneratedInstanceMethods

  mixes_in_class_methods GeneratedClassMethods
  mixes_in_class_methods ::Primer::Status::Dsl::ClassMethods

  module GeneratedClassMethods
    def component_status; end
    def component_status=(value); end
    def component_status?; end
  end

  module GeneratedInstanceMethods
    def component_status; end
    def component_status?; end
  end
end

module Primer::Status::Dsl::ClassMethods
  def status(status = T.unsafe(nil)); end
end

Primer::Status::Dsl::STATUSES = T.let(T.unsafe(nil), Hash)
class Primer::Status::Dsl::UnknownStatusError < ::StandardError; end

module Primer::TabNavHelper
  extend ::ActiveSupport::Concern

  def tab_nav_body_classes(classes); end
  def tab_nav_classes(classes); end
  def tab_nav_tab_classes(classes); end
end

Primer::TabNavHelper::EXTRA_ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::TabNavHelper::EXTRA_ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::TabbedComponentHelper
  extend ::ActiveSupport::Concern

  def before_render; end

  private

  def aria_label_for_page_nav(label); end
  def selected_tabs_count; end
  def tab_container_wrapper(with_panel:, **system_arguments); end
  def validate_single_selected_tab; end
end

class Primer::TabbedComponentHelper::MultipleSelectedTabsError < ::StandardError; end

module Primer::TestSelectorHelper
  def add_test_selector(args); end
end

Primer::TestSelectorHelper::TEST_SELECTOR_TAG = T.let(T.unsafe(nil), Symbol)

class Primer::Tooltip < ::Primer::Component
  def initialize(label:, direction: T.unsafe(nil), align: T.unsafe(nil), multiline: T.unsafe(nil), no_delay: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Tooltip::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Tooltip::ALIGN_MAPPING = T.let(T.unsafe(nil), Hash)
Primer::Tooltip::DELAY_DEFAULT = T.let(T.unsafe(nil), FalseClass)
Primer::Tooltip::DIRECTION_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::Tooltip::DIRECTION_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::Tooltip::MULTILINE_DEFAULT = T.let(T.unsafe(nil), FalseClass)

class Primer::Truncate < ::Primer::Component
  def initialize(tag: T.unsafe(nil), inline: T.unsafe(nil), expandable: T.unsafe(nil), max_width: T.unsafe(nil), **system_arguments); end

  def call; end

  # source://view_component/3.14.0/lib/view_component/base.rb#522
  def render_template_for(variant = T.unsafe(nil)); end

  class << self
    def component_status; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end
  end
end

Primer::Truncate::DEFAULT_TAG = T.let(T.unsafe(nil), Symbol)
Primer::Truncate::TAG_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::UnderlineNavHelper
  extend ::ActiveSupport::Concern

  def underline_nav_action_classes(classes); end
  def underline_nav_body_classes(classes); end
  def underline_nav_classes(classes, align); end
  def underline_nav_tab_classes(classes); end
end

Primer::UnderlineNavHelper::ACTIONS_TAG_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::UnderlineNavHelper::ACTIONS_TAG_OPTIONS = T.let(T.unsafe(nil), Array)
Primer::UnderlineNavHelper::ALIGN_DEFAULT = T.let(T.unsafe(nil), Symbol)
Primer::UnderlineNavHelper::ALIGN_OPTIONS = T.let(T.unsafe(nil), Array)

module Primer::UrlHelpers
  extend ::ActionDispatch::Routing::PolymorphicRoutes
  extend ::ActionDispatch::Routing::UrlFor

  class << self
    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options; end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options=(_arg0); end

    # source://actionpack/7.1.3.2/lib/action_dispatch/routing/url_for.rb#97
    def default_url_options?; end

    private

    def controller; end
  end
end

# source://primer_view_components//lib/primer/view_components/engine.rb#7
module Primer::ViewComponents
  class << self
    # :nocov:
    #
    # source://primer_view_components//lib/primer/view_components.rb#21
    def deprecation; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#412
    def railtie_helpers_paths; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#395
    def railtie_namespace; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#416
    def railtie_routes_url_helpers(include_path_helpers = T.unsafe(nil)); end

    # primer/view_components root directory.
    #
    # source://primer_view_components//lib/primer/view_components.rb#13
    def root; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#398
    def table_name_prefix; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#408
    def use_relative_model_naming?; end
  end
end

# source://primer_view_components//lib/primer/view_components.rb#10
Primer::ViewComponents::DEPRECATION_HORIZON = T.let(T.unsafe(nil), String)

# source://primer_view_components//lib/primer/view_components/engine.rb#9
class Primer::ViewComponents::Engine < ::Rails::Engine
  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
    def __callbacks; end
  end
end

module Primer::ViewComponents::VERSION; end

# source://primer_view_components//lib/primer/view_components/version.rb#7
Primer::ViewComponents::VERSION::MAJOR = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#8
Primer::ViewComponents::VERSION::MINOR = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#9
Primer::ViewComponents::VERSION::PATCH = T.let(T.unsafe(nil), Integer)

# source://primer_view_components//lib/primer/view_components/version.rb#11
Primer::ViewComponents::VERSION::STRING = T.let(T.unsafe(nil), String)

module Primer::ViewHelper
  def primer_heading(*args, **kwargs, &block); end
  def primer_image(*args, **kwargs, &block); end
  def primer_octicon(*args, **kwargs, &block); end
end

Primer::ViewHelper::HELPERS = T.let(T.unsafe(nil), Hash)
class Primer::ViewHelper::ViewHelperNotFound < ::StandardError; end

# source://primer_view_components//lib/primer/yard.rb#7
module Primer::Yard; end

# Shared functionality for generating documentation from YARD comments.
#
# source://primer_view_components//lib/primer/yard/backend.rb#7
class Primer::Yard::Backend
  include ::Primer::Yard::DocsHelper

  private

  # source://primer_view_components//lib/primer/yard/backend.rb#12
  def view_context; end
end

# source://primer_view_components//lib/primer/yard/component_ref.rb#7
class Primer::Yard::ComponentRef
  # @return [ComponentRef] a new instance of ComponentRef
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#17
  def initialize(klass, attrs); end

  # Returns the value of attribute attrs.
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#15
  def attrs; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#34
  def form_component?; end

  # Returns the value of attribute klass.
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#15
  def klass; end

  # source://primer_view_components//lib/primer/yard/component_ref.rb#45
  def lookbook_url; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#30
  def published?; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#22
  def requires_js?; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/component_ref.rb#26
  def should_have_examples?; end

  # source://primer_view_components//lib/primer/yard/component_ref.rb#38
  def source_url; end
end

# source://primer_view_components//lib/primer/yard/component_ref.rb#8
Primer::Yard::ComponentRef::ATTR_DEFAULTS = T.let(T.unsafe(nil), Hash)

# Helper methods to use for yard documentation
#
# source://primer_view_components//lib/primer/yard/docs_helper.rb#8
module Primer::Yard::DocsHelper
  extend ::Primer::Yard::DocsHelper

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#35
  def link_to_accessibility; end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#47
  def link_to_component(component); end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#58
  def link_to_heading_practices; end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#54
  def link_to_octicons; end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#39
  def link_to_system_arguments_docs; end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#43
  def link_to_typography_docs; end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#9
  def one_of(enumerable, lower: T.unsafe(nil), sort: T.unsafe(nil)); end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#69
  def pretty_default_value(tag, component); end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#83
  def pretty_value(val); end

  # source://primer_view_components//lib/primer/yard/docs_helper.rb#62
  def status_module_and_short_name(component); end
end

# Helper methods to use for info arch yard documentation
#
# source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#7
module Primer::Yard::InfoArchDocsHelper
  include ::Primer::Yard::DocsHelper

  # source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#22
  def link_to_accessibility; end

  # source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#10
  def link_to_component(component); end

  # source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#26
  def link_to_octicons; end

  # source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#14
  def link_to_system_arguments_docs; end

  # source://primer_view_components//lib/primer/yard/info_arch_docs_helper.rb#18
  def link_to_typography_docs; end
end

# Helper methods for documentation generated in Lookbook pages.
#
# source://primer_view_components//lib/primer/yard/lookbook_docs_helper.rb#7
module Primer::Yard::LookbookDocsHelper
  # Adheres to the same signature as Primer::Yard::DocsHelper#link_to_component so link_to_component
  # may be used in a Gatsby or Lookbook context and produce the correct link for each platform.
  #
  # @param component [Class] The component class to link to.
  # @return [String] The link, either in HTML or markdown format.
  #
  # source://primer_view_components//lib/primer/yard/lookbook_docs_helper.rb#13
  def link_to_component(component); end
end

# Wrapper around an instance of YARD::Registry that provides easy access to component
# documentation.
#
# source://primer_view_components//lib/primer/yard/registry.rb#100
class Primer::Yard::Registry
  extend ::ViewComponent::TestHelpers
  extend ::Primer::ViewHelper
  extend ::Primer::Yard::DocsHelper

  # @return [Registry] a new instance of Registry
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#116
  def initialize(yard_registry); end

  # source://primer_view_components//lib/primer/yard/registry.rb#120
  def find(component); end

  # Returns the value of attribute yard_registry.
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#114
  def yard_registry; end

  private

  # source://primer_view_components//lib/primer/yard/registry.rb#130
  def entries; end

  class << self
    # source://primer_view_components//lib/primer/yard/registry.rb#106
    def make; end
  end
end

# A wrapper around a YARD class reference that provides convenience methods
# for extracting component parameters, accessibility status, etc.
#
# source://primer_view_components//lib/primer/yard/registry.rb#11
class Primer::Yard::RegistryEntry
  include ::Primer::Yard::DocsHelper

  # @return [RegistryEntry] a new instance of RegistryEntry
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#18
  def initialize(component, docs); end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#89
  def a11y_reviewed?; end

  # Returns the value of attribute component.
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#14
  def component; end

  # source://primer_view_components//lib/primer/yard/registry.rb#73
  def component_id; end

  # source://primer_view_components//lib/primer/yard/registry.rb#41
  def constructor; end

  # Returns the value of attribute docs.
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#14
  def docs; end

  # source://primer_view_components//lib/primer/yard/registry.rb#93
  def manifest_entry; end

  # source://primer_view_components//lib/primer/yard/registry.rb#23
  def metadata; end

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/delegation.rb#331
  def method_missing(method, *args, **_arg2, &block); end

  # source://primer_view_components//lib/primer/yard/registry.rb#53
  def non_slot_methods; end

  # source://primer_view_components//lib/primer/yard/registry.rb#45
  def params; end

  # source://primer_view_components//lib/primer/yard/registry.rb#61
  def public_methods; end

  # source://primer_view_components//lib/primer/yard/registry.rb#85
  def short_name; end

  # @return [Boolean]
  #
  # source://primer_view_components//lib/primer/yard/registry.rb#57
  def slot_method?(mtd); end

  # source://primer_view_components//lib/primer/yard/registry.rb#49
  def slot_methods; end

  # source://primer_view_components//lib/primer/yard/registry.rb#77
  def status; end

  # source://primer_view_components//lib/primer/yard/registry.rb#81
  def status_module; end

  # source://primer_view_components//lib/primer/yard/registry.rb#69
  def title; end

  private

  # source://activesupport/7.1.3.2/lib/active_support/core_ext/module/delegation.rb#323
  def respond_to_missing?(name, include_private = T.unsafe(nil)); end
end

# YARD Handler to parse `renders_many` calls.
#
# source://primer_view_components//lib/primer/yard/renders_many_handler.rb#7
class Primer::Yard::RendersManyHandler < ::YARD::Handlers::Ruby::Base; end

# YARD Handler to parse `renders_one` calls.
#
# source://primer_view_components//lib/primer/yard/renders_one_handler.rb#7
class Primer::Yard::RendersOneHandler < ::YARD::Handlers::Ruby::Base; end

class RadioButtonGroupForm < ::ApplicationForm; end
class RadioButtonWithNestedForm < ::ApplicationForm; end

# source://railties/7.1.3.2/lib/rails/gem_version.rb#3
module Rails
  extend ::ActiveSupport::Autoload
  extend ::ActiveSupport::Benchmarkable
end

# source://railties/7.1.3.2/lib/rails/application/bootstrap.rb#12
module Rails::Application::Bootstrap
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

# source://railties/7.1.3.2/lib/rails/application/finisher.rb#11
module Rails::Application::Finisher
  include ::Rails::Initializable
  extend ::Rails::Initializable::ClassMethods
end

# source://railties/7.1.3.2/lib/rails/application/routes_reloader.rb#7
class Rails::Application::RoutesReloader
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods
  extend ::ActiveSupport::DescendantsTracker
end

# source://railties/7.1.3.2/lib/rails/command.rb#11
module Rails::Command
  include ::Rails::Command::Behavior
  extend ::ActiveSupport::Autoload
  extend ::Rails::Command::Behavior::ClassMethods
end

# source://railties/7.1.3.2/lib/rails/command/behavior.rb#7
module Rails::Command::Behavior
  extend ::ActiveSupport::Concern
end

# source://railties/7.1.3.2/lib/rails/command/behavior.rb#0
module Rails::Command::Behavior::ClassMethods
  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#12
  def no_color!; end

  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#17
  def subclasses; end

  private

  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#36
  def lookup(namespaces); end

  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#56
  def lookup!; end

  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#70
  def namespaces_to_paths(namespaces); end

  # source://railties/7.1.3.2/lib/rails/command/behavior.rb#23
  def print_list(base, namespaces); end
end

# source://railties/7.1.3.2/lib/rails/command/environment_argument.rb#8
module Rails::Command::EnvironmentArgument
  extend ::ActiveSupport::Concern
end

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#6
module Rails::Dom::Testing::Assertions
  include ::Rails::Dom::Testing::Assertions::DomAssertions
  include ::Rails::Dom::Testing::Assertions::SelectorAssertions
end

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#7
module Rails::Dom::Testing::Assertions::DomAssertions
  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#35
  def assert_dom_equal(expected, actual, message = T.unsafe(nil), strict: T.unsafe(nil), html_version: T.unsafe(nil)); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#68
  def assert_dom_not_equal(expected, actual, message = T.unsafe(nil), strict: T.unsafe(nil), html_version: T.unsafe(nil)); end

  protected

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#75
  def compare_doms(expected, actual, strict); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#128
  def equal_attribute?(attr, other_attr); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#115
  def equal_attribute_nodes?(nodes, other_nodes); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#107
  def equal_child?(child, other_child, strict); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#95
  def equal_children?(child, other_child, strict); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#87
  def extract_children(node, strict); end

  private

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/dom_assertions.rb#133
  def fragment(text, html_version: T.unsafe(nil)); end
end

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#7
module Rails::Dom::Testing::Assertions::SelectorAssertions
  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#163
  def assert_dom(*args, &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#285
  def assert_dom_email(html_version: T.unsafe(nil), &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#232
  def assert_dom_encoded(element = T.unsafe(nil), html_version: T.unsafe(nil), &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#163
  def assert_select(*args, &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#285
  def assert_select_email(html_version: T.unsafe(nil), &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#232
  def assert_select_encoded(element = T.unsafe(nil), html_version: T.unsafe(nil), &block); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#58
  def css_select(*args); end

  private

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#307
  def assert_size_match!(size, equals, css_selector, message = T.unsafe(nil)); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#319
  def count_description(min, max, count); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#301
  def document_root_element; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#335
  def nest_selection(selection); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#344
  def nodeset(node); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions.rb#331
  def pluralize_element(quantity); end
end

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#12
class Rails::Dom::Testing::Assertions::SelectorAssertions::HTMLSelector
  include ::Minitest::Assertions

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#17
  def initialize(values, previous_selection = T.unsafe(nil), &root_fallback); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#46
  def context; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#13
  def css_selector; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#13
  def message; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#39
  def select; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#33
  def selecting_no_body?; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#13
  def tests; end

  private

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#100
  def extract_equality_tests; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#72
  def extract_root(previous_selection, root_fallback); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#89
  def extract_selectors; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#48
  def filter(matches); end

  class << self
    # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#46
    def context; end
  end
end

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/html_selector.rb#44
Rails::Dom::Testing::Assertions::SelectorAssertions::HTMLSelector::NO_STRIP = T.let(T.unsafe(nil), Array)

# source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#8
class Rails::Dom::Testing::Assertions::SelectorAssertions::SubstitutionContext
  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#9
  def initialize; end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#20
  def match(matches, attribute, matcher); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#13
  def substitute!(selector, values, format_for_presentation = T.unsafe(nil)); end

  private

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#25
  def matcher_for(value, format_for_presentation); end

  # source://rails-dom-testing/2.2.0/lib/rails/dom/testing/assertions/selector_assertions/substitution_context.rb#36
  def substitutable?(value); end
end

# source://railties/7.1.3.2/lib/rails/engine/railties.rb#4
class Rails::Engine < ::Rails::Railtie
  include ::ActiveSupport::Callbacks
  extend ::ActiveSupport::Callbacks::ClassMethods

  # source://railties/7.1.3.2/lib/rails/engine.rb#439
  def initialize; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
  def __callbacks; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
  def __callbacks?; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#963
  def _load_seed_callbacks; end

  # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#951
  def _run_load_seed_callbacks(&block); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#517
  def app; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#534
  def call(env); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#553
  def config; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#491
  def eager_load!; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#529
  def endpoint; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#437
  def engine_name(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#540
  def env_config; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#501
  def helpers; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#512
  def helpers_paths; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#437
  def isolated?(&block); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#453
  def load_console(app = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#477
  def load_generators(app = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#462
  def load_runner(app = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#561
  def load_seed; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#486
  def load_server(app = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#469
  def load_tasks(app = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#436
  def middleware(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#436
  def paths(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#496
  def railties; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#436
  def root(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#546
  def routes(&block); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#677
  def routes?; end

  protected

  # source://railties/7.1.3.2/lib/rails/engine.rb#682
  def run_tasks_blocks(*_arg0); end

  private

  # source://railties/7.1.3.2/lib/rails/engine.rb#714
  def _all_autoload_once_paths; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#718
  def _all_autoload_paths; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#727
  def _all_load_paths(add_autoload_paths_to_load_path); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#751
  def build_middleware; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#743
  def build_request(env); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#710
  def default_middleware_stack; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#738
  def fixtures_in_root_and_not_in_vendor?(fixtures); end

  # source://railties/7.1.3.2/lib/rails/engine.rb#694
  def has_migrations?; end

  # source://railties/7.1.3.2/lib/rails/engine.rb#688
  def load_config_initializer(initializer); end

  class << self
    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
    def __callbacks; end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
    def __callbacks=(value); end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#70
    def __callbacks?; end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#955
    def _load_seed_callbacks; end

    # source://activesupport/7.1.3.2/lib/active_support/callbacks.rb#959
    def _load_seed_callbacks=(value); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#354
    def called_from; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#354
    def called_from=(_arg0); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#359
    def eager_load!(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#379
    def endpoint(endpoint = T.unsafe(nil)); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#176
    def engine_name(name = T.unsafe(nil)); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#423
    def find(path); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#375
    def find_root(from); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#698
    def find_root_with_flag(flag, root_path, default = T.unsafe(nil)); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#361
    def inherited(base); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#385
    def isolate_namespace(mod); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#354
    def isolated; end

    # source://railties/7.1.3.2/lib/rails/engine.rb#354
    def isolated=(_arg0); end

    # source://railties/7.1.3.2/lib/rails/engine.rb#354
    def isolated?; end
  end
end

# source://railties/7.1.3.2/lib/rails/engine/configuration.rb#7
class Rails::Engine::Configuration < ::Rails::Railtie::Configuration
  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#41
  def initialize(root = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#125
  def all_autoload_once_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#119
  def all_autoload_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#131
  def all_eager_load_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#29
  def autoload_once_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#10
  def autoload_once_paths=(_arg0); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#20
  def autoload_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#10
  def autoload_paths=(_arg0); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#39
  def eager_load_paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#10
  def eager_load_paths=(_arg0); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#65
  def generators; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#9
  def javascript_path; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#9
  def javascript_path=(_arg0); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#9
  def middleware; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#9
  def middleware=(_arg0); end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#71
  def paths; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#8
  def root; end

  # source://railties/7.1.3.2/lib/rails/engine/configuration.rb#113
  def root=(value); end
end

# source://railties/7.1.3.2/lib/rails/engine/railties.rb#5
class Rails::Engine::Railties
  include ::Enumerable

  # source://railties/7.1.3.2/lib/rails/engine/railties.rb#9
  def initialize; end

  # source://railties/7.1.3.2/lib/rails/engine/railties.rb#18
  def -(others); end

  # source://railties/7.1.3.2/lib/rails/engine/railties.rb#7
  def _all; end

  # source://railties/7.1.3.2/lib/rails/engine/railties.rb#14
  def each(*args, &block); end
end

# source://railties/7.1.3.2/lib/rails/generators.rb#14
module Rails::Generators
  include ::Rails::Command::Behavior
  extend ::Rails::Command::Behavior::ClassMethods
end

# source://railties/7.1.3.2/lib/rails/generators/migration.rb#11
module Rails::Generators::Migration
  extend ::ActiveSupport::Concern
end

# source://railties/7.1.3.2/lib/rails/generators/testing/behavior.rb#13
module Rails::Generators::Testing
  include ::ActiveSupport::Deprecation::DeprecatedConstantAccessor
end

# source://railties/7.1.3.2/lib/rails/generators/testing/behavior.rb#14
module Rails::Generators::Testing::Behavior
  include ::ActiveSupport::Testing::Stream
  extend ::ActiveSupport::Concern
end

# source://railties/7.1.3.2/lib/rails/initializable.rb#6
module Rails::Initializable
  mixes_in_class_methods ::Rails::Initializable::ClassMethods

  # source://railties/7.1.3.2/lib/rails/initializable.rb#66
  def initializers; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#58
  def run_initializers(group = T.unsafe(nil), *args); end

  class << self
    # source://railties/7.1.3.2/lib/rails/initializable.rb#7
    def included(base); end
  end
end

# source://railties/7.1.3.2/lib/rails/initializable.rb#70
module Rails::Initializable::ClassMethods
  # source://railties/7.1.3.2/lib/rails/initializable.rb#88
  def initializer(name, opts = T.unsafe(nil), &blk); end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#71
  def initializers; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#75
  def initializers_chain; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#84
  def initializers_for(binding); end
end

# source://railties/7.1.3.2/lib/rails/initializable.rb#45
class Rails::Initializable::Collection < ::Array
  include ::TSort

  # source://railties/7.1.3.2/lib/rails/initializable.rb#53
  def +(other); end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#49
  def tsort_each_child(initializer, &block); end

  def tsort_each_node; end
end

# source://railties/7.1.3.2/lib/rails/initializable.rb#11
class Rails::Initializable::Initializer
  # source://railties/7.1.3.2/lib/rails/initializable.rb#14
  def initialize(name, context, options, &block); end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#23
  def after; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#19
  def before; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#27
  def belongs_to?(group); end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#35
  def bind(context); end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#12
  def block; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#40
  def context_class; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#12
  def name; end

  # source://railties/7.1.3.2/lib/rails/initializable.rb#31
  def run(*args); end
end

# source://railties/7.1.3.2/lib/rails/railtie.rb#136
class Rails::Railtie
  include ::Rails::Initializable
  extend ::ActiveSupport::DescendantsTracker
  extend ::Rails::Initializable::ClassMethods

  # source://railties/7.1.3.2/lib/rails/railtie.rb#246
  def initialize; end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#263
  def config; end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#256
  def configure(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#252
  def inspect; end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#244
  def railtie_name(*_arg0, **_arg1, &_arg2); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#267
  def railtie_namespace; end

  protected

  # source://railties/7.1.3.2/lib/rails/railtie.rb#272
  def run_console_blocks(app); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#276
  def run_generators_blocks(app); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#280
  def run_runner_blocks(app); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#289
  def run_server_blocks(app); end

  # source://railties/7.1.3.2/lib/rails/railtie.rb#284
  def run_tasks_blocks(app); end

  private

  # source://railties/7.1.3.2/lib/rails/railtie.rb#295
  def each_registered_block(type, &block); end

  class << self
    # source://railties/7.1.3.2/lib/rails/railtie.rb#194
    def <=>(other); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#172
    def abstract_railtie?; end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#146
    def config(*_arg0, **_arg1, &_arg2); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#190
    def configure(&block); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#156
    def console(&blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#164
    def generators(&blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#198
    def inherited(subclass); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#183
    def instance; end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#176
    def railtie_name(name = T.unsafe(nil)); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#152
    def rake_tasks(&blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#160
    def runner(&blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#168
    def server(&blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#148
    def subclasses; end

    protected

    # source://railties/7.1.3.2/lib/rails/railtie.rb#206
    def increment_load_index; end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#204
    def load_index; end

    private

    # source://railties/7.1.3.2/lib/rails/railtie.rb#212
    def generate_railtie_name(string); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#224
    def method_missing(name, *args, **_arg2, &block); end

    def new(*_arg0); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#236
    def register_block_for(type, &blk); end

    # source://railties/7.1.3.2/lib/rails/railtie.rb#216
    def respond_to_missing?(name, _); end
  end
end

# source://railties/7.1.3.2/lib/rails/railtie.rb#142
Rails::Railtie::ABSTRACT_RAILTIES = T.let(T.unsafe(nil), Array)

# source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#7
class Rails::Railtie::Configuration
  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#8
  def initialize; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#70
  def after_initialize(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#75
  def after_routes_loaded(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#47
  def app_generators; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#39
  def app_middleware; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#54
  def before_configuration(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#60
  def before_eager_load(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#65
  def before_initialize(&block); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#18
  def eager_load_namespaces; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#90
  def respond_to?(name, include_private = T.unsafe(nil)); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#86
  def to_prepare(&blk); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#80
  def to_prepare_blocks; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#30
  def watchable_dirs; end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#23
  def watchable_files; end

  private

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#95
  def actual_method?(key); end

  # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#99
  def method_missing(name, *args, &blk); end

  class << self
    # source://railties/7.1.3.2/lib/rails/railtie/configuration.rb#13
    def eager_load_namespaces; end
  end
end

class SelectForm < ::ApplicationForm; end
class SingleTextFieldForm < ::ApplicationForm; end

# source://sprockets-rails/3.5.2/lib/sprockets/rails/context.rb#6
module Sprockets::Rails::Context
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
end

# source://sprockets-rails/3.5.2/lib/sprockets/rails/helper.rb#8
module Sprockets::Rails::Helper
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  include ::Sprockets::Rails::Utils
end

# source://sprockets-rails/3.5.2/lib/sprockets/rails/helper.rb#10
class Sprockets::Rails::Helper::AssetNotPrecompiled < ::StandardError; end

# source://sprockets-rails/3.5.2/lib/sprockets/rails/helper.rb#12
class Sprockets::Rails::Helper::AssetNotPrecompiledError < ::Sprockets::Rails::Helper::AssetNotPrecompiled
  include ::Sprockets::Rails::Utils
end

# source://sprockets-rails/3.5.2/lib/sprockets/rails/utils.rb#5
module Sprockets::Rails::Utils
  # source://sprockets-rails/3.5.2/lib/sprockets/rails/utils.rb#6
  def using_sprockets4?; end
end

# source://sprockets-rails/3.5.2/lib/sprockets/railtie.rb#60
class Sprockets::Railtie < ::Rails::Railtie
  include ::Sprockets::Rails::Utils
end

# source://yard/0.9.36/lib/yard/core_ext/string.rb#2
class String
  include ::Comparable
  include ::MessagePack::CoreExt
end

class SubmitButtonForm < ::ApplicationForm; end
class TextFieldAndCheckboxForm < ::ApplicationForm; end

# source://msgpack/1.7.2/lib/msgpack/core_ext.rb#27
class TrueClass
  include ::MessagePack::CoreExt
end

# source://turbo-rails/2.0.10/lib/turbo/engine.rb#3
module Turbo
  extend ::ActiveSupport::Autoload
end

module Turbo::Broadcastable
  extend ::ActiveSupport::Concern
end

module Turbo::DriveHelper
  def turbo_exempts_page_from_cache; end
  def turbo_exempts_page_from_cache_tag; end
  def turbo_exempts_page_from_preview; end
  def turbo_exempts_page_from_preview_tag; end
  def turbo_page_requires_reload; end
  def turbo_page_requires_reload_tag; end
  def turbo_refresh_method_tag(method = T.unsafe(nil)); end
  def turbo_refresh_scroll_tag(scroll = T.unsafe(nil)); end
  def turbo_refreshes_with(method: T.unsafe(nil), scroll: T.unsafe(nil)); end
end

module Turbo::Frames::FrameRequest
  extend ::ActiveSupport::Concern
end

module Turbo::FramesHelper
  def turbo_frame_tag(*ids, src: T.unsafe(nil), target: T.unsafe(nil), **attributes, &block); end
end

module Turbo::IncludesHelper
  def turbo_include_tags; end
end

module Turbo::Native::Navigation
  extend ::ActiveSupport::Concern
end

module Turbo::RequestIdTracking
  extend ::ActiveSupport::Concern
end

module Turbo::Streams::ActionHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper

  def turbo_stream_action_tag(action, target: T.unsafe(nil), targets: T.unsafe(nil), template: T.unsafe(nil), **attributes); end
  def turbo_stream_refresh_tag(request_id: T.unsafe(nil), **attributes); end

  private

  def convert_to_turbo_stream_dom_id(target, include_selector: T.unsafe(nil)); end
end

module Turbo::Streams::Broadcasts
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
end

class Turbo::Streams::TagBuilder
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::Turbo::Streams::ActionHelper
end

module Turbo::Streams::TurboStreamsTagBuilder
  private

  def turbo_stream; end
end

module Turbo::StreamsHelper
  def turbo_stream; end
  def turbo_stream_from(*streamables, **attributes); end
end

# source://turbo-rails/2.0.10/lib/turbo/test_assertions.rb#2
module Turbo::TestAssertions
  extend ::ActiveSupport::Concern
end

# source://turbo-rails/2.0.10/lib/turbo/test_assertions/integration_test_assertions.rb#3
module Turbo::TestAssertions::IntegrationTestAssertions
  # source://turbo-rails/2.0.10/lib/turbo/test_assertions/integration_test_assertions.rb#69
  def assert_no_turbo_stream(status: T.unsafe(nil), **attributes); end

  # source://turbo-rails/2.0.10/lib/turbo/test_assertions/integration_test_assertions.rb#41
  def assert_turbo_stream(status: T.unsafe(nil), **attributes, &block); end
end

# source://view_component/3.14.0/lib/view_component.rb#6
module ViewComponent
  extend ::ActiveSupport::Autoload
end

# source://view_component/3.14.0/lib/view_component/base.rb#19
class ViewComponent::Base < ::ActionView::Base
  include ::Primer::FormHelper
  include ::ViewComponent::InlineTemplate
  include ::ViewComponent::UseHelpers
  include ::ViewComponent::Slotable
  include ::ViewComponent::Translatable
  include ::ViewComponent::WithContentHelper
  extend ::ViewComponent::InlineTemplate::ClassMethods
  extend ::ViewComponent::UseHelpers::ClassMethods
  extend ::ViewComponent::Slotable::ClassMethods
  extend ::ViewComponent::Translatable::ClassMethods

  # source://view_component/3.14.0/lib/view_component/base.rb#193
  def initialize(*_arg0); end

  # source://view_component/3.14.0/lib/view_component/base.rb#49
  def __vc_original_view_context; end

  # source://view_component/3.14.0/lib/view_component/base.rb#49
  def __vc_original_view_context=(_arg0); end

  # source://view_component/3.14.0/lib/view_component/base.rb#181
  def before_render; end

  # source://view_component/3.14.0/lib/view_component/base.rb#40
  def config(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/base.rb#286
  def content; end

  # source://view_component/3.14.0/lib/view_component/base.rb#301
  def content?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#43
  def content_security_policy_nonce(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/base.rb#216
  def controller; end

  # source://view_component/3.14.0/lib/view_component/base.rb#40
  def form_authenticity_token(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/base.rb#271
  def format; end

  # source://view_component/3.14.0/lib/view_component/base.rb#226
  def helpers; end

  # source://view_component/3.14.0/lib/view_component/translatable.rb#16
  def i18n_backend; end

  # source://view_component/3.14.0/lib/view_component/base.rb#241
  def method_missing(method_name, *args); end

  # source://view_component/3.14.0/lib/view_component/base.rb#173
  def output_postamble; end

  # source://view_component/3.14.0/lib/view_component/base.rb#166
  def output_preamble; end

  # source://view_component/3.14.0/lib/view_component/base.rb#40
  def protect_against_forgery?(*_arg0, **_arg1, &_arg2); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#19
  def registered_slots; end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#19
  def registered_slots=(_arg0); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#19
  def registered_slots?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#203
  def render(options = T.unsafe(nil), args = T.unsafe(nil), &block); end

  # source://view_component/3.14.0/lib/view_component/base.rb#188
  def render?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#72
  def render_in(view_context, &block); end

  # source://view_component/3.14.0/lib/view_component/base.rb#135
  def render_parent; end

  # source://view_component/3.14.0/lib/view_component/base.rb#150
  def render_parent_to_string; end

  # source://view_component/3.14.0/lib/view_component/base.rb#279
  def request; end

  # source://view_component/3.14.0/lib/view_component/base.rb#60
  def set_original_view_context(view_context); end

  # source://view_component/3.14.0/lib/view_component/base.rb#264
  def view_cache_dependencies; end

  # source://view_component/3.14.0/lib/view_component/base.rb#258
  def virtual_path; end

  private

  # source://view_component/3.14.0/lib/view_component/base.rb#313
  def __vc_content_set_by_with_content_defined?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#309
  def __vc_render_in_block_provided?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#355
  def compiler; end

  # source://view_component/3.14.0/lib/view_component/base.rb#317
  def content_evaluated?; end

  # source://view_component/3.14.0/lib/view_component/base.rb#321
  def maybe_escape_html(text); end

  # source://view_component/3.14.0/lib/view_component/base.rb#349
  def safe_output_postamble; end

  # source://view_component/3.14.0/lib/view_component/base.rb#343
  def safe_output_preamble; end

  # source://view_component/3.14.0/lib/view_component/base.rb#333
  def safe_render_template_for(variant); end

  # source://view_component/3.14.0/lib/view_component/base.rb#307
  def view_context; end

  class << self
    # source://view_component/3.14.0/lib/view_component/base.rb#46
    def __vc_strip_trailing_whitespace; end

    # source://view_component/3.14.0/lib/view_component/base.rb#46
    def __vc_strip_trailing_whitespace=(value); end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def capture_compatibility_patch_enabled(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#675
    def collection_counter_parameter; end

    # source://view_component/3.14.0/lib/view_component/base.rb#685
    def collection_iteration_parameter; end

    # source://view_component/3.14.0/lib/view_component/base.rb#670
    def collection_parameter; end

    # source://view_component/3.14.0/lib/view_component/base.rb#580
    def compile(raise_errors: T.unsafe(nil), force: T.unsafe(nil)); end

    # source://view_component/3.14.0/lib/view_component/base.rb#566
    def compiled?; end

    # source://view_component/3.14.0/lib/view_component/base.rb#585
    def compiler; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def component_parent_class(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#26
    def config; end

    # source://view_component/3.14.0/lib/view_component/base.rb#680
    def counter_argument_present?; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def default_preview_layout(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#571
    def ensure_compiled; end

    # source://view_component/3.14.0/lib/view_component/base.rb#596
    def format; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def generate(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend; end

    # source://view_component/3.14.0/lib/view_component/translatable.rb#16
    def i18n_backend=(value); end

    # source://view_component/3.14.0/lib/view_component/base.rb#601
    def identifier; end

    # source://view_component/3.14.0/lib/view_component/base.rb#511
    def inherited(child); end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def instrumentation_enabled(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#690
    def iteration_argument_present?; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def preview_controller(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def preview_paths(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def preview_route(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots; end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots=(value); end

    # source://view_component/3.14.0/lib/view_component/slotable.rb#19
    def registered_slots?; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def render_monkey_patch_enabled(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#506
    def short_identifier; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def show_previews(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def show_previews_source(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#456
    def sidecar_files(extensions); end

    # source://view_component/3.14.0/lib/view_component/base.rb#447
    def source_location; end

    # source://view_component/3.14.0/lib/view_component/base.rb#447
    def source_location=(_arg0); end

    # source://view_component/3.14.0/lib/view_component/base.rb#626
    def strip_trailing_whitespace(value = T.unsafe(nil)); end

    # source://view_component/3.14.0/lib/view_component/base.rb#633
    def strip_trailing_whitespace?; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def test_controller(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#591
    def type; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def use_deprecated_instrumentation_name(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#643
    def validate_collection_parameter!(validate_default: T.unsafe(nil)); end

    # source://view_component/3.14.0/lib/view_component/base.rb#663
    def validate_initialization_parameters!; end

    # source://view_component/3.14.0/lib/view_component/base.rb#21
    def view_component_path(*_arg0, **_arg1, &_arg2); end

    # source://view_component/3.14.0/lib/view_component/base.rb#447
    def virtual_path; end

    # source://view_component/3.14.0/lib/view_component/base.rb#447
    def virtual_path=(_arg0); end

    # source://view_component/3.14.0/lib/view_component/base.rb#499
    def with_collection(collection, **args); end

    # source://view_component/3.14.0/lib/view_component/base.rb#612
    def with_collection_parameter(parameter); end

    private

    # source://view_component/3.14.0/lib/view_component/base.rb#701
    def initialize_parameter_names; end

    # source://view_component/3.14.0/lib/view_component/base.rb#709
    def initialize_parameters; end

    # source://view_component/3.14.0/lib/view_component/base.rb#713
    def provided_collection_parameter; end

    # source://view_component/3.14.0/lib/view_component/base.rb#696
    def splatted_keyword_argument_present?; end
  end
end

# source://view_component/3.14.0/lib/view_component/base.rb#37
ViewComponent::Base::RESERVED_PARAMETER = T.let(T.unsafe(nil), Symbol)

# source://view_component/3.14.0/lib/view_component/inline_template.rb#4
module ViewComponent::InlineTemplate
  extend ::ActiveSupport::Concern
end

# source://view_component/3.14.0/lib/view_component/inline_template.rb#0
module ViewComponent::InlineTemplate::ClassMethods
  # source://view_component/3.14.0/lib/view_component/inline_template.rb#49
  def inherited(subclass); end

  # source://view_component/3.14.0/lib/view_component/inline_template.rb#41
  def inline_template; end

  # source://view_component/3.14.0/lib/view_component/inline_template.rb#45
  def inline_template_language; end

  # source://view_component/3.14.0/lib/view_component/inline_template.rb#9
  def method_missing(method, *args, **_arg2); end

  private

  # source://view_component/3.14.0/lib/view_component/inline_template.rb#37
  def respond_to_missing?(method, include_all = T.unsafe(nil)); end
end

# source://view_component/3.14.0/lib/view_component/preview.rb#6
class ViewComponent::Preview
  include ::ActionDispatch::Routing::PolymorphicRoutes
  include ::ActionDispatch::Routing::UrlFor
  include ::ActionView::Helpers::AssetUrlHelper
  include ::ActionView::Helpers::CaptureHelper
  include ::ActionView::Helpers::OutputSafetyHelper
  include ::ActionView::Helpers::TagHelper
  include ::ActionView::Helpers::AssetTagHelper
  extend ::ActiveSupport::DescendantsTracker
end

module ViewComponent::PreviewActions
  extend ::ActiveSupport::Concern
end

# source://view_component/3.14.0/lib/view_component/slot.rb#6
class ViewComponent::Slot
  include ::ViewComponent::WithContentHelper
end

# source://view_component/3.14.0/lib/view_component/slotable.rb#8
module ViewComponent::Slotable
  extend ::ActiveSupport::Concern
end

# source://view_component/3.14.0/lib/view_component/slotable.rb#0
module ViewComponent::Slotable::ClassMethods
  # source://view_component/3.14.0/lib/view_component/slotable.rb#204
  def inherited(child); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#209
  def register_polymorphic_slot(slot_name, types, collection:); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#147
  def renders_many(slot_name, callable = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#77
  def renders_one(slot_name, callable = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#191
  def slot_type(slot_name); end

  private

  # source://view_component/3.14.0/lib/view_component/slotable.rb#268
  def define_slot(slot_name, collection:, callable:); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#327
  def raise_if_slot_conflicts_with_call(slot_name); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#323
  def raise_if_slot_ends_with_question_mark(slot_name); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#333
  def raise_if_slot_name_uncountable(slot_name); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#316
  def raise_if_slot_registered(slot_name); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#264
  def register_slot(slot_name, **kwargs); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#291
  def validate_plural_slot_name(slot_name); end

  # source://view_component/3.14.0/lib/view_component/slotable.rb#302
  def validate_singular_slot_name(slot_name); end
end

# source://view_component/3.14.0/lib/view_component/system_test_helpers.rb#4
module ViewComponent::SystemTestHelpers
  include ::ViewComponent::TestHelpers
end

# source://view_component/3.14.0/lib/view_component/test_case.rb#6
class ViewComponent::TestCase < ::ActiveSupport::TestCase
  include ::ViewComponent::TestHelpers
end

# source://view_component/3.14.0/lib/view_component/test_helpers.rb#4
module ViewComponent::TestHelpers
  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#114
  def render_in_view_context(*args, **_arg1, &block); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#50
  def render_inline(component, **args, &block); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#85
  def render_preview(name, from: T.unsafe(nil), params: T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#38
  def rendered_content; end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#229
  def vc_test_controller; end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#244
  def vc_test_request; end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#149
  def with_controller_class(klass); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#185
  def with_request_url(full_path, host: T.unsafe(nil), method: T.unsafe(nil), format: T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#130
  def with_variant(variant); end

  private

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#258
  def __vc_test_helpers_build_controller(klass); end

  # source://view_component/3.14.0/lib/view_component/test_helpers.rb#262
  def __vc_test_helpers_preview_class; end
end

# source://view_component/3.14.0/lib/view_component/translatable.rb#9
module ViewComponent::Translatable
  extend ::ActiveSupport::Concern
end

# source://view_component/3.14.0/lib/view_component/translatable.rb#0
module ViewComponent::Translatable::ClassMethods
  # source://view_component/3.14.0/lib/view_component/translatable.rb#24
  def build_i18n_backend; end

  # source://view_component/3.14.0/lib/view_component/translatable.rb#44
  def i18n_key(key, scope = T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/translatable.rb#20
  def i18n_scope; end

  # source://view_component/3.14.0/lib/view_component/translatable.rb#52
  def t(key = T.unsafe(nil), **options); end

  # source://view_component/3.14.0/lib/view_component/translatable.rb#52
  def translate(key = T.unsafe(nil), **options); end
end

# source://view_component/3.14.0/lib/view_component/use_helpers.rb#3
module ViewComponent::UseHelpers
  extend ::ActiveSupport::Concern
end

# source://view_component/3.14.0/lib/view_component/use_helpers.rb#0
module ViewComponent::UseHelpers::ClassMethods
  # source://view_component/3.14.0/lib/view_component/use_helpers.rb#11
  def use_helper(helper_method, from: T.unsafe(nil), prefix: T.unsafe(nil)); end

  # source://view_component/3.14.0/lib/view_component/use_helpers.rb#7
  def use_helpers(*args, from: T.unsafe(nil), prefix: T.unsafe(nil)); end

  private

  # source://view_component/3.14.0/lib/view_component/use_helpers.rb#36
  def define_helper(helper_method:, source:); end

  # source://view_component/3.14.0/lib/view_component/use_helpers.rb#26
  def full_helper_method_name(helper_method, prefix: T.unsafe(nil), source: T.unsafe(nil)); end
end

# source://view_component/3.14.0/lib/view_component/with_content_helper.rb#4
module ViewComponent::WithContentHelper
  # source://view_component/3.14.0/lib/view_component/with_content_helper.rb#5
  def with_content(value); end
end

# source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#4
module ViteRails::TagHelpers
  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#25
  def vite_asset_path(name, **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#33
  def vite_asset_url(name, **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#6
  def vite_client_tag(crossorigin: T.unsafe(nil), **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#72
  def vite_image_tag(name, **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#38
  def vite_javascript_tag(*names, type: T.unsafe(nil), asset_type: T.unsafe(nil), skip_preload_tags: T.unsafe(nil), skip_style_tags: T.unsafe(nil), crossorigin: T.unsafe(nil), media: T.unsafe(nil), **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#83
  def vite_picture_tag(*sources, &block); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#13
  def vite_react_refresh_tag(**options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#63
  def vite_stylesheet_tag(*names, **options); end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#58
  def vite_typescript_tag(*names, **options); end

  private

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#98
  def vite_manifest; end

  # source://vite_rails/3.0.17/lib/vite_rails/tag_helpers.rb#103
  def vite_preload_tag(*sources, crossorigin:, **options); end
end

# source://yard/0.9.36/lib/yard/autoload.rb#29
module YARD::CodeObjects
  extend ::YARD::CodeObjects::NamespaceMapper
end

# source://yard/0.9.36/lib/yard/code_objects/base.rb#91
YARD::CodeObjects::BUILTIN_ALL = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#78
YARD::CodeObjects::BUILTIN_CLASSES = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#67
YARD::CodeObjects::BUILTIN_EXCEPTIONS = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#94
YARD::CodeObjects::BUILTIN_EXCEPTIONS_HASH = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#87
YARD::CodeObjects::BUILTIN_MODULES = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#133
class YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/base.rb#238
  def initialize(namespace, name, *_arg2); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#323
  def ==(other); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#343
  def [](key); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#356
  def []=(key, value); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#290
  def add_file(file, line = T.unsafe(nil), has_comments = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#561
  def add_tag(*tags); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#166
  def base_docstring; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#263
  def copy_to(other); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#405
  def docstring(locale = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#427
  def docstring=(comments); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#170
  def dynamic; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#170
  def dynamic=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#178
  def dynamic?; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#323
  def eql?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#323
  def equal?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#307
  def file; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#137
  def files; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#505
  def format(options = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#174
  def group; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#174
  def group=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#556
  def has_tag?(name); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#334
  def hash; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#513
  def inspect; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#315
  def line; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#373
  def method_missing(meth, *args, &block); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#278
  def name(prefix = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#142
  def namespace; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#522
  def namespace=(obj); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#142
  def parent; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#522
  def parent=(obj); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#453
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#475
  def relative_path(other); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#567
  def root?; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#576
  def sep; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#159
  def signature; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#159
  def signature=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#146
  def source; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#388
  def source=(statement); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#152
  def source_type; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#152
  def source_type=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#548
  def tag(name); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#552
  def tags(name = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#468
  def title; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#337
  def to_ary; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#453
  def to_s; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#437
  def type; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#181
  def visibility; end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#183
  def visibility=(v); end

  protected

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#587
  def copyable_attributes; end

  private

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#599
  def format_source(source); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#606
  def translate_docstring(locale); end

  class << self
    # source://yard/0.9.36/lib/yard/code_objects/base.rb#219
    def ===(other); end

    # source://yard/0.9.36/lib/yard/code_objects/base.rb#189
    def new(namespace, name, *args, &block); end
  end
end

# source://yard/0.9.36/lib/yard/code_objects/base.rb#52
YARD::CodeObjects::CONSTANTMATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#55
YARD::CodeObjects::CONSTANTSTART = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#46
YARD::CodeObjects::CSEP = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#49
YARD::CodeObjects::CSEPQ = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/class_object.rb#7
class YARD::CodeObjects::ClassObject < ::YARD::CodeObjects::NamespaceObject
  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#15
  def initialize(namespace, name, *args, &block); end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#101
  def constants(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#45
  def inheritance_tree(include_mods = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#109
  def inherited_constants; end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#79
  def inherited_meths(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#35
  def is_exception?; end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#66
  def meths(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#10
  def superclass; end

  # source://yard/0.9.36/lib/yard/code_objects/class_object.rb#125
  def superclass=(object); end
end

# source://yard/0.9.36/lib/yard/code_objects/class_variable_object.rb#7
class YARD::CodeObjects::ClassVariableObject < ::YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/class_variable_object.rb#9
  def value; end

  # source://yard/0.9.36/lib/yard/code_objects/class_variable_object.rb#9
  def value=(_arg0); end
end

# source://yard/0.9.36/lib/yard/code_objects/base.rb#6
class YARD::CodeObjects::CodeObjectList < ::Array
  # source://yard/0.9.36/lib/yard/code_objects/base.rb#11
  def initialize(owner = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#19
  def <<(value); end

  # source://yard/0.9.36/lib/yard/code_objects/base.rb#19
  def push(value); end
end

# source://yard/0.9.36/lib/yard/code_objects/constant_object.rb#7
class YARD::CodeObjects::ConstantObject < ::YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/constant_object.rb#10
  def value; end

  # source://yard/0.9.36/lib/yard/code_objects/constant_object.rb#12
  def value=(value); end
end

# source://yard/0.9.36/lib/yard/code_objects/extended_method_object.rb#7
class YARD::CodeObjects::ExtendedMethodObject
  # source://yard/0.9.36/lib/yard/code_objects/extended_method_object.rb#17
  def initialize(obj); end

  # source://yard/0.9.36/lib/yard/code_objects/extended_method_object.rb#22
  def method_missing(sym, *args, &block); end

  # source://yard/0.9.36/lib/yard/code_objects/extended_method_object.rb#11
  def scope; end
end

# source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#7
class YARD::CodeObjects::ExtraFileObject
  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#18
  def initialize(filename, contents = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#64
  def ==(other); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#30
  def attributes; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#9
  def attributes=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#39
  def contents; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#44
  def contents=(contents); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#64
  def eql?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#64
  def equal?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#8
  def filename; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#8
  def filename=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#70
  def hash; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#57
  def inspect; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#12
  def locale; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#52
  def locale=(locale); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#10
  def name; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#10
  def name=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#10
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#35
  def title; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#57
  def to_s; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#62
  def type; end

  private

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#74
  def ensure_parsed; end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#81
  def parse_contents(data); end

  # source://yard/0.9.36/lib/yard/code_objects/extra_file_object.rb#129
  def translate(data); end
end

# source://yard/0.9.36/lib/yard/code_objects/base.rb#40
YARD::CodeObjects::ISEP = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#43
YARD::CodeObjects::ISEPQ = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#64
YARD::CodeObjects::METHODMATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#61
YARD::CodeObjects::METHODNAMEMATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#30
class YARD::CodeObjects::MacroObject < ::YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#149
  def attached?; end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#167
  def expand(call_params = T.unsafe(nil), full_source = T.unsafe(nil), block_source = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#142
  def macro_data; end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#142
  def macro_data=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#146
  def method_object; end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#146
  def method_object=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#152
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#155
  def sep; end

  class << self
    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#120
    def apply(docstring, call_params = T.unsafe(nil), full_source = T.unsafe(nil), block_source = T.unsafe(nil), _method_object = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#136
    def apply_macro(macro, docstring, call_params = T.unsafe(nil), full_source = T.unsafe(nil), block_source = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#40
    def create(macro_name, data, method_object = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#71
    def create_docstring(macro_name, data, method_object = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#93
    def expand(macro_data, call_params = T.unsafe(nil), full_source = T.unsafe(nil), block_source = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#51
    def find(macro_name); end

    # source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#71
    def find_or_create(macro_name, data, method_object = T.unsafe(nil)); end
  end
end

# source://yard/0.9.36/lib/yard/code_objects/macro_object.rb#31
YARD::CodeObjects::MacroObject::MACRO_MATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/method_object.rb#7
class YARD::CodeObjects::MethodObject < ::YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#37
  def initialize(namespace, name, scope = T.unsafe(nil), &block); end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#149
  def aliases; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#93
  def attr_info; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#78
  def constructor?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#18
  def explicit; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#18
  def explicit=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#126
  def is_alias?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#114
  def is_attribute?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#134
  def is_explicit?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#85
  def module_function?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#175
  def name(prefix = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#141
  def overridden_method; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#25
  def parameters; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#25
  def parameters=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#161
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#107
  def reader?; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#11
  def scope; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#58
  def scope=(v); end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#182
  def sep; end

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#100
  def writer?; end

  protected

  # source://yard/0.9.36/lib/yard/code_objects/method_object.rb#192
  def copyable_attributes; end
end

# source://yard/0.9.36/lib/yard/code_objects/module_object.rb#6
class YARD::CodeObjects::ModuleObject < ::YARD::CodeObjects::NamespaceObject
  # source://yard/0.9.36/lib/yard/code_objects/module_object.rb#12
  def inheritance_tree(include_mods = T.unsafe(nil)); end
end

# source://yard/0.9.36/lib/yard/code_objects/base.rb#58
YARD::CodeObjects::NAMESPACEMATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#34
YARD::CodeObjects::NSEP = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/base.rb#37
YARD::CodeObjects::NSEPQ = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#8
module YARD::CodeObjects::NamespaceMapper
  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#55
  def clear_separators; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#68
  def default_separator(value = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#27
  def register_separator(sep, *valid_types); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#80
  def separators; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#97
  def separators_for_type(type); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#85
  def separators_match; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#91
  def types_for_separator(sep); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#43
  def unregister_separator_by_type(type); end

  class << self
    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#137
    def default_separator; end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#137
    def default_separator=(_arg0); end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#125
    def invalidate; end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#114
    def map; end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#131
    def map_match; end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#107
    def on_invalidate(&block); end

    # source://yard/0.9.36/lib/yard/code_objects/namespace_mapper.rb#119
    def rev_map; end
  end
end

# source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#9
class YARD::CodeObjects::NamespaceObject < ::YARD::CodeObjects::Base
  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#56
  def initialize(namespace, name, *args, &block); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#44
  def aliases; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#39
  def attributes; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#86
  def child(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#16
  def children; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#69
  def class_attributes; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#48
  def class_mixins; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#164
  def constants(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#186
  def cvars; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#12
  def groups; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#12
  def groups=(_arg0); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#172
  def included_constants; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#144
  def included_meths(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#76
  def instance_attributes; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#52
  def instance_mixins; end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#113
  def meths(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/namespace_object.rb#194
  def mixins(*scopes); end
end

# source://yard/0.9.36/lib/yard/code_objects/proxy.rb#8
YARD::CodeObjects::PROXY_MATCH = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/code_objects/proxy.rb#24
class YARD::CodeObjects::Proxy
  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#34
  def initialize(namespace, name, type = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#118
  def <=>(other); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#127
  def ==(other); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#113
  def ===(other); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#142
  def class; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#127
  def equal?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#137
  def hash; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#91
  def inspect; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#161
  def instance_of?(klass); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#108
  def is_a?(klass); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#166
  def kind_of?(klass); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#178
  def method_missing(meth, *args, &block); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#85
  def name(prefix = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#27
  def namespace; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#27
  def parent; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#100
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#171
  def respond_to?(meth, include_private = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#200
  def root?; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#100
  def title; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#100
  def to_s; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#100
  def to_str; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#151
  def type; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#158
  def type=(type); end

  private

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#228
  def proxy_path; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#205
  def to_ary; end

  # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#212
  def to_obj; end

  class << self
    # source://yard/0.9.36/lib/yard/code_objects/proxy.rb#25
    def ===(other); end
  end
end

# source://yard/0.9.36/lib/yard/code_objects/proxy.rb#5
class YARD::CodeObjects::ProxyMethodError < ::NoMethodError; end

# source://yard/0.9.36/lib/yard/code_objects/root_object.rb#6
class YARD::CodeObjects::RootObject < ::YARD::CodeObjects::ModuleObject
  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#12
  def equal?(other); end

  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#16
  def hash; end

  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#8
  def inspect; end

  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#7
  def path; end

  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#9
  def root?; end

  # source://yard/0.9.36/lib/yard/code_objects/root_object.rb#10
  def title; end
end

# source://yard/0.9.36/lib/yard/handlers/base.rb#149
class YARD::Handlers::Base
  include ::YARD::CodeObjects
  include ::YARD::Parser

  # source://yard/0.9.36/lib/yard/handlers/base.rb#276
  def initialize(source_parser, stmt); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#355
  def abort!; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#581
  def call_params; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#590
  def caller_method; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#561
  def ensure_loaded!(object, max_retries = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#348
  def extra_state; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#347
  def globals; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#341
  def namespace; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#342
  def namespace=(v); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#339
  def owner; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#340
  def owner=(v); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#304
  def parse_block(*_arg0); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#310
  def parser; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#297
  def process; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#370
  def push_state(opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#407
  def register(*objects); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#450
  def register_docstring(object, docstring = T.unsafe(nil), stmt = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#537
  def register_dynamic(object); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#429
  def register_ensure_loaded(object); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#441
  def register_file_info(object, file = T.unsafe(nil), line = T.unsafe(nil), comments = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#473
  def register_group(object, group = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#523
  def register_module_function(object); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#499
  def register_source(object, source = T.unsafe(nil), type = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#487
  def register_transitive_tags(object); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#511
  def register_visibility(object, visibility = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#345
  def scope; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#346
  def scope=(v); end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#315
  def statement; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#343
  def visibility; end

  # source://yard/0.9.36/lib/yard/handlers/base.rb#344
  def visibility=(v); end

  class << self
    # source://yard/0.9.36/lib/yard/handlers/base.rb#159
    def clear_subclasses; end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#211
    def handlers; end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#192
    def handles(*matches); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#205
    def handles?(statement); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#235
    def in_file(filename); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#169
    def inherited(subclass); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#242
    def matches_file?(filename); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#219
    def namespace_only; end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#225
    def namespace_only?; end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#269
    def process(&block); end

    # source://yard/0.9.36/lib/yard/handlers/base.rb#165
    def subclasses; end
  end
end

# source://yard/0.9.36/lib/yard/handlers/c/base.rb#5
class YARD::Handlers::C::Base < ::YARD::Handlers::Base
  include ::YARD::Parser::C
  include ::YARD::Handlers::Common::MethodHandler
  include ::YARD::Handlers::C::HandlerMethods
end

# source://yard/0.9.36/lib/yard/handlers/c/handler_methods.rb#5
module YARD::Handlers::C::HandlerMethods
  include ::YARD::Parser::C
  include ::YARD::CodeObjects
  include ::YARD::Handlers::Common::MethodHandler
end

# source://yard/0.9.36/lib/yard/handlers/common/method_handler.rb#6
module YARD::Handlers::Common::MethodHandler
  # source://yard/0.9.36/lib/yard/handlers/common/method_handler.rb#8
  def add_predicate_return_tag(obj); end
end

# source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#65
class YARD::Handlers::Ruby::Base < ::YARD::Handlers::Base
  include ::YARD::Parser::Ruby
  extend ::YARD::Parser::Ruby

  # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#144
  def call_params; end

  # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#155
  def caller_method; end

  # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#135
  def parse_block(inner_node, opts = T.unsafe(nil)); end

  class << self
    # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#113
    def handles?(node); end

    # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#105
    def meta_type(type); end

    # source://yard/0.9.36/lib/yard/handlers/ruby/base.rb#86
    def method_call(name = T.unsafe(nil)); end
  end
end

# source://yard/0.9.36/lib/yard/handlers/ruby/dsl_handler.rb#6
class YARD::Handlers::Ruby::DSLHandler < ::YARD::Handlers::Ruby::Base
  include ::YARD::Handlers::Ruby::DSLHandlerMethods
end

# source://yard/0.9.36/lib/yard/handlers/ruby/dsl_handler_methods.rb#5
module YARD::Handlers::Ruby::DSLHandlerMethods
  include ::YARD::CodeObjects
  include ::YARD::Parser
end

# source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#9
class YARD::Handlers::Ruby::Legacy::Base < ::YARD::Handlers::Base
  include ::YARD::Parser::Ruby::Legacy::RubyToken

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#44
  def call_params; end

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#53
  def caller_method; end

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#35
  def parse_block(opts = T.unsafe(nil)); end

  private

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#68
  def extract_method_details; end

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#112
  def tokval(token, *accepted_types); end

  # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#178
  def tokval_list(tokenlist, *accepted_types); end

  class << self
    # source://yard/0.9.36/lib/yard/handlers/ruby/legacy/base.rb#15
    def handles?(stmt); end
  end
end

# source://yard/0.9.36/lib/yard/handlers/ruby/legacy/dsl_handler.rb#7
class YARD::Handlers::Ruby::Legacy::DSLHandler < ::YARD::Handlers::Ruby::Legacy::Base
  include ::YARD::Handlers::Ruby::DSLHandlerMethods
end

# source://yard/0.9.36/lib/yard/handlers/ruby/method_handler.rb#3
class YARD::Handlers::Ruby::MethodHandler < ::YARD::Handlers::Ruby::Base
  include ::YARD::Handlers::Common::MethodHandler
end

# source://yard/0.9.36/lib/yard/handlers/ruby/struct_handler_methods.rb#7
module YARD::Handlers::Ruby::StructHandlerMethods
  include ::YARD::CodeObjects
end

# source://yard/0.9.36/lib/yard/autoload.rb#161
module YARD::Parser; end

# source://yard/0.9.36/lib/yard/parser/base.rb#16
class YARD::Parser::Base
  # source://yard/0.9.36/lib/yard/parser/base.rb#26
  def initialize(source, filename); end

  # source://yard/0.9.36/lib/yard/parser/base.rb#52
  def enumerator; end

  # source://yard/0.9.36/lib/yard/parser/base.rb#33
  def parse; end

  # source://yard/0.9.36/lib/yard/parser/base.rb#40
  def tokenize; end

  class << self
    # source://yard/0.9.36/lib/yard/parser/base.rb#18
    def parse(source, filename = T.unsafe(nil)); end
  end
end

# source://yard/0.9.36/lib/yard/autoload.rb#162
module YARD::Parser::C; end

# source://yard/0.9.36/lib/yard/parser/c/statement.rb#41
class YARD::Parser::C::BodyStatement < ::YARD::Parser::C::Statement
  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#42
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#42
  def comments=(_arg0); end
end

# source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#5
class YARD::Parser::C::CParser < ::YARD::Parser::Base
  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#6
  def initialize(source, file = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#24
  def enumerator; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#19
  def parse; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#28
  def tokenize; end

  private

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#213
  def advance(num = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#216
  def advance_loop; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#195
  def attach_comment(statement); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#214
  def back(num = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#225
  def char(num = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#96
  def consume_body_statements; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#136
  def consume_comment(add_comment = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#59
  def consume_directive; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#47
  def consume_quote(type = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#73
  def consume_toplevel_statement; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#169
  def consume_until(end_char, bracket_level = T.unsafe(nil), brace_level = T.unsafe(nil), add_comment = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#132
  def consume_whitespace; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#227
  def nextchar(num = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#220
  def nextline; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#34
  def parse_toplevel; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#226
  def prevchar(num = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#118
  def strip_non_statement_data; end

  # source://yard/0.9.36/lib/yard/parser/c/c_parser.rb#229
  def struct; end
end

# source://yard/0.9.36/lib/yard/parser/c/statement.rb#51
class YARD::Parser::C::Comment < ::YARD::Parser::C::Statement
  include ::YARD::Parser::C::CommentParser

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#58
  def initialize(source, file = T.unsafe(nil), line = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#62
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#55
  def overrides; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#55
  def overrides=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#56
  def statement; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#56
  def statement=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#54
  def type; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#54
  def type=(_arg0); end
end

# source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#5
module YARD::Parser::C::CommentParser
  protected

  # source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#8
  def parse_comments(comments); end

  private

  # source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#42
  def parse_callseq(comments); end

  # source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#30
  def parse_overrides(comments); end

  # source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#87
  def parse_types(types); end

  # source://yard/0.9.36/lib/yard/parser/c/comment_parser.rb#126
  def remove_private_comments(comment); end
end

# source://yard/0.9.36/lib/yard/parser/c/statement.rb#5
class YARD::Parser::C::Statement
  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#16
  def initialize(source, file = T.unsafe(nil), line = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#14
  def comments_hash_flag; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#14
  def comments_hash_flag=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#26
  def comments_range; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#8
  def file; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#8
  def file=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#30
  def first_line; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#12
  def group; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#12
  def group=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#7
  def line; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#7
  def line=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#22
  def line_range; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#36
  def show; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#30
  def signature; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#6
  def source; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#6
  def source=(_arg0); end
end

# source://yard/0.9.36/lib/yard/parser/c/statement.rb#45
class YARD::Parser::C::ToplevelStatement < ::YARD::Parser::C::Statement
  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#46
  def block; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#46
  def block=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#48
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#48
  def comments=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#47
  def declaration; end

  # source://yard/0.9.36/lib/yard/parser/c/statement.rb#47
  def declaration=(_arg0); end
end

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#21
class YARD::Parser::OrderedParser
  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#33
  def initialize(global_state, files); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#23
  def files; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#23
  def files=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#42
  def parse; end
end

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#13
class YARD::Parser::ParserSyntaxError < ::YARD::Parser::UndocumentableError; end

# source://yard/0.9.36/lib/yard/autoload.rb#171
module YARD::Parser::Ruby
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#25
  def s(*args); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#41
class YARD::Parser::Ruby::AstNode < ::Array
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#153
  def initialize(type, arr, opts = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#167
  def ==(other); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#261
  def block?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#241
  def call?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#199
  def children; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#42
  def comments_hash_flag; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def comments_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#251
  def condition?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#246
  def def?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def docstring; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def docstring=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#42
  def docstring_hash_flag; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#42
  def docstring_hash_flag=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def docstring_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def docstring_range=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#76
  def file; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#49
  def file=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#278
  def first_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#82
  def full_source; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#49
  def full_source=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#47
  def group; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#47
  def group=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#268
  def has_line?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#323
  def inspect; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#193
  def jump(*node_types); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#236
  def kw?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#273
  def line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#70
  def line_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#49
  def line_range=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#231
  def literal?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#256
  def loop?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#59
  def parent; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#59
  def parent=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#290
  def pretty_print(q); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#226
  def ref?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#285
  def show; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#89
  def source; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def source=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#63
  def source_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#49
  def source_range=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#43
  def to_s; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#220
  def token?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#208
  def traverse; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#56
  def type; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#56
  def type=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#331
  def unfreeze; end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#341
  def reset_line_info; end

  class << self
    # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#111
    def node_class_for(type); end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#96
YARD::Parser::Ruby::AstNode::KEYWORDS = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#530
class YARD::Parser::Ruby::ClassNode < ::YARD::Parser::Ruby::KeywordNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#533
  def block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#531
  def class_name; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#532
  def superclass; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#548
class YARD::Parser::Ruby::CommentNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#549
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#549
  def docstring; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#550
  def docstring=(value); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#554
  def first_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#553
  def source; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#515
class YARD::Parser::Ruby::ConditionalNode < ::YARD::Parser::Ruby::KeywordNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#517
  def condition; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#516
  def condition?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#520
  def else_block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#518
  def then_block; end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#527
  def cmod?; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#376
class YARD::Parser::Ruby::KeywordNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#377
  def kw?; end
end

# source://yard/0.9.36/lib/yard/autoload.rb#172
module YARD::Parser::Ruby::Legacy; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#314
class YARD::Parser::Ruby::Legacy::RubyLex
  include ::YARD::Parser::Ruby::Legacy::RubyToken
  include ::IRB

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#437
  def initialize(content); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#472
  def char_no; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#430
  def continue; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#463
  def exception_on_syntax_error; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#463
  def exception_on_syntax_error=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#476
  def get_read; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#480
  def getc; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#484
  def getc_of_rests; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#488
  def gets; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1257
  def identify_comment; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#945
  def identify_gvar; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1062
  def identify_here_document; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#980
  def identify_identifier; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1130
  def identify_number(start); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1111
  def identify_quotation(initial_char); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1192
  def identify_string(ltype, quoted = T.unsafe(nil), opener = T.unsafe(nil), initial_char = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#465
  def indent; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#510
  def lex; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#586
  def lex_init; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#759
  def lex_int2; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#431
  def lex_state; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#468
  def line_no; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#506
  def peek(i = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#502
  def peek_equal?(str); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#462
  def read_auto_clean_up; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#462
  def read_auto_clean_up=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1280
  def read_escape; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#1242
  def skip_inner_expression; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#461
  def skip_space; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#461
  def skip_space=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#526
  def token; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#498
  def ungetc(c = T.unsafe(nil)); end

  class << self
    # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#433
    def debug?; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#552
YARD::Parser::Ruby::Legacy::RubyLex::ACCEPTS_COLON = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#343
class YARD::Parser::Ruby::Legacy::RubyLex::BufferedReader
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#346
  def initialize(content); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#365
  def column; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#419
  def divert_read_from(reserve); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#400
  def get_read; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#369
  def getc; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#388
  def getc_already_read; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#344
  def line_num; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#406
  def peek(at); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#415
  def peek_equal(str); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#392
  def ungetc(_ch); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#553
YARD::Parser::Ruby::Legacy::RubyLex::DEINDENT_CLAUSE = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#580
YARD::Parser::Ruby::Legacy::RubyLex::DLtype2Token = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#548
YARD::Parser::Ruby::Legacy::RubyLex::ENINDENT_CLAUSE = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#571
YARD::Parser::Ruby::Legacy::RubyLex::Ltype2Token = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#555
YARD::Parser::Ruby::Legacy::RubyLex::PERCENT_LTYPE = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#564
YARD::Parser::Ruby::Legacy::RubyLex::PERCENT_PAREN = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#8
class YARD::Parser::Ruby::Legacy::RubyParser < ::YARD::Parser::Base
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#9
  def initialize(source, _filename); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#26
  def encoding_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#22
  def enumerator; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#13
  def parse; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#27
  def shebang_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_parser.rb#18
  def tokenize; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#6
module YARD::Parser::Ruby::Legacy::RubyToken
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#125
  def Token(token, value = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#119
  def set_token_position(line, char); end

  class << self
    # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#275
    def def_token(token_n, super_token = T.unsafe(nil), reading = T.unsafe(nil), *opts); end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#10
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_ARG = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#7
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_BEG = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#13
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_CLASS = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#12
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_DOT = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#9
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_END = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#11
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_FNAME = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#8
YARD::Parser::Ruby::Legacy::RubyToken::EXPR_MID = T.let(T.unsafe(nil), Symbol)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#308
YARD::Parser::Ruby::Legacy::RubyToken::NEWLINE_TOKEN = T.let(T.unsafe(nil), YARD::Parser::Ruby::Legacy::RubyToken::TkNL)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::OPASGN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkALIAS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkAMPER < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkAND < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkANDOP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkAREF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkASET < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkASSIGN < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkASSOC < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkAT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkUnknownChar; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBACKQUOTE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBACKSLASH < ::YARD::Parser::Ruby::Legacy::RubyToken::TkUnknownChar; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBACK_REF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBEGIN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBITAND < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBITNOT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBITOR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBITXOR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkBREAK < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#54
class YARD::Parser::Ruby::Legacy::RubyToken::TkBlockContents < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#55
  def text; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCASE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCLASS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCMP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCOLON < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCOLON2 < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCOLON3 < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCOMMA < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCOMMENT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkCONSTANT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDEF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDEFINED < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDIV < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDO < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDOLLAR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkUnknownChar; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDOT < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDOT2 < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDOT3 < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDREGEXP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkNode; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDSTRING < ::YARD::Parser::Ruby::Legacy::RubyToken::TkNode; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkDXSTRING < ::YARD::Parser::Ruby::Legacy::RubyToken::TkNode; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkELSE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkELSIF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkEND < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkEND_OF_SCRIPT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkWhitespace; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkENSURE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkEQ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkEQQ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#115
class YARD::Parser::Ruby::Legacy::RubyToken::TkError < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkFALSE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkFID < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkFLOAT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkFOR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkGEQ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkGT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkGVAR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkIDENTIFIER < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkIF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkIF_MOD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkIN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkINTEGER < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkIVAR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#72
class YARD::Parser::Ruby::Legacy::RubyToken::TkId < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#73
  def initialize(line_no, char_no, name); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#77
  def name; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#81
class YARD::Parser::Ruby::Legacy::RubyToken::TkKW < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLABEL < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLBRACE < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLBRACK < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLEQ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLPAREN < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLSHFT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkLT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkMATCH < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkMINUS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkMOD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkMODULE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkMULT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNEQ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNEXT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNIL < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNL < ::YARD::Parser::Ruby::Legacy::RubyToken::TkWhitespace; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNMATCH < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNOT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNOTOP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkNTH_REF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#63
class YARD::Parser::Ruby::Legacy::RubyToken::TkNode < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#64
  def node; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#98
class YARD::Parser::Ruby::Legacy::RubyToken::TkOPASGN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#99
  def initialize(line_no, char_no, op); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#104
  def op; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkOR < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkOROP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#92
class YARD::Parser::Ruby::Legacy::RubyToken::TkOp < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#93
  def name; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkPLUS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkPOW < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkQUESTION < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRBRACE < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRBRACK < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkREDO < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkREGEXP < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRESCUE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRETRY < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRETURN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRPAREN < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkRSHFT < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#271
YARD::Parser::Ruby::Legacy::RubyToken::TkReading2Token = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSELF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSEMICOLON < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSPACE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkWhitespace; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSTAR < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSTRING < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSUPER < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSYMBEG < ::YARD::Parser::Ruby::Legacy::RubyToken::TkId; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkSYMBOL < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#59
class YARD::Parser::Ruby::Legacy::RubyToken::TkStatementEnd < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#60
  def text; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#272
YARD::Parser::Ruby::Legacy::RubyToken::TkSymbol2Token = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkTHEN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkTRUE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUMINUS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUNDEF < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUNLESS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUNLESS_MOD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUNTIL < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUNTIL_MOD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkUPLUS < ::YARD::Parser::Ruby::Legacy::RubyToken::TkOp
  class << self
    def op_name; end
  end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#107
class YARD::Parser::Ruby::Legacy::RubyToken::TkUnknownChar < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#108
  def initialize(line_no, char_no, _id); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#112
  def name; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#85
class YARD::Parser::Ruby::Legacy::RubyToken::TkVal < ::YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#86
  def initialize(line_no, char_no, value = T.unsafe(nil)); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkWHEN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkWHILE < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkWHILE_MOD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#68
class YARD::Parser::Ruby::Legacy::RubyToken::TkWhitespace < ::YARD::Parser::Ruby::Legacy::RubyToken::Token; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkXSTRING < ::YARD::Parser::Ruby::Legacy::RubyToken::TkVal; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TkYIELD < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::Tk__FILE__ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::Tk__LINE__ < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TklBEGIN < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#281
class YARD::Parser::Ruby::Legacy::RubyToken::TklEND < ::YARD::Parser::Ruby::Legacy::RubyToken::TkKW; end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#16
class YARD::Parser::Ruby::Legacy::RubyToken::Token
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#37
  def initialize(line_no, char_no); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#23
  def char_no; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#29
  def lex_state; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#29
  def lex_state=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#19
  def line_no; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#47
  def set_text(text); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#26
  def text; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#32
YARD::Parser::Ruby::Legacy::RubyToken::Token::NO_TEXT = T.let(T.unsafe(nil), String)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/ruby_lex.rb#147
YARD::Parser::Ruby::Legacy::RubyToken::TokenDefinitions = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#4
class YARD::Parser::Ruby::Legacy::Statement
  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#14
  def initialize(tokens, block = T.unsafe(nil), comments = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#5
  def block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#5
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#12
  def comments_hash_flag; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#12
  def comments_hash_flag=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#6
  def comments_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#6
  def comments_range=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#21
  def first_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#10
  def group; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#10
  def group=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#34
  def inspect; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#46
  def line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#52
  def line_range; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#41
  def show; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#21
  def signature; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#27
  def source(include_block = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#27
  def to_s(include_block = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#5
  def tokens; end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement.rb#58
  def clean_tokens(tokens); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#4
class YARD::Parser::Ruby::Legacy::StatementList < ::Array
  include ::YARD::Parser::Ruby::Legacy::RubyToken

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#17
  def initialize(content); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#7
  def encoding_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#7
  def encoding_line=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#7
  def shebang_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#7
  def shebang_line=(_arg0); end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#362
  def balances?(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#45
  def next_statement; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#34
  def parse_statements; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#388
  def peek_no_space; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#194
  def process_block_token(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#293
  def process_complex_block_opener(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#213
  def process_initial_comment(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#268
  def process_simple_block_opener(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#305
  def process_statement_end(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#130
  def process_token(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#380
  def push_token(tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#111
  def sanitize_block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#96
  def sanitize_statement_end; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/statement_list.rb#11
YARD::Parser::Ruby::Legacy::StatementList::OPEN_BLOCK_TOKENS = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#4
class YARD::Parser::Ruby::Legacy::TokenList < ::Array
  include ::YARD::Parser::Ruby::Legacy::RubyToken

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#7
  def initialize(content = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#21
  def <<(*tokens); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#21
  def push(*tokens); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#37
  def squeeze(type = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#11
  def to_s(full_statement = T.unsafe(nil), show_block = T.unsafe(nil)); end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#53
  def convert_token(lex, tk); end

  # source://yard/0.9.36/lib/yard/parser/ruby/legacy/token_list.rb#44
  def parse_content(content); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#372
class YARD::Parser::Ruby::LiteralNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#373
  def literal?; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#541
class YARD::Parser::Ruby::LoopNode < ::YARD::Parser::Ruby::KeywordNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#544
  def block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#543
  def condition; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#542
  def loop?; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#438
class YARD::Parser::Ruby::MethodCallNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#464
  def block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#462
  def block_param; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#439
  def call?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#442
  def method_name(name_only = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#440
  def namespace; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#453
  def parameters(include_block_param = T.unsafe(nil)); end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#474
  def call_has_paren?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#470
  def index_adjust; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#479
class YARD::Parser::Ruby::MethodDefinitionNode < ::YARD::Parser::Ruby::AstNode
  def block(n = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#481
  def def?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#480
  def kw?; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#484
  def method_name(name_only = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#482
  def namespace; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#489
  def parameters(include_block_param = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#495
  def signature; end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#510
  def index_adjust; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#536
class YARD::Parser::Ruby::ModuleNode < ::YARD::Parser::Ruby::KeywordNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#538
  def block; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#537
  def module_name; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#380
class YARD::Parser::Ruby::ParameterNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#430
  def args_forward; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#426
  def block_param; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#414
  def double_splat_param; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#396
  def named_params; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#406
  def splat_param; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#410
  def unnamed_end_params; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#385
  def unnamed_optional_params; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#381
  def unnamed_required_params; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#360
class YARD::Parser::Ruby::ReferenceNode < ::YARD::Parser::Ruby::AstNode
  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#367
  def namespace; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#363
  def path; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ast_node.rb#361
  def ref?; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#27
class YARD::Parser::Ruby::RipperParser < ::Ripper
  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#32
  def initialize(source, filename, *args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def ast; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def charno; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def comments; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#29
  def encoding_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#64
  def enumerator; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def file; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#68
  def file_encoding; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#29
  def frozen_string_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_BEGIN(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_CHAR(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_END(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on___end__(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_alias(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_alias_error(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_arg_ambiguous(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_arg_paren(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_args_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_args_add_block(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_args_add_star(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_args_forward(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_args_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_aryptn(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_assign(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_assign_error(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_assoc_splat(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_backref(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_backtick(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_begin(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_binary(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_block_var(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_blockarg(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_brace_block(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_break(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_call(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_case(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_class(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_class_name_error(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_comma(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_command(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_command_call(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_const(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_const_path_field(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_const_ref(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_cvar(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_def(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_defined(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_defs(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_do_block(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_dot2(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_dot3(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_else(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_elsif(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_embexpr_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_embexpr_end(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_embvar(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_ensure(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_excessed_comma(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_fcall(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_field(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_float(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_fndptn(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_for(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_gvar(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_heredoc_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_heredoc_dedent(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_heredoc_end(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_hshptn(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_ident(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_if(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#449
  def on_if_mod(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_ifop(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#222
  def on_ignored_nl(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_ignored_sp(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_imaginary(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_in(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_int(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_ivar(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#209
  def on_kw(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_kwrest_param(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_label_end(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_lbrace(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_lparen(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_magic_comment(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_massign(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_method_add_arg(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_method_add_block(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_mlhs_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_mlhs_add_post(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_mlhs_add_star(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_mlhs_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_mlhs_paren(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_module(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_mrhs_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_mrhs_add_star(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_mrhs_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_mrhs_new_from_args(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_next(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#222
  def on_nl(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_nokw_param(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#209
  def on_op(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_opassign(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_operator_ambiguous(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_param_error(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_paren(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_period(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#474
  def on_qsymbols_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_qsymbols_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#462
  def on_qsymbols_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#474
  def on_qwords_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_qwords_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#462
  def on_qwords_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_rational(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_rbrace(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_redo(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_regexp_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_regexp_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_regexp_end(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_regexp_literal(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_regexp_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_rescue_mod(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_rest_param(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_retry(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_return(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_return0(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_rparen(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_sclass(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_semicolon(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_stmts_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_stmts_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_string_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_string_concat(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_string_dvar(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_string_embexpr(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_super(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_symbeg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_symbol(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_symbol_literal(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#474
  def on_symbols_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_symbols_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#462
  def on_symbols_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_tlambda(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_tlambeg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_top_const_field(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_tstring_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_tstring_content(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_tstring_end(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_undef(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_unless(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#449
  def on_unless_mod(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_until(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#449
  def on_until_mod(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_var_alias(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_var_field(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_var_ref(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#177
  def on_vcall(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_when(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_while(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#449
  def on_while_mod(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_word_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_word_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#474
  def on_words_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#199
  def on_words_beg(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#462
  def on_words_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#188
  def on_words_sep(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#162
  def on_xstring_add(list, item); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_xstring_literal(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#155
  def on_xstring_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_yield(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_yield0(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#170
  def on_zsuper(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#55
  def parse; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def root; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#29
  def shebang_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#28
  def tokens; end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#667
  def add_comment(line, node = T.unsafe(nil), before_node = T.unsafe(nil), into = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#271
  def add_token(token, data); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#611
  def comment_starts_line?(charno); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#606
  def compile_error(msg); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#693
  def freeze_tree(node = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#620
  def insert_comments; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#377
  def on_aref(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#385
  def on_aref_field(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#391
  def on_array(other); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#352
  def on_assoc_new(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#364
  def on_assoclist_from_args(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#360
  def on_bare_assoc_hash(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#347
  def on_body_stmt(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#347
  def on_bodystmt(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#542
  def on_comment(comment); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#441
  def on_const_path_ref(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#419
  def on_dyna_symbol(sym); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#592
  def on_embdoc(text); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#586
  def on_embdoc_beg(text); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#597
  def on_embdoc_end(text); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#356
  def on_hash(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#534
  def on_label(data); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#497
  def on_lambda(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#409
  def on_lbracket(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#515
  def on_params(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#606
  def on_parse_error(msg); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#343
  def on_program(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#414
  def on_rbracket(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#506
  def on_rescue(exc, *args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#232
  def on_sp(tok); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#501
  def on_string_content(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#484
  def on_string_literal(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#429
  def on_top_const_ref(*args); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#368
  def on_unary(op, val); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#511
  def on_void_stmt; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#237
  def visit_event(node); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#251
  def visit_event_arr(node); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#259
  def visit_ns_token(token, data, ast_token = T.unsafe(nil)); end
end

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#133
YARD::Parser::Ruby::RipperParser::AST_TOKENS = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#136
YARD::Parser::Ruby::RipperParser::COMMENT_SKIP_NODE_TYPES = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#78
YARD::Parser::Ruby::RipperParser::MAPPINGS = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#131
YARD::Parser::Ruby::RipperParser::REV_MAPPINGS = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#12
class YARD::Parser::Ruby::RubyParser < ::YARD::Parser::Base
  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#13
  def initialize(source, filename); end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#21
  def encoding_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#19
  def enumerator; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#22
  def frozen_string_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#17
  def parse; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#20
  def shebang_line; end

  # source://yard/0.9.36/lib/yard/parser/ruby/ruby_parser.rb#18
  def tokenize; end
end

# source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#8
class YARD::Parser::Ruby::TokenResolver
  include ::Enumerable
  include ::YARD::CodeObjects::NamespaceMapper

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#16
  def initialize(source, namespace = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#46
  def each; end

  protected

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#94
  def last_sep; end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#95
  def last_sep=(v); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#94
  def next_object; end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#95
  def next_object=(v); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#94
  def object; end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#95
  def object=(v); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#94
  def skip_group; end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#95
  def skip_group=(v); end

  private

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#112
  def lookup(toktype, name); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#134
  def object_resolved_types(obj = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#106
  def pop_state; end

  # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#102
  def push_state; end

  class << self
    # source://yard/0.9.36/lib/yard/parser/ruby/token_resolver.rb#92
    def state_attr(*attrs); end
  end
end

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#64
class YARD::Parser::SourceParser
  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#406
  def initialize(parser_type = T.unsafe(nil), globals1 = T.unsafe(nil), globals2 = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#399
  def contents; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#386
  def file; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#386
  def file=(_arg0); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#395
  def globals; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#418
  def parse(content = T.unsafe(nil)); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#390
  def parser_type; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#462
  def tokenize(content); end

  private

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#471
  def convert_encoding(content); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#515
  def parser_class; end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#500
  def parser_type=(value); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#508
  def parser_type_for_filename(filename); end

  # source://yard/0.9.36/lib/yard/parser/source_parser.rb#490
  def post_process; end

  class << self
    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#324
    def after_parse_file(&block); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#352
    def after_parse_file_callbacks; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#258
    def after_parse_list(&block); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#338
    def after_parse_list_callbacks; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#295
    def before_parse_file(&block); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#345
    def before_parse_file_callbacks; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#234
    def before_parse_list(&block); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#331
    def before_parse_list_callbacks; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#100
    def parse(paths = T.unsafe(nil), excluded = T.unsafe(nil), level = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#123
    def parse_string(content, ptype = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#86
    def parser_type; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#88
    def parser_type=(value); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#163
    def parser_type_extensions; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#164
    def parser_type_extensions=(value); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#171
    def parser_type_for_extension(extension); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#157
    def parser_types; end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#158
    def parser_types=(value); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#146
    def register_parser_type(type, parser_klass, extensions = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#132
    def tokenize(content, ptype = T.unsafe(nil)); end

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#184
    def validated_parser_type(type); end

    private

    # source://yard/0.9.36/lib/yard/parser/source_parser.rb#364
    def parse_in_order(*files); end
  end
end

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#71
YARD::Parser::SourceParser::DEFAULT_PATH_GLOB = T.let(T.unsafe(nil), Array)

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#75
YARD::Parser::SourceParser::ENCODING_BYTE_ORDER_MARKS = T.let(T.unsafe(nil), Hash)

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#66
YARD::Parser::SourceParser::ENCODING_LINE = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#67
YARD::Parser::SourceParser::FROZEN_STRING_LINE = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#65
YARD::Parser::SourceParser::SHEBANG_LINE = T.let(T.unsafe(nil), Regexp)

# source://yard/0.9.36/lib/yard/parser/source_parser.rb#10
class YARD::Parser::UndocumentableError < ::RuntimeError; end

# source://yard/0.9.36/lib/yard/registry_resolver.rb#9
class YARD::RegistryResolver
  include ::YARD::CodeObjects::NamespaceMapper
end

# source://yard/0.9.36/lib/yard/tags/types_explainer.rb#96
class YARD::Tags::TypesExplainer::Parser
  include ::YARD::CodeObjects
end
