[
  {
    "fully_qualified_name": "Primer::Alpha::ActionBar",
    "description": "Add a general description of component here\nAdd additional usage considerations or best practices that may aid the user to use the component correctly.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "ActionBar",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ActionBar",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_bar.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_bar/default/",
    "parameters": [
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "overflow_menu",
        "type": "Boolean",
        "default": "`true`",
        "description": "Whether to render the overflow menu."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "items",
        "description": null,
        "parameters": [

        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/action_bar/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_bar/inline",
        "name": "inline",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_bar/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_bar/small",
        "name": "small",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_bar/medium",
        "name": "medium",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_bar/large",
        "name": "large",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::ActionBar::Item",
        "description": "ActionBar::Item is an internal component that wraps the items in a div with the `ActionBar-item` class.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionBar::Item",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionBarItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_bar/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_bar/item/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::ActionBar::Divider",
        "description": "ActionBar::Item is an internal component that wraps the items in a div with the `ActionBar-item` class.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionBar::Divider",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionBarDivider",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_bar/divider.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_bar/divider/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::ActionList",
    "description": "An ActionList is a styled list of links. It acts as the base component for many\nother menu-type components, including `ActionMenu` and `SelectPanel`, as well as\nthe navigational component `NavList`.\n\nEach item in an action list can be augmented by specifying corresponding leading\nand/or trailing visuals.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "ActionList",
    "status": "alpha",
    "a11y_reviewed": true,
    "short_name": "ActionList",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_list.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_list/default/",
    "parameters": [
      {
        "name": "id",
        "type": "String",
        "default": "`self.class.generate_id`",
        "description": "HTML ID value."
      },
      {
        "name": "role",
        "type": "Boolean",
        "default": "`nil`",
        "description": "ARIA role describing the function of the list. listbox and menu are a common values."
      },
      {
        "name": "item_classes",
        "type": "String",
        "default": "`nil`",
        "description": "Additional CSS classes to attach to items."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:full`",
        "description": "One of `:full` or `:inset`. `inset` children are offset (vertically and horizontally) from list edges. `full` (default) children are flush (vertically and horizontally) with list edges."
      },
      {
        "name": "show_dividers",
        "type": "Boolean",
        "default": "`false`",
        "description": "Display a divider above each item in the list when it does not follow a header or divider."
      },
      {
        "name": "select_variant",
        "type": "Symbol",
        "default": "`:none`",
        "description": "How items may be selected in the list. One of `:multiple`, `:multiple_checkbox`, `:none`, or `:single`."
      },
      {
        "name": "form_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "Allows an `ActionList` to act as a select list in multi- and single-select modes. Pass the `builder:` and `name:` options to this hash. `builder:` should be an instance of `ActionView::Helpers::FormBuilder`, which are created by the standard Rails `#form_with` and `#form_for` helpers. The `name:` option is the desired name of the field that will be included in the params sent to the server on form submission. *NOTE*: Consider using an {{#link_to_component}}Primer::Alpha::ActionMenu{{/link_to_component}} instead of using this feature directly."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "heading",
        "description": "Heading text rendered above the list of items.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Heading{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "items",
        "description": "Items. Items can be individual items or dividers. See the documentation for `#with_item` and `#with_divider` respectively for more information.",
        "parameters": [

        ]
      }
    ],
    "methods": [
      {
        "name": "with_item",
        "description": "Adds an item to the list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Item{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "with_divider",
        "description": "Adds a divider to the list. Dividers visually separate items.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Divider{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "id",
        "description": "Returns the value of attribute id.",
        "parameters": [

        ]
      },
      {
        "name": "select_variant",
        "description": "Returns the value of attribute select_variant.",
        "parameters": [

        ]
      },
      {
        "name": "role",
        "description": "Returns the value of attribute role.",
        "parameters": [

        ]
      },
      {
        "name": "post_list_content_block",
        "description": "Returns the value of attribute post_list_content_block.",
        "parameters": [

        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/action_list/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/leading_visuals",
        "name": "leading_visuals",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/with_manual_dividers",
        "name": "with_manual_dividers",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/divider",
        "name": "divider",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/heading",
        "name": "heading",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item",
        "name": "item",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_default",
        "name": "item_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_size_large",
        "name": "item_size_large",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_size_xlarge",
        "name": "item_size_xlarge",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_leading_visual",
        "name": "item_leading_visual",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_trailing_visual",
        "name": "item_trailing_visual",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_leading_trailing_visual",
        "name": "item_leading_trailing_visual",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_with_description",
        "name": "item_with_description",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_with_description_inline",
        "name": "item_with_description_inline",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_trailing_action",
        "name": "item_trailing_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_danger",
        "name": "item_danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_disabled",
        "name": "item_disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_wrap_label",
        "name": "item_wrap_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_truncate_label",
        "name": "item_truncate_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_list/item_active",
        "name": "item_active",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::ActionList::Item",
        "description": "An individual `ActionList` item. Items can optionally include leading and/or trailing visuals,\nsuch as icons, avatars, and counters.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionList::Item",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionListItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_list/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_list/item/default/",
        "parameters": [
          {
            "name": "list",
            "type": "Primer::Alpha::ActionList",
            "default": "N/A",
            "description": "The list that contains this item. Used internally."
          },
          {
            "name": "parent",
            "type": "Primer::Alpha::ActionList::Item",
            "default": "`nil`",
            "description": "This item's parent item. `nil` if this item is at the root. Used internally."
          },
          {
            "name": "label",
            "type": "String",
            "default": "`nil`",
            "description": "Item label. If no label is provided, content is used."
          },
          {
            "name": "label_classes",
            "type": "String",
            "default": "`nil`",
            "description": "CSS classes that will be added to the label."
          },
          {
            "name": "label_arguments",
            "type": "Hash",
            "default": "`{}`",
            "description": "{{link_to_system_arguments_docs}} used to construct the label."
          },
          {
            "name": "content_arguments",
            "type": "Hash",
            "default": "`{}`",
            "description": "{{link_to_system_arguments_docs}} used to construct the item's anchor or button tag."
          },
          {
            "name": "form_arguments",
            "type": "Hash",
            "default": "`{}`",
            "description": "Allows the item to submit a form on click. The URL passed in the `href:` option will be used as the form action. Pass the `method:` option to this hash to control what kind of request is made, One of `:delete`, `:get`, `:head`, `:patch`, `:post`, or `:put`. The `name:` option is required and specifies the desired name of the field that will be included in the params sent to the server on form submission. Specify the `value:` option to send a custom value to the server; otherwise the value of `name:` is sent."
          },
          {
            "name": "truncate_label",
            "type": "Boolean",
            "default": "`false`",
            "description": "Truncate label with ellipsis."
          },
          {
            "name": "href",
            "type": "String",
            "default": "`nil`",
            "description": "Link URL."
          },
          {
            "name": "role",
            "type": "String",
            "default": "`nil`",
            "description": "ARIA role describing the function of the item."
          },
          {
            "name": "size",
            "type": "Symbol",
            "default": "`:medium`",
            "description": "Controls block sizing of the item."
          },
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "`:default`",
            "description": "Controls color/style based on behavior."
          },
          {
            "name": "disabled",
            "type": "Boolean",
            "default": "`false`",
            "description": "Disabled items are not clickable and visually dim."
          },
          {
            "name": "description_scheme",
            "type": "Symbol",
            "default": "`:block`",
            "description": "Display description inline with label, or block on the next line."
          },
          {
            "name": "active",
            "type": "Boolean",
            "default": "`false`",
            "description": "If the parent list's `select_variant` is set to `:single` or `:multiple`, causes this item to render checked."
          },
          {
            "name": "on_click",
            "type": "String",
            "default": "`nil`",
            "description": "JavaScript to execute when the item is clicked."
          },
          {
            "name": "id",
            "type": "String",
            "default": "`self.class.generate_id`",
            "description": "Used internally."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "description",
            "description": "Description content that complements the item's label. See `ActionList`'s `description_scheme` argument\nfor layout options.",
            "parameters": [

            ]
          },
          {
            "name": "leading_visual",
            "description": "An icon, avatar, SVG, or custom content that will render to the left of the label.\n\nTo render an icon, call the `with_leading_visual_icon` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.\n\nTo render an avatar, call the `with_leading_visual_avatar` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Avatar{{/link_to_component}}.\n\nTo render an SVG, call the `with_leading_visual_svg` method.\n\nTo render custom content, call the `with_leading_visual_content` method and pass a block that returns a string.",
            "parameters": [

            ]
          },
          {
            "name": "trailing_visual",
            "description": "An icon, label, counter, or text to render to the right of the label.\n\nTo render an icon, call the `with_leading_visual_icon` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.\n\nTo render a label, call the `with_leading_visual_label` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Label{{/link_to_component}}.\n\nTo render a counter, call the `with_leading_visual_counter` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}.\n\nTo render text, call the `with_leading_visual_text` method and pass a block that returns a string. Eg:\n```ruby\nwith_leading_visual_text { \"Text here\" }\n```",
            "parameters": [

            ]
          },
          {
            "name": "trailing_action",
            "description": "A button rendered after the trailing icon that can be used to show a menu, activate\na dialog, etc.",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Beta::IconButton{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "tooltip",
            "description": "`Tooltip` that appears on mouse hover or keyboard focus over the trailing action button. Use tooltips sparingly and as\na last resort. **Important:** This tooltip defaults to `type: :description`. In a few scenarios, `type: :label` may be\nmore appropriate. Consult the {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}} documentation for more information.",
            "parameters": [
              {
                "name": "type",
                "type": "Symbol",
                "default": "`:description`",
                "description": "One of `:description` or `:label`."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}}."
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "id",
            "description": "Returns the value of attribute id.",
            "parameters": [

            ]
          },
          {
            "name": "list",
            "description": "Returns the value of attribute list.",
            "parameters": [

            ]
          },
          {
            "name": "href",
            "description": "Returns the value of attribute href.",
            "parameters": [

            ]
          },
          {
            "name": "active",
            "description": "Returns the value of attribute active.",
            "parameters": [

            ]
          },
          {
            "name": "disabled",
            "description": "Returns the value of attribute disabled.",
            "parameters": [

            ]
          },
          {
            "name": "parent",
            "description": "Returns the value of attribute parent.",
            "parameters": [

            ]
          },
          {
            "name": "active?",
            "description": "Returns the value of attribute active.\nWhether or not this item is active.",
            "parameters": [

            ]
          },
          {
            "name": "disabled?",
            "description": "Returns the value of attribute disabled.\nWhether or not this item is disabled.",
            "parameters": [

            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::ActionList::Heading",
        "description": "Heading used to describe each sub list within an action list.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionList::Heading",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionListHeading",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_list/heading.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_list/heading/default/",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "default": "N/A",
            "description": "Sub list title."
          },
          {
            "name": "heading_level",
            "type": "Integer",
            "default": "`3`",
            "description": "Heading level. Level 2 results in an `<h2>` tag, level 3 an `<h3>` tag, etc."
          },
          {
            "name": "subtitle",
            "type": "String",
            "default": "`nil`",
            "description": "Optional sub list description."
          },
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "`:subtle`",
            "description": "Display a background color if scheme is `filled`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [
          {
            "name": "title_id",
            "description": "Returns the value of attribute title_id.",
            "parameters": [

            ]
          },
          {
            "name": "subtitle_id",
            "description": "Returns the value of attribute subtitle_id.",
            "parameters": [

            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::ActionList::FormWrapper",
        "description": "Utility component for wrapping ActionLists or individual ActionList::Items in forms.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionList::FormWrapper",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionListFormWrapper",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_list/form_wrapper.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_list/form_wrapper/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::ActionList::Divider",
        "description": "Separator with optional text rendered above groups or between individual items.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionList::Divider",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "ActionListDivider",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_list/divider.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_list/divider/default/",
        "parameters": [
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "`:subtle`",
            "description": "Display a background color if scheme is `filled`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::ActionMenu",
    "description": "ActionMenu is used for actions, navigation, to display secondary options, or single/multi select lists. They appear when users interact with buttons, actions, or other controls.\n\nThe only allowed elements for the `Item` components are: `:a`, `:button`, and `:clipboard-copy`. The default is `:button`.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "ActionMenu",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ActionMenu",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_menu.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_menu/default/",
    "parameters": [
      {
        "name": "menu_id",
        "type": "String",
        "default": "`self.class.generate_id`",
        "description": "Id of the menu."
      },
      {
        "name": "anchor_align",
        "type": "Symbol",
        "default": "`:start`",
        "description": "One of `:center`, `:end`, or `:start`.."
      },
      {
        "name": "anchor_side",
        "type": "Symbol",
        "default": "`:outside_bottom`",
        "description": "One of `:inside_bottom`, `:inside_center`, `:inside_left`, `:inside_right`, `:inside_top`, `:outside_bottom`, `:outside_left`, `:outside_right`, or `:outside_top`.."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:auto`",
        "description": "One of `:auto`, `:large`, `:medium`, `:medium_portrait`, `:small`, or `:xlarge`.."
      },
      {
        "name": "src",
        "type": "String",
        "default": "`nil`",
        "description": "Used with an `include-fragment` element to load menu content from the given source URL."
      },
      {
        "name": "preload",
        "type": "Boolean",
        "default": "`false`",
        "description": "When true, and src is present, loads the `include-fragment` on trigger hover."
      },
      {
        "name": "dynamic_label",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not to display the text of the currently selected item in the show button."
      },
      {
        "name": "dynamic_label_prefix",
        "type": "String",
        "default": "`nil`",
        "description": "If provided, the prefix is prepended to the dynamic label and displayed in the show button."
      },
      {
        "name": "select_variant",
        "type": "Symbol",
        "default": "`:none`",
        "description": "One of `:multiple`, `:none`, or `:single`."
      },
      {
        "name": "form_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "Allows an `ActionMenu` to act as a select list in multi- and single-select modes. Pass the `builder:` and `name:` options to this hash. `builder:` should be an instance of `ActionView::Helpers::FormBuilder`, which are created by the standard Rails `#form_with` and `#form_for` helpers. The `name:` option is the desired name of the field that will be included in the params sent to the server on form submission."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}."
      }
    ],
    "slots": [
      {
        "name": "show_button",
        "description": "Button to activate the menu.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::Overlay{{/link_to_component}}'s `show_button` slot."
          }
        ]
      },
      {
        "name": "items",
        "description": "Adds a new item to the list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Item{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "list",
        "description": "Returns the value of attribute list.",
        "parameters": [

        ]
      },
      {
        "name": "preload",
        "description": "Returns the value of attribute preload.",
        "parameters": [

        ]
      },
      {
        "name": "preload?",
        "description": "Returns the value of attribute preload.",
        "parameters": [

        ]
      },
      {
        "name": "with_show_button",
        "description": "Button to activate the menu.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::Overlay{{/link_to_component}}'s `show_button` slot."
          }
        ]
      },
      {
        "name": "with_item",
        "description": "Adds a new item to the list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Item{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "with_divider",
        "description": "Adds a divider to the list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList{{/link_to_component}}'s `divider` slot."
          }
        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/action_menu/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/content_labels",
        "name": "content_labels",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/default",
        "name": "default",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/wide",
        "name": "wide",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/with_icon_button",
        "name": "with_icon_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/single_select",
        "name": "single_select",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/multiple_select",
        "name": "multiple_select",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/links",
        "name": "links",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/single_selected_item",
        "name": "single_selected_item",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/single_select_with_internal_label",
        "name": "single_select_with_internal_label",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/multiple_selected_items",
        "name": "multiple_selected_items",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/with_deferred_content",
        "name": "with_deferred_content",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/with_deferred_preloaded_content",
        "name": "with_deferred_preloaded_content",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/with_actions",
        "name": "with_actions",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/single_select_form",
        "name": "single_select_form",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/multiple_select_form",
        "name": "multiple_select_form",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/with_disabled_items",
        "name": "with_disabled_items",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/opens_dialog",
        "name": "opens_dialog",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/align_end",
        "name": "align_end",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/block_description",
        "name": "block_description",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/submitting_forms",
        "name": "submitting_forms",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/inline_description",
        "name": "inline_description",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/leading_visual",
        "name": "leading_visual",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/leading_visual_single_select",
        "name": "leading_visual_single_select",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/action_menu/two_menus",
        "name": "two_menus",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::ActionMenu::List",
        "description": "This component is part of {{#link_to_component}}Primer::Alpha::ActionMenu{{/link_to_component}} and should not be\nused as a standalone component.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "ActionMenu::List",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "ActionMenuList",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/action_menu/list.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/action_menu/list/default/",
        "parameters": [
          {
            "name": "menu_id",
            "type": "String",
            "default": "N/A",
            "description": "ID of the parent menu."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList{{/link_to_component}}"
          }
        ],
        "slots": [
          {
            "name": "heading",
            "description": "Heading text rendered above the list of items.",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Heading{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "items",
            "description": "Items. Items can be individual items or dividers. See the documentation for `#with_item` and `#with_divider` respectively for more information.",
            "parameters": [

            ]
          }
        ],
        "methods": [
          {
            "name": "with_item",
            "description": "Adds a new item to the list.",
            "parameters": [
              {
                "name": "data",
                "type": "Hash",
                "default": "`{}`",
                "description": "When the menu is used as a form input (see the {{#link_to_component}}Primer::Alpha::ActionMenu{{/link_to_component}} docs), the label is submitted to the server by default. However, if the `data: { value: }` or `\"data-value\":` attribute is provided, it will be sent to the server instead."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The same arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Item{{/link_to_component}}."
              }
            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::AutoComplete",
    "description": "Use `AutoComplete` to provide a user with a list of selectable suggestions that appear when they type into the\ninput field. This list is populated by server search results.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "AutoComplete",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "AutoComplete",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/auto_complete.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/auto_complete/default/",
    "parameters": [
      {
        "name": "label_text",
        "type": "String",
        "default": "N/A",
        "description": "The label of the input."
      },
      {
        "name": "src",
        "type": "String",
        "default": "N/A",
        "description": "The route to query."
      },
      {
        "name": "input_id",
        "type": "String",
        "default": "N/A",
        "description": "Id of the input element."
      },
      {
        "name": "input_name",
        "type": "String",
        "default": "`nil`",
        "description": "Optional name of the input element, defaults to `input_id` when not set."
      },
      {
        "name": "list_id",
        "type": "String",
        "default": "N/A",
        "description": "Id of the list element."
      },
      {
        "name": "with_icon",
        "type": "Boolean",
        "default": "`false`",
        "description": "Controls if a search icon is visible, defaults to `false`."
      },
      {
        "name": "is_label_visible",
        "type": "Boolean",
        "default": "`true`",
        "description": "Controls if the label is visible. If `false`, screen reader only text will be added."
      },
      {
        "name": "is_clearable",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds optional clear button."
      },
      {
        "name": "is_label_inline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Controls if the label is inline. On smaller screens, label will always become stacked."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "results",
        "description": "Customizable results list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "input",
        "description": "Customizable input used to search for results.\nIt is preferred to use this slot sparingly - it will be created by default if not explicity added.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "label_classes",
        "description": "Private: determines the label classes based on component configration.\n\nIf the label is not visible, return an empty string.",
        "parameters": [
          {
            "name": "args",
            "type": "Hash",
            "default": "N/A",
            "description": "The component configuration."
          }
        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/auto_complete/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/auto_complete/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/auto_complete/with_non_visible_label",
        "name": "with_non_visible_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/auto_complete/with_inline_label",
        "name": "with_inline_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/auto_complete/with_icon",
        "name": "with_icon",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/auto_complete/with_clear_button",
        "name": "with_clear_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::AutoComplete::Item",
        "description": "Use `AutoCompleteItem` to list results of an auto-completed search.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "AutoComplete::Item",
        "status": "deprecated",
        "a11y_reviewed": false,
        "short_name": "AutoCompleteItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/auto_complete/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/auto_complete/item/default/",
        "parameters": [
          {
            "name": "value",
            "type": "String",
            "default": "N/A",
            "description": "Value of the item."
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether the item is selected."
          },
          {
            "name": "disabled",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether the item is disabled."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Banner",
    "description": "Use `Banner` to highlight important information.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Banner",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Banner",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/banner.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/banner/default/",
    "parameters": [
      {
        "name": "full",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the component should take up the full width of the screen."
      },
      {
        "name": "full_when_narrow",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the component should take up the full width of the screen when rendered inside smaller viewports."
      },
      {
        "name": "dismissible",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the component can be dismissed with an \"x\" button."
      },
      {
        "name": "description",
        "type": "String",
        "default": "`nil`",
        "description": "Description text rendered underneath the message."
      },
      {
        "name": "icon",
        "type": "Symbol",
        "default": "`nil`",
        "description": "The name of an {{link_to_octicons}} icon to use. If no icon is provided, a default one will be chosen based on the scheme."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger`, `:default`, `:success`, or `:warning`."
      },
      {
        "name": "reappear",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the flash banner should reappear after being dismissed. Only for use in test and preview environments."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "action",
        "description": "A button or custom content that will render on the right-hand side of the component.\n\nTo render a button, call the `with_action_button` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Button{{/link_to_component}}.\n\nTo render custom content, call the `with_action_content` method and pass a block that returns HTML.",
        "parameters": [

        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/banner/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/scheme_default",
        "name": "scheme_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/scheme_danger",
        "name": "scheme_danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/scheme_success",
        "name": "scheme_success",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/scheme_warning",
        "name": "scheme_warning",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/dismissable",
        "name": "dismissable",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/full_width_in_narrow_viewport",
        "name": "full_width_in_narrow_viewport",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/with_action_button",
        "name": "with_action_button",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/banner/with_action_content",
        "name": "with_action_content",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::ButtonMarketing",
    "description": "Use `ButtonMarketing` for actions (e.g. in forms). Use links for destinations, or moving from one page to another.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "ButtonMarketing",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ButtonMarketing",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/button_marketing.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/button_marketing/default/",
    "parameters": [
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:default`, `:outline`, `:primary`, or `:transparent`."
      },
      {
        "name": "variant",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:default` or `:large`."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:a` or `:button`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:button` or `:submit`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled. If true, this option forces `tag:` to `:button`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/button_marketing/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/sizes_default",
        "name": "sizes_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/sizes_large",
        "name": "sizes_large",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/scheme_default",
        "name": "scheme_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/scheme_primary",
        "name": "scheme_primary",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/scheme_outline",
        "name": "scheme_outline",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/button_marketing/scheme_transparent",
        "name": "scheme_transparent",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::CheckBox",
    "description": "Check boxes are true/false inputs rendered as `<input type=\"checkbox\">` in HTML.\n\n## Schemes\n\nCheck boxes can submit values to the server using one of two schemes, either `:array`\nor `:boolean` (the default). Check boxes with a scheme of `:boolean` function like normal\nHTML check boxes. If they are checked, a value of \"1\" is sent to the server; if they are\nunchecked, a value of \"0\" is sent to the server. The checked and unchecked values can be\ncustomized via the `:value` and `:unchecked_value` arguments respectively.\n\nWhereas `:boolean` check boxes must have unique names, `:array` check boxes all have the\nsame name. On form submission, Rails will aggregate the values of the check boxes with the\nsame name and provide them to the controller as an array. If `:scheme:` is `:array`, the\n`:value` argument must also be provided. The `:unchecked_value` argument is ignored. If a\ncheck box is checked on submit, its corresponding value will appear in the array. If it is\nnot checked, its value will not appear in the array.\n\n## Caption templates\n\nCaption templates for `:array`-type check boxes work a little differently than they do for\nother input types. Because the name must be the same for all check boxes that make up an\narray, caption template file names are comprised of both the name _and_ the value of each\ncheck box. For example, a check box with the name `foo` and value `bar` must have a caption\ntemplate named `foo_bar_caption.html.erb`.\n\n## Nested Forms\n\nCheck boxes can have \"nested\" forms that are rendered below the caption. A common use-case\nis a form that is hidden until the check box is checked. Nested forms are indented slightly\nto align with the label and caption.\n\nDefine a nested form via the `#nested_form` method, which is expected to return an instance\nof a Primer form (see the usage section below).\n\nAny fields defined in the nested form are submitted along with the parent form's fields.\n\n**NOTE**: Check boxes do not automatically show or hide nested forms. If such behavior is\ndesired, it must be done by hand.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "CheckBox",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "CheckBox",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/check_box.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/check_box/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      },
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "value",
        "type": "String",
        "default": "N/A",
        "description": "On form submission, this value will be sent to the server if the check box is checked. Defaults to \"1\"."
      },
      {
        "name": "unchecked_value",
        "type": "String",
        "default": "N/A",
        "description": "On form submission, this value will be sent to the server if the check box is _not_ checked. Defaults to \"0\"."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "N/A",
        "description": "Controls how check box values are submitted to the server. One of `:array` or `:boolean`.."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/check_box/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box/checked",
        "name": "checked",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box/disabled",
        "name": "disabled",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::CheckBoxGroup",
    "description": "Check box groups consist of one or more related check boxes.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "CheckBoxGroup",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "CheckBoxGroup",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/check_box_group.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/check_box_group/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute. When provided, the check box values will be submitted in to the server in `:array` mode. See the {{#link_to_component}}Primer::Alpha::CheckBox{{/link_to_component}} for more information."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the group."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the group."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      }
    ],
    "slots": [

    ],
    "methods": [
      {
        "name": "check_box",
        "description": "Adds a check box to the group.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::CheckBox{{/link_to_component}}."
          },
          {
            "name": "block",
            "type": "Proc",
            "default": "N/A",
            "description": "The block accepted by {{#link_to_component}}Primer::Alpha::CheckBox{{/link_to_component}}."
          }
        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/check_box_group/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box_group/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box_group/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box_group/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box_group/full_width",
        "name": "full_width",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/check_box_group/disabled",
        "name": "disabled",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Dialog",
    "description": "A `Dialog` is used to remove the user from the main application flow,\nto confirm actions, ask for disambiguation or to present small forms.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Dialog",
    "status": "alpha",
    "a11y_reviewed": true,
    "short_name": "Dialog",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dialog.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dialog/default/",
    "parameters": [
      {
        "name": "id",
        "type": "String",
        "default": "`self.class.generate_id`",
        "description": "The id of the dialog."
      },
      {
        "name": "title",
        "type": "String",
        "default": "N/A",
        "description": "Describes the content of the dialog."
      },
      {
        "name": "subtitle",
        "type": "String",
        "default": "`nil`",
        "description": "Provides additional context for the dialog, also setting the `aria-describedby` attribute."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "The size of the dialog. One of `:auto`, `:large`, `:medium`, `:medium_portrait`, `:small`, or `:xlarge`."
      },
      {
        "name": "position",
        "type": "Symbol",
        "default": "`:center`",
        "description": "The position of the dialog. One of `:center`, `:left`, or `:right`."
      },
      {
        "name": "position_narrow",
        "type": "Symbol",
        "default": "`:inherit`",
        "description": "The position of the dialog when narrow. One of `:bottom`, `:fullscreen`, `:inherit`, `:left`, or `:right`."
      },
      {
        "name": "visually_hide_title",
        "type": "Boolean",
        "default": "`false`",
        "description": "If true will hide the heading title, while still making it available to Screen Readers."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "show_button",
        "description": "Optional button to open the dialog.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Button{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "header",
        "description": "Header content.",
        "parameters": [
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "N/A",
            "description": "Show a divider between the header and body."
          },
          {
            "name": "visually_hide_title",
            "type": "Boolean",
            "default": "N/A",
            "description": "Visually hide the `title` while maintaining a label for assistive technologies."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "body",
        "description": "Required body content.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "footer",
        "description": "Footer content.",
        "parameters": [
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "N/A",
            "description": "Show a divider between the footer and body."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "id",
        "description": "The dialog's ID value.",
        "parameters": [

        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/dialog/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/default",
        "name": "default",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/long_text",
        "name": "long_text",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/with_footer",
        "name": "with_footer",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/with_form",
        "name": "with_form",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/custom_header",
        "name": "custom_header",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/nested_dialog",
        "name": "nested_dialog",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/with_text_input",
        "name": "with_text_input",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dialog/body_has_scrollbar_overflow",
        "name": "body_has_scrollbar_overflow",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::Dialog::Header",
        "description": "A `Dialog::Header` is a compositional component, used to render the\nHeader of a dialog. See {{#link_to_component}}Primer::Alpha::Dialog{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Dialog::Header",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "DialogHeader",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dialog/header.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dialog/header/default/",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "default": "N/A",
            "description": "Describes the content of the dialog."
          },
          {
            "name": "subtitle",
            "type": "String",
            "default": "`nil`",
            "description": "Provides dditional context for the dialog, also setting the `aria-describedby` attribute."
          },
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "`false`",
            "description": "Show a divider between the header and body."
          },
          {
            "name": "visually_hide_title",
            "type": "Boolean",
            "default": "`false`",
            "description": "Visually hide the `title` while maintaining a label for assistive technologies."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Dialog::Footer",
        "description": "A `Dialog::Footer` is a compositional component, used to render the\nFooter of a dialog. See {{#link_to_component}}Primer::Alpha::Dialog{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Dialog::Footer",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "DialogFooter",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dialog/footer.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dialog/footer/default/",
        "parameters": [
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "`false`",
            "description": "Show a divider between the footer and body."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Dialog::Body",
        "description": "A `Dialog::Body` is a compositional component, used to render the\nBody of a dialog. See {{#link_to_component}}Primer::Alpha::Dialog{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Dialog::Body",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "DialogBody",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dialog/body.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dialog/body/default/",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Dropdown",
    "description": "`Dropdown` is a lightweight context menu for housing navigation and actions.\nThey're great for instances where you don't need the full power (and code) of the SelectMenu.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Dropdown",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Dropdown",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dropdown.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dropdown/default/",
    "parameters": [
      {
        "name": "overlay",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:dark`, `:default`, or `:none`."
      },
      {
        "name": "with_caret",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not a caret should be rendered in the button."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "button",
        "description": "Required trigger for the dropdown. Has the same arguments as {{#link_to_component}}Primer::ButtonComponent{{/link_to_component}},\nbut it is locked as a `summary` tag.",
        "parameters": [

        ]
      },
      {
        "name": "menu",
        "description": "Required context menu for the dropdown.",
        "parameters": [
          {
            "name": "as",
            "type": "Symbol",
            "default": "N/A",
            "description": "When `as` is `:list`, wraps the menu in a `<ul>` with a `<li>` for each item."
          },
          {
            "name": "direction",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:e`, `:ne`, `:s`, `:se`, `:sw`, or `:w`."
          },
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "N/A",
            "description": "Pass `:dark` for dark mode theming"
          },
          {
            "name": "header",
            "type": "String",
            "default": "N/A",
            "description": "Optional string to display as the header"
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/dropdown/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/default",
        "name": "default",
        "snapshot": "interactive",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/menu",
        "name": "menu",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_e",
        "name": "direction_e",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_ne",
        "name": "direction_ne",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_s",
        "name": "direction_s",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_se",
        "name": "direction_se",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_sw",
        "name": "direction_sw",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/direction_w",
        "name": "direction_w",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_with_caret",
        "name": "options_with_caret",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_with_header",
        "name": "options_with_header",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_with_dividers",
        "name": "options_with_dividers",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_as_list",
        "name": "options_as_list",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_overlay_none",
        "name": "options_overlay_none",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/dropdown/options_overlay_dark",
        "name": "options_overlay_dark",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::Dropdown::Menu::Item",
        "description": "Items to be rendered in the `Dropdown` menu.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Dropdown::Menu::Item",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "DropdownMenuItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dropdown/menu/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dropdown/menu/item/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Dropdown::Menu",
        "description": "This component is part of `Dropdown` and should not be\nused as a standalone component.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Dropdown::Menu",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "DropdownMenu",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/dropdown/menu.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/dropdown/menu/default/",
        "parameters": [
          {
            "name": "as",
            "type": "Symbol",
            "default": "`:default`",
            "description": "When `as` is `:list`, wraps the menu in a `<ul>` with a `<li>` for each item."
          },
          {
            "name": "direction",
            "type": "Symbol",
            "default": "`:se`",
            "description": "One of `:e`, `:ne`, `:s`, `:se`, `:sw`, or `:w`.."
          },
          {
            "name": "header",
            "type": "String",
            "default": "`nil`",
            "description": "Header to be displayed above the menu."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "items",
            "description": null,
            "parameters": [
              {
                "name": "tag",
                "type": "Symbol",
                "default": "N/A",
                "description": "One of `:a`, `:button`, or `:summary`.."
              },
              {
                "name": "divider",
                "type": "Boolean",
                "default": "N/A",
                "description": "Whether the item is a divider without any function."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "{{link_to_system_arguments_docs}}"
              }
            ]
          }
        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::FormButton",
    "description": "A button input rendered using the HTML `<button type=\"button\">` tag.\n\nThis component wraps the Primer button component and supports the same slots and arguments.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "FormButton",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "FormButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/form_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/form_button/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::FormControl",
    "description": "Wraps an input (or arbitrary content) with a label above and a caption and validation message beneath.\nNOTE: This `FormControl` component is designed for wrapping inputs that aren't supported by the Primer\nforms framework.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "FormControl",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "FormControl",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/form_control.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/form_control/default/",
    "parameters": [
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "`nil`",
        "description": "Describes the field and what sort of input it expects. Displayed below the input. Note that the `caption` slot is also available and takes precedence over this argument when provided."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "`nil`",
        "description": "A string displayed in red between the caption and the input indicating the input's contents are invalid."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "`false`",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "`false`",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "full_width",
        "type": "Boolean",
        "default": "`false`",
        "description": "When set to `true`, the form control will take up all the horizontal space allowed by its container."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "caption",
        "description": "Describes the field and what sorts of input it expects. Displayed below the input.\nNote that this slot takes precedence over the `caption:` argument in the constructor.",
        "parameters": [

        ]
      },
      {
        "name": "input",
        "description": "The input content. Yields a set of {{link_to_system_arguments_docs}} that should be added to the input.",
        "parameters": [

        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/form_control/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/form_control/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/form_control/with_caption",
        "name": "with_caption",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/form_control/with_validation_message",
        "name": "with_validation_message",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/form_control/required",
        "name": "required",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/form_control/with_visually_hidden_label",
        "name": "with_visually_hidden_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::HellipButton",
    "description": "Use `HellipButton` to render a button with a hellip. Often used for hidden text expanders.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "HellipButton",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "HellipButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/hellip_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/hellip_button/default/",
    "parameters": [
      {
        "name": "inline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is inline."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/hellip_button/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/hellip_button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::HiddenTextExpander",
    "description": "Use `HiddenTextExpander` to indicate and toggle hidden text.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "HiddenTextExpander",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "HiddenTextExpander",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/hidden_text_expander.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/hidden_text_expander/default/",
    "parameters": [
      {
        "name": "inline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the expander is inline."
      },
      {
        "name": "button_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the button element."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/hidden_text_expander/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/hidden_text_expander/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Image",
    "description": "Use `Image` to render images.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Image",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Image",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/image.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/image/default/",
    "parameters": [
      {
        "name": "src",
        "type": "String",
        "default": "N/A",
        "description": "The source url of the image."
      },
      {
        "name": "alt",
        "type": "String",
        "default": "N/A",
        "description": "Specifies an alternate text for the image."
      },
      {
        "name": "lazy",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not to lazily load the image."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::ImageCrop",
    "description": "A client-side mechanism to crop images.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "ImageCrop",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ImageCrop",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/image_crop.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/image_crop/default/",
    "parameters": [
      {
        "name": "src",
        "type": "String",
        "default": "N/A",
        "description": "The path of the image to crop."
      },
      {
        "name": "rounded",
        "type": "Boolean",
        "default": "`true`",
        "description": "If the crop mask should be a circle. Defaults to true."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "loading",
        "description": "A loading indicator that is shown while the image is loading.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/image_crop/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/image_crop/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/image_crop/loading",
        "name": "loading",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Layout",
    "description": "`Layout` provides foundational patterns for responsive pages.\n`Layout` can be used for simple two-column pages, or it can be nested to provide flexible 3-column experiences.\n On smaller screens, `Layout` uses vertically stacked rows to display content.\n\n`Layout` flows as both column, when there's enough horizontal space to render both `Main` and `Sidebar`side-by-side (on a desktop of tablet device, per instance);\nor it flows as a row, when `Main` and `Sidebar` are stacked vertically (e.g. on a mobile device).\n`Layout` should always work in any screen size.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Layout",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Layout",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/layout.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/layout/default/",
    "parameters": [
      {
        "name": "stacking_breakpoint",
        "type": "Symbol",
        "default": "`:md`",
        "description": "When the `Layout` should change from rows into columns. One of `:lg`, `:md`, or `:sm`."
      },
      {
        "name": "first_in_source",
        "type": "Symbol",
        "default": "`:sidebar`",
        "description": "Which element to render first in the HTML. This will change the keyboard navigation order. One of `:main` or `:sidebar`."
      },
      {
        "name": "gutter",
        "type": "Symbol",
        "default": "`:default`",
        "description": "The amount of space between the main section and the sidebar. One of `:condensed`, `:default`, `:none`, or `:spacious`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "main",
        "description": "The layout's main content.",
        "parameters": [
          {
            "name": "width",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:full`, `:lg`, `:md`, or `:xl`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "sidebar",
        "description": "The layout's sidebar.",
        "parameters": [
          {
            "name": "width",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:default`, `:narrow`, or `:wide`."
          },
          {
            "name": "col_placement",
            "type": "Symbol",
            "default": "N/A",
            "description": "Sidebar placement when `Layout` is in column modes. One of `:end` or `:start`."
          },
          {
            "name": "row_placement",
            "type": "Symbol",
            "default": "N/A",
            "description": "Sidebar placement when `Layout` is in row mode. One of `:end`, `:none`, or `:start`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/layout/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/gutter_none",
        "name": "gutter_none",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/gutter_condensed",
        "name": "gutter_condensed",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/gutter_default",
        "name": "gutter_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/gutter_spacious",
        "name": "gutter_spacious",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/main_width_md",
        "name": "main_width_md",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/main_width_lg",
        "name": "main_width_lg",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/main_width_xl",
        "name": "main_width_xl",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/main_width_full",
        "name": "main_width_full",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_width_narrow",
        "name": "sidebar_width_narrow",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_width_default",
        "name": "sidebar_width_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_width_wide",
        "name": "sidebar_width_wide",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_col_placement_start",
        "name": "sidebar_col_placement_start",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_col_placement_end",
        "name": "sidebar_col_placement_end",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_row_placement_start",
        "name": "sidebar_row_placement_start",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_row_placement_end",
        "name": "sidebar_row_placement_end",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/sidebar_row_placement_none",
        "name": "sidebar_row_placement_none",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/stacking_breakpoint_sm",
        "name": "stacking_breakpoint_sm",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/stacking_breakpoint_md",
        "name": "stacking_breakpoint_md",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/layout/stacking_breakpoint_lg",
        "name": "stacking_breakpoint_lg",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::Layout::Sidebar",
        "description": "The layout's sidebar content.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Layout::Sidebar",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "LayoutSidebar",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/layout/sidebar.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/layout/sidebar/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Layout::Main",
        "description": "The layout's main content.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Layout::Main",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "LayoutMain",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/layout/main.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/layout/main/default/",
        "parameters": [
          {
            "name": "width",
            "type": "Symbol",
            "default": "`:full`",
            "description": "One of `:full`, `:lg`, `:md`, or `:xl`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Menu",
    "description": "Use `Menu` to create vertical lists of navigational links.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Menu",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Menu",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/menu.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/menu/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "heading",
        "description": "Optional menu heading",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "items",
        "description": "Required list of navigational links",
        "parameters": [
          {
            "name": "href",
            "type": "String",
            "default": "N/A",
            "description": "URL to be used for the Link"
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether the item is the current selection"
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/menu/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/menu/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::MultiInput",
    "description": "Multi inputs are comprised of multiple constituent fields, only one of which is visible\nat a given time. They are designed for situations where constituent inputs are shown or\nhidden based on the value of another field. For example, consider an address form. If\nthe user chooses the USA as the country, the region input should show a list of states\nand US territories; if the user instead chooses Canada, the region input should show a\nlist of Canadian provinces, etc.\n\nUnlike everywhere else in Primer forms, constituent inputs are not directly passed a\n`name` attribute. Instead, developers pass a `name` attribute to the multi input itself.\nThe multi input then automatically assigns each constituent input the same name. This is\ndone so that the multi input looks like a single field from the server's point of view.\nUsing the address form example from earlier, this means only one value - either a US state\nor a Canadian provice - will be submitted to the server under the `region` key.\n\nActually, that's not quite true. Constituent inputs _are_ given a `name`, but it's added to\nthe input as the `data-name` attribute as a way to identify constituent inputs, and will not\nbe sent to the server.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": true,
    "component": "MultiInput",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "MultiInput",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/multi_input.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/multi_input/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/multi_input/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/multi_input/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/multi_input/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/multi_input/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/multi_input/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::NavList",
    "description": "`NavList` provides a simple way to render side navigation, i.e. navigation\nthat appears to the left or right side of some main content. Each group in a\nnav list is a list of links.\n\nNav list groups can contain sub items. Rather than navigating to a URL, groups\nwith sub items expand and collapse on click. To indicate this functionality, the\ngroup will automatically render with a trailing chevron icon that changes direction\nwhen the group expands and collapses.\n\nNav list items appear visually active when selected. Each nav item must have one\nor more ID values that determine which item will appear selected. Use the\n`selected_item_id` argument to select the appropriate item.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "NavList",
    "status": "alpha",
    "a11y_reviewed": true,
    "short_name": "NavList",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/nav_list.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/nav_list/default/",
    "parameters": [
      {
        "name": "selected_item_id",
        "type": "Symbol",
        "default": "`nil`",
        "description": "The ID of the currently selected item. The default is `nil`, meaning no item is selected."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "heading",
        "description": "The heading for the list at large. Accepts the arguments accepted by {{#link_to_component}}Primer::Alpha::NavList::Heading{{/link_to_component}}.",
        "parameters": [

        ]
      },
      {
        "name": "items",
        "description": "Items. Items can be individual items, dividers, or groups. See the documentation for `#with_item`, `#with_divider`, and `#with_group` respectively for more information.",
        "parameters": [

        ]
      }
    ],
    "methods": [
      {
        "name": "with_group",
        "description": "Adds a group to the list. A group is a list of links and a (required) heading.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::NavList::Group{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "with_divider",
        "description": "Adds a divider to the list. Dividers visually separate items and groups.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Divider{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "render_outer_list?",
        "description": "Lists that contain top-level items (i.e. items outside of a group) should be wrapped in a <ul>",
        "parameters": [

        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/nav_list/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/nav_list/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/nav_list/top_level_items",
        "name": "top_level_items",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/nav_list/show_more_item",
        "name": "show_more_item",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/nav_list/trailing_action",
        "name": "trailing_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::NavList::Heading",
        "description": "The heading placed above a `NavList`'s items.\n\nSee {{#link_to_component}}Primer::Alpha::NavList{{/link_to_component}} for usage examples.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "NavList::Heading",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "NavListHeading",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/nav_list/heading.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/nav_list/heading/default/",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "default": "N/A",
            "description": "The text content of the heading."
          },
          {
            "name": "id",
            "type": "String",
            "default": "`self.class.generate_id`",
            "description": "The value of the ID HTML attribute. Auto-generated by default."
          },
          {
            "name": "heading_level",
            "type": "Integer",
            "default": "`2`",
            "description": "The heading level, i.e. 2 for an `<h2>`, 3 for an `<h3>`, etc."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [
          {
            "name": "title",
            "description": "Returns the value of attribute title.",
            "parameters": [

            ]
          },
          {
            "name": "id",
            "description": "Returns the value of attribute id.",
            "parameters": [

            ]
          },
          {
            "name": "heading_level",
            "description": "Returns the value of attribute heading_level.",
            "parameters": [

            ]
          },
          {
            "name": "system_arguments",
            "description": "Returns the value of attribute system_arguments.",
            "parameters": [

            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::NavList::Item",
        "description": "Items are rendered as styled links. They can optionally include leading and/or trailing visuals,\nsuch as icons, avatars, and counters. Items are selected by ID. IDs can be specified via the\n`selected_item_ids` argument, which accepts a list of valid IDs for the item. Items can also\nthemselves contain sub items. Sub items are rendered collapsed by default.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": true,
        "component": "NavList::Item",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "NavListItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/nav_list/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/nav_list/item/default/",
        "parameters": [
          {
            "name": "selected_item_id",
            "type": "Symbol",
            "default": "`nil`",
            "description": "The ID of the currently selected list item. Used internally."
          },
          {
            "name": "selected_by_ids",
            "type": "Array<Symbol>",
            "default": "`[]`",
            "description": "The list of IDs that select this item. In other words, if the `selected_item_id` attribute on the parent `NavList` is set to one of these IDs, the item will appear selected."
          },
          {
            "name": "expanded",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether this item shows (expands) or hides (collapses) its list of sub items."
          },
          {
            "name": "sub_item",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether or not this item is nested under a parent item. Used internally."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "items",
            "description": null,
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Item{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "description",
            "description": "Description content that complements the item's label. See `ActionList`'s `description_scheme` argument\nfor layout options.",
            "parameters": [

            ]
          },
          {
            "name": "leading_visual",
            "description": "An icon, avatar, SVG, or custom content that will render to the left of the label.\n\nTo render an icon, call the `with_leading_visual_icon` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.\n\nTo render an avatar, call the `with_leading_visual_avatar` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Avatar{{/link_to_component}}.\n\nTo render an SVG, call the `with_leading_visual_svg` method.\n\nTo render custom content, call the `with_leading_visual_content` method and pass a block that returns a string.",
            "parameters": [

            ]
          },
          {
            "name": "trailing_visual",
            "description": "An icon, label, counter, or text to render to the right of the label.\n\nTo render an icon, call the `with_leading_visual_icon` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.\n\nTo render a label, call the `with_leading_visual_label` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Label{{/link_to_component}}.\n\nTo render a counter, call the `with_leading_visual_counter` method, which accepts the arguments accepted by {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}.\n\nTo render text, call the `with_leading_visual_text` method and pass a block that returns a string. Eg:\n```ruby\nwith_leading_visual_text { \"Text here\" }\n```",
            "parameters": [

            ]
          },
          {
            "name": "trailing_action",
            "description": "A button rendered after the trailing icon that can be used to show a menu, activate\na dialog, etc.",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Beta::IconButton{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "tooltip",
            "description": "`Tooltip` that appears on mouse hover or keyboard focus over the trailing action button. Use tooltips sparingly and as\na last resort. **Important:** This tooltip defaults to `type: :description`. In a few scenarios, `type: :label` may be\nmore appropriate. Consult the {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}} documentation for more information.",
            "parameters": [
              {
                "name": "type",
                "type": "Symbol",
                "default": "`:description`",
                "description": "One of `:description` or `:label`."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}}."
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "selected_by_ids",
            "description": "Returns the value of attribute selected_by_ids.",
            "parameters": [

            ]
          },
          {
            "name": "sub_item",
            "description": "Returns the value of attribute sub_item.",
            "parameters": [

            ]
          },
          {
            "name": "sub_item?",
            "description": "Returns the value of attribute sub_item.\nWhether or not this item is nested under a parent item.",
            "parameters": [

            ]
          },
          {
            "name": "expand!",
            "description": "Cause this item to show its list of sub items when rendered.",
            "parameters": [

            ]
          },
          {
            "name": "item_active?",
            "description": "Normally it would be easier to simply ask each item for its active status, eg.\nitems.any?(&:active?), but unfortunately the view context is not set on each\nitem until _after_ the parent's before_render, etc methods have been called.\nThis means helper methods like current_page? will blow up with an error, since\n`helpers` is simply an alias for the view context (i.e. an instance of\nActionView::Base). Since we know the view context for the parent object must\nbe set before `before_render` is invoked, we can call helper methods here in\nthe parent and bypass the problem entirely. Maybe not the most OO approach,\nbut it works.",
            "parameters": [

            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::NavList::Divider",
        "description": "Separator with optional text rendered above groups or between individual items.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "NavList::Divider",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "NavListDivider",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/nav_list/divider.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/nav_list/divider/default/",
        "parameters": [
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "`:subtle`",
            "description": "Display a background color if scheme is `filled`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::NavList::Group",
        "description": "A logical grouping of navigation links with an optional heading.\n\nSee {{#link_to_component}}Primer::Alpha::NavList{{/link_to_component}} for usage examples.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": true,
        "component": "NavList::Group",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "NavListGroup",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/nav_list/group.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/nav_list/group/default/",
        "parameters": [
          {
            "name": "selected_item_id",
            "type": "Symbol",
            "default": "`nil`",
            "description": "The ID of the currently selected item. Used internally."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "show_more_item",
            "description": "A special \"show more\" list item that appears at the bottom of the group. Clicking\nthe item will fetch the next page of results from the URL passed in the `src` argument\nand append the resulting chunk of HTML to the group.",
            "parameters": [
              {
                "name": "src",
                "type": "String",
                "default": "N/A",
                "description": "The URL to query for additional pages of list items."
              },
              {
                "name": "pages",
                "type": "Integer",
                "default": "N/A",
                "description": "The total number of pages in the result set."
              },
              {
                "name": "component_klass",
                "type": "Class",
                "default": "N/A",
                "description": "A component class to use instead of the default `Primer::Alpha::NavList::Item` class."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::NavList::Item{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "items",
            "description": "Items.",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::NavList::Item{{/link_to_component}}."
              }
            ]
          },
          {
            "name": "heading",
            "description": "Heading text rendered above the list of items.",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::ActionList::Heading{{/link_to_component}}."
              }
            ]
          }
        ],
        "methods": [
          {
            "name": "expand!",
            "description": "Cause this group to show its list of sub items when rendered.\n:nocov:",
            "parameters": [

            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Navigation::Tab",
    "description": "This component is part of navigation components such as `Primer::Alpha::TabNav`\nand `Primer::Alpha::UnderlineNav` and should not be used by itself.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Navigation::Tab",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "NavigationTab",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/navigation/tab.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/navigation/tab/default/",
    "parameters": [
      {
        "name": "list",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab is an item in a `<ul>` list."
      },
      {
        "name": "selected",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab is selected or not."
      },
      {
        "name": "with_panel",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab has an associated panel."
      },
      {
        "name": "panel_id",
        "type": "String",
        "default": "`\"\"`",
        "description": "Only applies if `with_panel` is `true`. Unique id of panel."
      },
      {
        "name": "icon_classes",
        "type": "Boolean",
        "default": "`\"\"`",
        "description": "Classes that must always be applied to icons."
      },
      {
        "name": "wrapper_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} to be used in the `<li>` wrapper when the tab is an item in a list."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "panel",
        "description": "Panel controlled by the Tab. This will not render anything in the tab itself.\nIt will provide a accessor for the Tab's parent to call and render the panel\ncontent in the appropriate place.\nRefer to `UnderlineNav` and `TabNav` implementations for examples.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "icon",
        "description": "Icon to be rendered in the Tab left.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "text",
        "description": "The Tab's text.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Text{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "counter",
        "description": "Counter to be rendered in the Tab right.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "selected",
        "description": "Returns the value of attribute selected.",
        "parameters": [

        ]
      }
    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::OcticonSymbols",
    "description": "OcticonSymbols renders a symbol dictionary using a list of {{link_to_octicons}}.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "OcticonSymbols",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "OcticonSymbols",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/octicon_symbols.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/octicon_symbols/default/",
    "parameters": [
      {
        "name": "icons",
        "type": "Array<Hash>",
        "default": "`[]`",
        "description": "List of icons to render, in the format { symbol: :icon_name, size: :small }"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Overlay",
    "description": "Overlay components codify design patterns related to floating surfaces such\nas dialogs and menus. They are private components intended to be used by\nspecialized components, and mostly contain presentational logic and\nbehavior.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Overlay",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Overlay",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/overlay.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/overlay/default/",
    "parameters": [
      {
        "name": "id",
        "type": "String",
        "default": "`self.class.generate_id`",
        "description": "The id of the Overlay."
      },
      {
        "name": "title",
        "type": "String",
        "default": "N/A",
        "description": "Describes the content of the Overlay."
      },
      {
        "name": "subtitle",
        "type": "String",
        "default": "`nil`",
        "description": "Provides dditional context for the Overlay, also setting the `aria-describedby` attribute."
      },
      {
        "name": "popover",
        "type": "Symbol",
        "default": "`:auto`",
        "description": "The popover behaviour. One of `:auto` or `:manual`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:auto`",
        "description": "The size of the Overlay. One of `:auto`, `:large`, `:medium`, `:medium_portrait`, `:small`, or `:xlarge`."
      },
      {
        "name": "padding",
        "type": "Symbol",
        "default": "`:normal`",
        "description": "The padding given to the Overlay body. One of `:condensed`, `:none`, or `:normal`."
      },
      {
        "name": "anchor",
        "type": "String",
        "default": "`nil`",
        "description": "An ID of the element to anchor onto. Defaults to the `show_button`."
      },
      {
        "name": "anchor_align",
        "type": "Symbol",
        "default": "`:start`",
        "description": "The anchor alignment of the Overlay. One of `:center`, `:end`, or `:start`."
      },
      {
        "name": "anchor_side",
        "type": "Symbol",
        "default": "`:outside_bottom`",
        "description": "The side to anchor the Overlay to. One of `:inside_bottom`, `:inside_center`, `:inside_left`, `:inside_right`, `:inside_top`, `:outside_bottom`, `:outside_left`, `:outside_right`, or `:outside_top`."
      },
      {
        "name": "anchor_offset",
        "type": "Symbol",
        "default": "`:normal`",
        "description": "The anchor offset to give the Overlay. One of `:normal` or `:spacious`."
      },
      {
        "name": "allow_out_of_bounds",
        "type": "Boolean",
        "default": "`false`",
        "description": "Allow the Overlay to overflow its container."
      },
      {
        "name": "visually_hide_title",
        "type": "Boolean",
        "default": "`false`",
        "description": "If true will hide the heading title, while still making it available to Screen Readers."
      },
      {
        "name": "role",
        "type": "String",
        "default": "`nil`",
        "description": "The ARIA role. One of `nil`, `:dialog`, or `:menu`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "show_button",
        "description": "Optional button to open the Overlay.",
        "parameters": [
          {
            "name": "icon",
            "type": "String",
            "default": "N/A",
            "description": "Name of {{link_to_octicons}} to use instead of text. If provided, a {{#link_to_component}}Primer::Beta::IconButton{{/link_to_component}} will be rendered. Otherwise a {{#link_to_component}}Primer::Beta::Button{{/link_to_component}} will be rendered."
          },
          {
            "name": "controls",
            "type": "String",
            "default": "N/A",
            "description": "The ID of the menu this button controls. Used internally."
          },
          {
            "name": "button_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Beta::Button{{/link_to_component}} or {{#link_to_component}}Primer::Beta::IconButton{{/link_to_component}} depending on the presence of the `icon:` argument."
          }
        ]
      },
      {
        "name": "header",
        "description": "Header content.",
        "parameters": [
          {
            "name": "divider",
            "type": "Boolean",
            "default": "N/A",
            "description": "Show a divider between the header and body."
          },
          {
            "name": "size",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of One of `:auto`, `:large`, `:medium`, `:medium_portrait`, `:small`, or `:xlarge`.."
          },
          {
            "name": "visually_hide_title",
            "type": "Boolean",
            "default": "N/A",
            "description": "Visually hide the `title` while maintaining a label for assistive technologies."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "body",
        "description": "Required body content.",
        "parameters": [
          {
            "name": "padding",
            "type": "Symbol",
            "default": "N/A",
            "description": "The padding. One of `:condensed`, `:none`, or `:normal`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "footer",
        "description": "Footer content.",
        "parameters": [
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "N/A",
            "description": "Show a divider between the footer and body."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/overlay/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/overlay/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/overlay/menu_no_header",
        "name": "menu_no_header",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/overlay/middle_of_page",
        "name": "middle_of_page",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/overlay/middle_of_page_with_relative_container",
        "name": "middle_of_page_with_relative_container",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/overlay/dialog_with_header_footer",
        "name": "dialog_with_header_footer",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::Overlay::Header",
        "description": "A `Overlay::Header` is a compositional component, used to render the\nHeader of an overlay. See {{#link_to_component}}Primer::Alpha::Overlay{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Overlay::Header",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "OverlayHeader",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/overlay/header.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/overlay/header/default/",
        "parameters": [
          {
            "name": "title",
            "type": "String",
            "default": "N/A",
            "description": "Describes the content of the Overlay."
          },
          {
            "name": "subtitle",
            "type": "String",
            "default": "`nil`",
            "description": "Provides additional context for the Overlay, also setting the `aria-describedby` attribute."
          },
          {
            "name": "overlay_id",
            "type": "String",
            "default": "`nil`",
            "description": "Provides the id of the overlay element so the close button can close it"
          },
          {
            "name": "size",
            "type": "Symbol",
            "default": "`:medium`",
            "description": "The size of the Header. One of `:large` or `:medium`."
          },
          {
            "name": "divider",
            "type": "Boolean",
            "default": "`false`",
            "description": "Show a divider between the header and body."
          },
          {
            "name": "visually_hide_title",
            "type": "Boolean",
            "default": "`false`",
            "description": "Visually hide the `title` while maintaining a label for assistive technologies."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Overlay::Footer",
        "description": "A `Overlay::Footer` is a compositional component, used to render the\nFooter of an overlay. See {{#link_to_component}}Primer::Alpha::Overlay{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Overlay::Footer",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "OverlayFooter",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/overlay/footer.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/overlay/footer/default/",
        "parameters": [
          {
            "name": "show_divider",
            "type": "Boolean",
            "default": "`false`",
            "description": "Show a divider between the footer and body."
          },
          {
            "name": "align_content",
            "type": "Symbol",
            "default": "`DEFAULT_ALIGN_CONTENT`",
            "description": "The alginment of contents. One of `:center`, `:end`, or `:start`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      },
      {
        "fully_qualified_name": "Primer::Alpha::Overlay::Body",
        "description": "A `Overlay::Body` is a compositional component, used to render the\nBody of an overlay. See {{#link_to_component}}Primer::Alpha::Overlay{{/link_to_component}}.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Overlay::Body",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "OverlayBody",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/overlay/body.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/overlay/body/default/",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::RadioButton",
    "description": "Radio buttons represent one of a set of options and are rendered as `<input type=\"radio\">` in HTML.\n**NOTE**: You probably want to use the {{#link_to_component}}Primer::Alpha::RadioButtonGroup{{/link_to_component}}\ncomponent instead, as it allows rendering a group of options.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "RadioButton",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "RadioButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/radio_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/radio_button/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/radio_button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button/checked",
        "name": "checked",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::RadioButtonGroup",
    "description": "A group of mutually exclusive radio buttons.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "RadioButtonGroup",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "RadioButtonGroup",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/radio_button_group.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/radio_button_group/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the group."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the group."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      }
    ],
    "slots": [

    ],
    "methods": [
      {
        "name": "radio_button",
        "description": "Adds a radio button to the group.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "The arguments accepted by {{#link_to_component}}Primer::Alpha::RadioButton{{/link_to_component}}."
          },
          {
            "name": "block",
            "type": "Proc",
            "default": "N/A",
            "description": "The block accepted by {{#link_to_component}}Primer::Alpha::RadioButton{{/link_to_component}}."
          }
        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/radio_button_group/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button_group/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button_group/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button_group/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button_group/full_width",
        "name": "full_width",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/radio_button_group/disabled",
        "name": "disabled",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::SegmentedControl",
    "description": "Use a segmented control to let users select an option from a short list and immediately apply the selection",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "SegmentedControl",
    "status": "alpha",
    "a11y_reviewed": true,
    "short_name": "SegmentedControl",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/segmented_control.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/segmented_control/default/",
    "parameters": [
      {
        "name": "hide_labels",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to hide the labels and only show the icons"
      },
      {
        "name": "full_width",
        "type": "Boolean",
        "default": "`false`",
        "description": "If the component should be full width"
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "items",
        "description": "Use to render an item in the segmented control",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/segmented_control/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/full_width_small",
        "name": "full_width_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/full_width_medium",
        "name": "full_width_medium",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/full_width_large",
        "name": "full_width_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icons_and_text_small",
        "name": "icons_and_text_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icons_and_text_medium",
        "name": "icons_and_text_medium",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icons_and_text_large",
        "name": "icons_and_text_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_small",
        "name": "icon_only_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_medium",
        "name": "icon_only_medium",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_large",
        "name": "icon_only_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_full_width_small",
        "name": "icon_only_full_width_small",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_full_width_medium",
        "name": "icon_only_full_width_medium",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/icon_only_full_width_large",
        "name": "icon_only_full_width_large",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/with_link_as_tag",
        "name": "with_link_as_tag",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/with_subhead_actions",
        "name": "with_subhead_actions",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/segmented_control/with_label_and_caption",
        "name": "with_label_and_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Alpha::SegmentedControl::Item",
        "description": "SegmentedControl::Item is a private component that is only used by SegmentedControl\nIt wraps the Button and IconButton components to provide the correct styles",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "SegmentedControl::Item",
        "status": "alpha",
        "a11y_reviewed": true,
        "short_name": "SegmentedControlItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/segmented_control/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/segmented_control/item/default/",
        "parameters": [
          {
            "name": "label",
            "type": "String",
            "default": "N/A",
            "description": "The label to use"
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether the item is selected"
          },
          {
            "name": "icon",
            "type": "Symbol",
            "default": "`nil`",
            "description": "The icon to use"
          },
          {
            "name": "hide_labels",
            "type": "Symbol",
            "default": "`false`",
            "description": "Whether to only show the icon"
          }
        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Select",
    "description": "Select lists are single-line text inputs rendered as `<select>` tags in HTML.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "Select",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Select",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/select.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/select/default/",
    "parameters": [
      {
        "name": "size",
        "type": "Symbol",
        "default": "N/A",
        "description": "The size of the field. One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      },
      {
        "name": "multiple",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to true, the selection will allow multiple choices."
      },
      {
        "name": "include_blank",
        "type": "Boolean, String",
        "default": "N/A",
        "description": "If set to true, an empty option will be created. If set to a string, the string will be used as the option's content and the value will be empty."
      },
      {
        "name": "prompt",
        "type": "String",
        "default": "N/A",
        "description": "Create a prompt option with blank value and the text asking user to select something."
      }
    ],
    "slots": [

    ],
    "methods": [
      {
        "name": "option",
        "description": "Adds an option to the list.",
        "parameters": [
          {
            "name": "label",
            "type": "String",
            "default": "N/A",
            "description": "The user-facing label for the option."
          },
          {
            "name": "value",
            "type": "String",
            "default": "N/A",
            "description": "The value sent to the server on form submission."
          }
        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/alpha/select/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/invalid",
        "name": "invalid",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/select/with_validation_message",
        "name": "with_validation_message",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::SubmitButton",
    "description": "A submit button input rendered using the HTML `<button type=\"submit\">` tag.\n\nThis component wraps the Primer button component and supports the same slots and arguments.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "SubmitButton",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "SubmitButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/submit_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/submit_button/default/",
    "parameters": [
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::TabContainer",
    "description": "Use `TabContainer` to create tabbed content with keyboard support. This component does not add any styles.\nIt only provides the tab functionality. If you want styled Tabs you can look at {{#link_to_component}}Primer::Alpha::TabNav{{/link_to_component}}.\n\nThis component requires javascript.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "TabContainer",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "TabContainer",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/tab_container.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/tab_container/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::TabNav",
    "description": "Use `TabNav` to style navigation with a tab-based selected state, typically used for navigation placed at the top of the page.\nFor panel navigation, use {{#link_to_component}}Primer::Alpha::TabPanels{{/link_to_component}} instead.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "TabNav",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "TabNav",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/tab_nav.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/tab_nav/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:nav`",
        "description": "One of `:div` or `:nav`."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Sets an `aria-label` that helps assistive technology users understand the purpose of the links, and distinguish it from similar elements."
      },
      {
        "name": "body_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the body wrapper."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "tabs",
        "description": "Tabs to be rendered. For more information, refer to {{#link_to_component}}Primer::Alpha::Navigation::Tab{{/link_to_component}}.",
        "parameters": [
          {
            "name": "selected",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether the tab is selected."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "extra",
        "description": "Renders extra content to the `TabNav`. This will be rendered after the tabs.",
        "parameters": [
          {
            "name": "align",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:left` or `:right`."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/tab_nav/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tab_nav/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tab_nav/with_icons_and_counters",
        "name": "with_icons_and_counters",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tab_nav/with_extra",
        "name": "with_extra",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::TabPanels",
    "description": "Use `TabPanels` for tabs with panel navigation.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "TabPanels",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "TabPanels",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/tab_panels.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/tab_panels/default/",
    "parameters": [
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Sets an `aria-label` that helps assistive technology users understand the purpose of the tabs."
      },
      {
        "name": "align",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:left` or `:right`. - Defaults to left"
      },
      {
        "name": "body_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the body wrapper."
      },
      {
        "name": "wrapper_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the `TabContainer` wrapper."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "tabs",
        "description": "Tabs to be rendered. For more information, refer to {{#link_to_component}}Primer::Alpha::Navigation::Tab{{/link_to_component}}.",
        "parameters": [
          {
            "name": "id",
            "type": "String",
            "default": "N/A",
            "description": "Unique ID of tab."
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether the tab is selected."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "extra",
        "description": "Renders extra content to the `TabPanels`. This will be rendered after the tabs.",
        "parameters": [
          {
            "name": "align",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:left` or `:right`."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/tab_panels/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tab_panels/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tab_panels/with_extra",
        "name": "with_extra",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::TextArea",
    "description": "Text areas are multi-line text inputs rendered using the `<textarea>` tag in HTML.",
    "is_form_component": true,
    "is_published": false,
    "requires_js": false,
    "component": "TextArea",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "TextArea",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/text_area.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/text_area/default/",
    "parameters": [
      {
        "name": "full_width",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the field will take up all the horizontal space allowed by its container."
      },
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/text_area/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/invalid",
        "name": "invalid",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_area/with_validation_message",
        "name": "with_validation_message",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::TextField",
    "description": "Text fields are single-line text inputs rendered as `<input type=\"text\">` in HTML.",
    "is_form_component": true,
    "is_published": true,
    "requires_js": false,
    "component": "TextField",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "TextField",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/text_field.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/text_field/default/",
    "parameters": [
      {
        "name": "size",
        "type": "Symbol",
        "default": "N/A",
        "description": "The size of the field. One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "full_width",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the field will take up all the horizontal space allowed by its container."
      },
      {
        "name": "name",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML name attribute."
      },
      {
        "name": "id",
        "type": "String",
        "default": "N/A",
        "description": "Value for the HTML id attribute."
      },
      {
        "name": "class",
        "type": "String",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Exists for compatibility with Rails form builders."
      },
      {
        "name": "classes",
        "type": "Array",
        "default": "N/A",
        "description": "CSS classes to include in the input's HTML `class` attribute. Combined with the `:class` argument. The list may contain strings, hashes, or `nil` values, and is automatically cleaned up by Primer's [`class_name` helper](https://github.com/primer/view_components/blob/c9cb95c98fee3e2e27f4a10683f555e22285e7f1/app/lib/primer/class_name_helper.rb) (`nils`, falsy entries, and blank strings are ignored)."
      },
      {
        "name": "caption",
        "type": "String",
        "default": "N/A",
        "description": "A string describing the field and what sorts of input it expects. Displayed below the input."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Label text displayed above the input."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, hides the label. Although the label will be hidden visually, it will still be visible to screen readers."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, the input will not accept keyboard or mouse input."
      },
      {
        "name": "hidden",
        "type": "Boolean",
        "default": "N/A",
        "description": "When set to `true`, visually hides the field."
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "N/A",
        "description": "If set to `true`, the input will be rendered with a red border. Implied if `validation_message` is truthy. This option is set to `true` automatically if the model object associated with the form reports that the input is invalid via Rails validations. It is provided for cases where the form does not have an associated model. If the input is invalid as determined by Rails validations, setting `invalid` to `false` will have no effect."
      },
      {
        "name": "validation_message",
        "type": "String",
        "default": "N/A",
        "description": "A string displayed between the caption and the input indicating the input's contents are invalid. This option is, by default, set to the first Rails validation message for the input (assuming the form is associated with a model object). Use `validation_message` to override the default or to provide a validation message in case there is no associated model object."
      },
      {
        "name": "label_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "Attributes that will be passed to Rails' `builder.label` method. These can be HTML attributes or any of the other label options Rails supports. They will appear as HTML attributes on the `<label>` tag."
      },
      {
        "name": "scope_name_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field name. For example, if the field name is `my_field`, Rails will normally emit an HTML name attribute of `model[my_field]`. Setting `scope_name_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "scope_id_to_model",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `true`. When set to `false`, prevents the model name from prefixing the field ID. For example, if the field name is `my_field`, Rails will normally emit an HTML ID attribute of `model_my_field`. Setting `scope_id_to_model` to `false` will cause Rails to emit `my_field` instead."
      },
      {
        "name": "required",
        "type": "Boolean",
        "default": "N/A",
        "description": "Default `false`. When set to `true`, causes an asterisk (*) to appear next to the field's label indicating it is a required field. Note that this option explicitly does _not_ add a `required` HTML attribute. Doing so would enable native browser validations, which are inaccessible and inconsistent with the Primer design system."
      },
      {
        "name": "aria",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent Aria attributes and their values. Eg. `aria: { current: true }` becomes `aria-current=\"true\"`."
      },
      {
        "name": "data",
        "type": "Hash",
        "default": "N/A",
        "description": "Key/value pairs that represent data attributes and their values. Eg. `data: { foo: \"bar\" }` becomes `data-foo=\"bar\"`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "A hash of attributes passed to the underlying Rails builder methods. These options may mean something special depending on the type of input, otherwise they are emitted as HTML attributes. See the [Rails documentation](https://guides.rubyonrails.org/form_helpers.html) for more information. In addition, the usual Primer utility arguments are accepted in system arguments. For example, passing `mt: 2` will add the `mt-2` class to the input. See the Primer system arguments docs for details."
      },
      {
        "name": "placeholder",
        "type": "String",
        "default": "N/A",
        "description": "Placeholder text."
      },
      {
        "name": "inset",
        "type": "Boolean",
        "default": "N/A",
        "description": "If `true`, renders the input in a visually inset state."
      },
      {
        "name": "monospace",
        "type": "Boolean",
        "default": "N/A",
        "description": "If `true`, uses a monospace font for the input field."
      },
      {
        "name": "auto_check_src",
        "type": "String",
        "default": "N/A",
        "description": "When provided, makes a request to the given URL whenever the contents of the text field changes. If the server responds with a non-2xx status code, the response body is used as the validation message."
      },
      {
        "name": "leading_visual",
        "type": "Hash",
        "default": "N/A",
        "description": "Renders a leading visual icon before the text field's cursor. The hash will be passed to Primer's {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}} component."
      },
      {
        "name": "show_clear_button",
        "type": "Boolean",
        "default": "N/A",
        "description": "Whether or not to include a clear button inside the input that clears the input's contents when clicked."
      },
      {
        "name": "clear_button_id",
        "type": "String",
        "default": "N/A",
        "description": "The HTML id attribute of the clear button."
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/text_field/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/size_small",
        "name": "size_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/size_medium",
        "name": "size_medium",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/size_large",
        "name": "size_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_caption",
        "name": "with_caption",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/show_clear_button",
        "name": "show_clear_button",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/invalid",
        "name": "invalid",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_placeholder",
        "name": "with_placeholder",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/inset",
        "name": "inset",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/monospace",
        "name": "monospace",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_leading_visual",
        "name": "with_leading_visual",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_validation_message",
        "name": "with_validation_message",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_auto_check_ok",
        "name": "with_auto_check_ok",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_auto_check_error",
        "name": "with_auto_check_error",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/text_field/with_data_target",
        "name": "with_data_target",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::ToggleSwitch",
    "description": "The ToggleSwitch component is a button that toggles between two boolean states. It is meant to be used for\nsettings that should cause an immediate update. If configured with a \"src\" attribute, the component will\nmake a POST request containing data of the form \"value: 0 | 1\".",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "ToggleSwitch",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ToggleSwitch",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/toggle_switch.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/toggle_switch/default/",
    "parameters": [
      {
        "name": "src",
        "type": "String",
        "default": "`nil`",
        "description": "The URL to POST to when the toggle switch is toggled. If `nil`, the toggle switch will not make any requests."
      },
      {
        "name": "csrf_token",
        "type": "String",
        "default": "`nil`",
        "description": "A CSRF token that will be sent to the server as \"authenticity_token\" when the toggle switch is toggled. Unused if `src` is `nil`."
      },
      {
        "name": "checked",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the toggle switch is on or off."
      },
      {
        "name": "enabled",
        "type": "Boolean",
        "default": "`true`",
        "description": "Whether or not the toggle switch responds to user input."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "What size toggle switch to render. One of `:end` or `:start`."
      },
      {
        "name": "status_label_position",
        "type": "Symbol",
        "default": "`:start`",
        "description": "Which side of the toggle switch to render the status label. One of `:medium` or `:small`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/toggle_switch/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/checked",
        "name": "checked",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/disabled",
        "name": "disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/checked_disabled",
        "name": "checked_disabled",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/small",
        "name": "small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/with_status_label_position_end",
        "name": "with_status_label_position_end",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/with_a_bad_src",
        "name": "with_a_bad_src",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/with_no_src",
        "name": "with_no_src",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/with_csrf_token",
        "name": "with_csrf_token",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/toggle_switch/with_bad_csrf_token",
        "name": "with_bad_csrf_token",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region",
            "button-name"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::Tooltip",
    "description": "`Tooltip` only appears on mouse hover or keyboard focus and contain a label or description text. Use tooltips sparingly and as a last resort.\nUse tooltips as a last resort. Please consider [Tooltips alternatives](https://primer.style/design/accessibility/tooltip-alternatives).\n\nWhen using a tooltip, follow the provided guidelines to avoid accessibility issues:\n- Tooltips should contain only **non-essential text**. Tooltips can easily be missed and are not accessible on touch devices so never use tooltips to convey critical information.\n- `Tooltip` should be rendered through the API of {{#link_to_component}}Primer::ButtonComponent{{/link_to_component}}, {{#link_to_component}}Primer::Beta::Link{{/link_to_component}}, or {{#link_to_component}}Primer::IconButton{{/link_to_component}}. Avoid using `Tooltip` a standalone component unless absolutely necessary (and **only** on interactive elements).\n- Tooltip text must be brief and concise even when used to display a description.\n- Tooltips can only hold string content.\n- Tooltips are not allowed on `disabled` elements because such elements are not keyboard-accessible. If you must set a tooltip on a disabled element, use `aria-disabled=\"true\"` instead and programmatically disable the element.\n- **Never set tooltips on static, non-interactive elements** like `span` or `div`. Tooltips should only be used on interactive elements like buttons or links to avoid excluding keyboard-only\nand screen reader users. Use of tooltips through {{#link_to_component}}Primer::Beta::Button{{/link_to_component}}, {{#link_to_component}}Primer::Beta::Link{{/link_to_component}}, or {{#link_to_component}}Primer::Beta::IconButton{{/link_to_component}} will guarantee this.\n- If you must use `Tooltip` as a standalone component, place it immediately after the trigger element in the DOM. This allows screen reader users to navigate to the tooltip and copy its contents if desired.\n  content.\n\nSemantically, a tooltip will either act an accessible name or an accessible description for the element that it is associated with resulting in either a\n`aria-labelledby` or an `aria-describedby` association. The `type` drastically changes semantics and screen reader behavior so follow these guidelines carefully:\n- When there is already a visible label text on the trigger element, the tooltip is likely intended be supplementary, so set `type: :description`.\nThe majority of tooltips will fall under this category.\n- When there is no visible text on the trigger element and the tooltip content is appropriate as a label for the element, set `type: :label`.\n`label` type is usually only appropriate for an icon-only control.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Tooltip",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "Tooltip",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/tooltip.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/tooltip/default/",
    "parameters": [
      {
        "name": "for_id",
        "type": "String",
        "default": "N/A",
        "description": "The ID of the element that the tooltip should be attached to."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:description` or `:label`."
      },
      {
        "name": "direction",
        "type": "Symbol",
        "default": "`:s`",
        "description": "One of `:e`, `:n`, `:ne`, `:nw`, `:s`, `:se`, `:sw`, or `:w`."
      },
      {
        "name": "text",
        "type": "String",
        "default": "N/A",
        "description": "The text content of the tooltip. This should be brief and no longer than a sentence."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/tooltip/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/label_tooltip_on_button_with_existing_labelledby",
        "name": "label_tooltip_on_button_with_existing_labelledby",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/description_tooltip_on_button_with_existing_describedby",
        "name": "description_tooltip_on_button_with_existing_describedby",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/with_right_most_position",
        "name": "with_right_most_position",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/with_multiple_on_a_page",
        "name": "with_multiple_on_a_page",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/tooltip_with_button",
        "name": "tooltip_with_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/tooltip_with_link",
        "name": "tooltip_with_link",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/tooltip_with_icon_button",
        "name": "tooltip_with_icon_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/tooltip/tooltip_inside_primer_overlay",
        "name": "tooltip_inside_primer_overlay",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::UnderlineNav",
    "description": "Use `UnderlineNav` to style navigation links with a minimal\nunderlined selected state, typically placed at the top\nof the page.\n\nFor panel navigation, use {{#link_to_component}}Primer::Alpha::UnderlinePanels{{/link_to_component}} instead.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "UnderlineNav",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "UnderlineNav",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/underline_nav.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/underline_nav/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:nav`",
        "description": "One of `:div` or `:nav`."
      },
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Sets an `aria-label` that helps assistive technology users understand the purpose of the links, and distinguish it from similar elements."
      },
      {
        "name": "align",
        "type": "Symbol",
        "default": "`:left`",
        "description": "One of `:left` or `:right`. - Defaults to left"
      },
      {
        "name": "body_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the body wrapper."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "tabs",
        "description": "Use the tabs to list page links.",
        "parameters": [
          {
            "name": "selected",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether the tab is selected."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "actions",
        "description": "Use actions for a call to action.",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "`:div`",
            "description": "One of `:div` or `:span`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/underline_nav/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/underline_nav/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/underline_nav/with_icons_and_counters",
        "name": "with_icons_and_counters",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Alpha::UnderlinePanels",
    "description": "Use `UnderlinePanels` to style tabs with an associated panel and an underlined selected state.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "UnderlinePanels",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "UnderlinePanels",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/alpha/underline_panels.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/alpha/underline_panels/default/",
    "parameters": [
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "Sets an `aria-label` that helps assistive technology users understand the purpose of the tabs."
      },
      {
        "name": "align",
        "type": "Symbol",
        "default": "`:left`",
        "description": "One of `:left` or `:right`. - Defaults to left"
      },
      {
        "name": "body_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the body wrapper."
      },
      {
        "name": "wrapper_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} for the `TabContainer` wrapper."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "tabs",
        "description": "Use to render a button and an associated panel slot. See the example below or refer to {{#link_to_component}}Primer::Alpha::Navigation::Tab{{/link_to_component}}.",
        "parameters": [
          {
            "name": "id",
            "type": "String",
            "default": "N/A",
            "description": "Unique ID of tab."
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether the tab is selected."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "actions",
        "description": "Use actions for a call to action.",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "`:div`",
            "description": "One of `:div` or `:span`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/alpha/underline_panels/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/alpha/underline_panels/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::AutoComplete",
    "description": "Use `AutoComplete` to provide a user with a list of selectable suggestions that appear when they type into the\ninput field. This list is populated by server search results.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "AutoComplete",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "AutoComplete",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/auto_complete.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/auto_complete/default/",
    "parameters": [
      {
        "name": "label_text",
        "type": "String",
        "default": "N/A",
        "description": "The label of the input."
      },
      {
        "name": "src",
        "type": "String",
        "default": "N/A",
        "description": "The route to query."
      },
      {
        "name": "input_id",
        "type": "String",
        "default": "N/A",
        "description": "Id of the input element."
      },
      {
        "name": "input_name",
        "type": "String",
        "default": "`nil`",
        "description": "Optional name of the input element, defaults to `input_id` when not set."
      },
      {
        "name": "list_id",
        "type": "String",
        "default": "N/A",
        "description": "Id of the list element."
      },
      {
        "name": "visually_hide_label",
        "type": "Boolean",
        "default": "`false`",
        "description": "Controls if the label is visible. If `true`, screen reader only text will be added."
      },
      {
        "name": "show_clear_button",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds optional clear button."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      },
      {
        "name": "size",
        "type": "Hash",
        "default": "`:medium`",
        "description": "Input size can be small, medium (default), or large"
      },
      {
        "name": "full_width",
        "type": "Boolean",
        "default": "`false`",
        "description": "Input can be full-width or fit to content"
      },
      {
        "name": "width",
        "type": "String",
        "default": "`:auto`",
        "description": "Optional parameter to set max width of results list. One of `:auto`, `:large`, `:medium`, `:small`, `:xlarge`, or `:xxlarge`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Disabled input"
      },
      {
        "name": "invalid",
        "type": "Boolean",
        "default": "`false`",
        "description": "Invalid input"
      },
      {
        "name": "placeholder",
        "type": "String",
        "default": "`nil`",
        "description": "The placeholder text displayed within the input"
      },
      {
        "name": "inset",
        "type": "Boolean",
        "default": "`false`",
        "description": "subtle input background color"
      },
      {
        "name": "monospace",
        "type": "Boolean",
        "default": "`false`",
        "description": "monospace input font family"
      }
    ],
    "slots": [
      {
        "name": "results",
        "description": "Customizable results list.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "leading_visual",
        "description": "Leading visual.\n\n- `leading_visual_icon` for a {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "input",
        "description": "Customizable input used to search for results.\nIt is preferred to use this slot sparingly - it will be created by default if not explicity added.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/auto_complete/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/with_submit_button",
        "name": "with_submit_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/leading_visual",
        "name": "leading_visual",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/trailing_action",
        "name": "trailing_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/visually_hide_label",
        "name": "visually_hide_label",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/small",
        "name": "small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/medium",
        "name": "medium",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/large",
        "name": "large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/leading_visual_in_results",
        "name": "leading_visual_in_results",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/trailing_visual_in_results",
        "name": "trailing_visual_in_results",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/with_non_visible_label",
        "name": "with_non_visible_label",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/with_icon",
        "name": "with_icon",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/show_clear_button",
        "name": "show_clear_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/size_small",
        "name": "size_small",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/monospace",
        "name": "monospace",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/auto_complete/inset",
        "name": "inset",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Beta::AutoComplete::Item",
        "description": "Use `AutoCompleteItem` to list results of an auto-completed search.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "AutoComplete::Item",
        "status": "beta",
        "a11y_reviewed": false,
        "short_name": "AutoCompleteItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/auto_complete/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/auto_complete/item/default/",
        "parameters": [
          {
            "name": "value",
            "type": "String",
            "default": "N/A",
            "description": "Value of the item."
          },
          {
            "name": "selected",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether the item is selected."
          },
          {
            "name": "disabled",
            "type": "Boolean",
            "default": "`false`",
            "description": "Whether the item is disabled."
          },
          {
            "name": "description_variant",
            "type": "Hash",
            "default": "`:block`",
            "description": "Changes the description style. Allowed values are :inline, :block"
          },
          {
            "name": "description",
            "type": "String",
            "default": "N/A",
            "description": "Display description text below label"
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "leading_visual",
            "description": "The leading visual rendered before the link.",
            "parameters": [
              {
                "name": "kwargs",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Beta::Avatar{{/link_to_component}} or {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}"
              }
            ]
          },
          {
            "name": "trailing_visual",
            "description": "The trailing visual rendered after the link.",
            "parameters": [
              {
                "name": "kwargs",
                "type": "Hash",
                "default": "N/A",
                "description": "The arguments accepted by {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}, {{#link_to_component}}Primer::Beta::Label{{/link_to_component}}, or {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}"
              }
            ]
          },
          {
            "name": "description",
            "description": "Optional description",
            "parameters": [
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "{{link_to_system_arguments_docs}}"
              }
            ]
          }
        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Avatar",
    "description": "`Avatar` can be used to represent users and organizations on GitHub.\n\n- Use the default circle avatar for users, and the square shape\nfor organizations or any other non-human avatars.\n- By default, `Avatar` will render a static `<img>`. To have `Avatar` function as a link, set the `href` which will wrap the `<img>` in a `<a>`.\n- Set `size` to update the height and width of the `Avatar` in pixels.\n- To stack multiple avatars together, use {{#link_to_component}}Primer::Beta::AvatarStack{{/link_to_component}}.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Avatar",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Avatar",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/avatar.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/avatar/default/",
    "parameters": [
      {
        "name": "src",
        "type": "String",
        "default": "N/A",
        "description": "The source url of the avatar image."
      },
      {
        "name": "alt",
        "type": "String",
        "default": "N/A",
        "description": "Passed through to alt on img tag."
      },
      {
        "name": "size",
        "type": "Integer",
        "default": "`20`",
        "description": "One of `16`, `20`, `24`, `32`, `40`, `48`, or `80`."
      },
      {
        "name": "shape",
        "type": "Symbol",
        "default": "`:circle`",
        "description": "Shape of the avatar. One of `:circle` or `:square`."
      },
      {
        "name": "href",
        "type": "String",
        "default": "`nil`",
        "description": "The URL to link to. If used, component will be wrapped by an `<a>` tag."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/avatar/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/as_link",
        "name": "as_link",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_16",
        "name": "size_16",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_20",
        "name": "size_20",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_24",
        "name": "size_24",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_32",
        "name": "size_32",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_40",
        "name": "size_40",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_48",
        "name": "size_48",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/size_80",
        "name": "size_80",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/shape_circle",
        "name": "shape_circle",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar/shape_square",
        "name": "shape_square",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::AvatarStack",
    "description": "Use `AvatarStack` to stack multiple avatars together.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "AvatarStack",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "AvatarStack",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/avatar_stack.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/avatar_stack/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:div`",
        "description": "One of `:div` or `:span`."
      },
      {
        "name": "align",
        "type": "Symbol",
        "default": "`:left`",
        "description": "One of `:left` or `:right`."
      },
      {
        "name": "tooltipped",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to add a tooltip to the stack or not."
      },
      {
        "name": "body_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "Parameters to add to the Body. If `tooltipped` is set, has the same arguments as {{#link_to_component}}Primer::Tooltip{{/link_to_component}}. The default tag is `:div` but can be changed using `tag:` to one of `:div` or `:span`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "avatars",
        "description": "Required list of stacked avatars.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Avatar{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/avatar_stack/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/avatar_1",
        "name": "avatar_1",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/avatar_2",
        "name": "avatar_2",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/avatar_3",
        "name": "avatar_3",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/avatar_4",
        "name": "avatar_4",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/avatar_5",
        "name": "avatar_5",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/align_right",
        "name": "align_right",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/avatar_stack/with_tooltip",
        "name": "with_tooltip",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::BaseButton",
    "description": "Use `BaseButton` to render an unstyled `<button>` tag that can be customized.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "BaseButton",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "BaseButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/base_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/base_button/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:a`, `:button`, or `:summary`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:button`, `:reset`, or `:submit`."
      },
      {
        "name": "block",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether button is full-width with `display: block`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled. If true, this option forces `tag:` to `:button`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [
      {
        "name": "disabled",
        "description": "Returns the value of attribute disabled.",
        "parameters": [

        ]
      },
      {
        "name": "disabled?",
        "description": "Returns the value of attribute disabled.",
        "parameters": [

        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/beta/base_button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/base_button/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/base_button/disabled",
        "name": "disabled",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Blankslate",
    "description": "Use `Blankslate` when there is a lack of content within a page or section. Use as placeholder to tell users why something isn't there.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Blankslate",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Blankslate",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/blankslate.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/blankslate/default/",
    "parameters": [
      {
        "name": "narrow",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds a maximum width of `485px` to the Blankslate."
      },
      {
        "name": "spacious",
        "type": "Boolean",
        "default": "`false`",
        "description": "Increases the padding from `32px` to `80px 40px`."
      },
      {
        "name": "border",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds a border around the Blankslate."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "visual",
        "description": "Optional visual.\n\nUse:\n\n- `visual_icon` for an {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.\n- `visual_image` for an {{#link_to_component}}Primer::Alpha::Image{{/link_to_component}}.\n- `visual_spinner` for a {{#link_to_component}}Primer::Beta::Spinner{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "heading",
        "description": "Required heading.",
        "parameters": [
          {
            "name": "tag",
            "type": "String",
            "default": "N/A",
            "description": "One of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "description",
        "description": "Optional description.\n\n- The description should always be informative and actionable.\n- Don't use phrases like \"You can\".",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "primary_action",
        "description": "Optional primary action\n\nThe `primary_action` slot renders an anchor link which is visually styled as a button to provide more emphasis to the\nBlankslate's primary action.",
        "parameters": [
          {
            "name": "href",
            "type": "String",
            "default": "N/A",
            "description": "URL to be used for the primary action."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "secondary_action",
        "description": "Optional secondary action\n\nThe `secondary_action` slot renders a normal anchor link, which can be used to redirect the user to additional information\n(e.g. Help documentation).",
        "parameters": [
          {
            "name": "href",
            "type": "String",
            "default": "N/A",
            "description": "URL to be used for the secondary action."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/blankslate/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/option_narrow",
        "name": "option_narrow",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/option_spacious",
        "name": "option_spacious",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/option_border",
        "name": "option_border",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/with_icon",
        "name": "with_icon",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/with_image",
        "name": "with_image",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/loading",
        "name": "loading",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/description",
        "name": "description",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/primary_action",
        "name": "primary_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/secondary_action",
        "name": "secondary_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/blankslate/full",
        "name": "full",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::BorderBox",
    "description": "`BorderBox` is a Box component with a border.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "BorderBox",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "BorderBox",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/border_box.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/border_box/default/",
    "parameters": [
      {
        "name": "padding",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:condensed`, `:default`, or `:spacious`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "header",
        "description": "Optional Header.\n\nWhen using header.with_title, the recommended tag is a heading tag, such as h1, h2, h3, etc.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "body",
        "description": "Optional Body.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "footer",
        "description": "Optional Footer.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "rows",
        "description": "Use Rows to add rows with borders and maintain the same padding.",
        "parameters": [
          {
            "name": "scheme",
            "type": "Symbol",
            "default": "N/A",
            "description": "Color scheme. One of `:default`, `:info`, `:neutral`, or `:warning`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/border_box/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/header_with_title",
        "name": "header_with_title",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/row_colors",
        "name": "row_colors",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/padding_default",
        "name": "padding_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/padding_condensed",
        "name": "padding_condensed",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/border_box/padding_spacious",
        "name": "padding_spacious",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Beta::BorderBox::Header",
        "description": "`BorderBox::Header` is used inside `BorderBox` to render its header slot.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "BorderBox::Header",
        "status": "beta",
        "a11y_reviewed": false,
        "short_name": "BorderBoxHeader",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/border_box/header.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/border_box/header/default/",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ],
        "slots": [
          {
            "name": "title",
            "description": "Optional Title.",
            "parameters": [
              {
                "name": "tag",
                "type": "Symbol",
                "default": "N/A",
                "description": "One of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
              },
              {
                "name": "system_arguments",
                "type": "Hash",
                "default": "N/A",
                "description": "{{link_to_system_arguments_docs}}"
              }
            ]
          }
        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Breadcrumbs",
    "description": "Use `Breadcrumbs` to display page hierarchy.\n\n#### Known issues\n\n##### Responsiveness\n\n`Breadcrumbs` is not optimized for responsive designs.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Breadcrumbs",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Breadcrumbs",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/breadcrumbs.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/breadcrumbs/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "items",
        "description": null,
        "parameters": [
          {
            "name": "href",
            "type": "String",
            "default": "N/A",
            "description": "The URL to link to."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/breadcrumbs/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/breadcrumbs/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Beta::Breadcrumbs::Item",
        "description": "This component is part of `Primer::Beta::Breadcrumbs` and should not be\nused as a standalone component.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Breadcrumbs::Item",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "BreadcrumbsItem",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/breadcrumbs/item.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/breadcrumbs/item/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [
          {
            "name": "selected",
            "description": "Returns the value of attribute selected.",
            "parameters": [

            ]
          },
          {
            "name": "selected=",
            "description": "Sets the attribute selected",
            "parameters": [
              {
                "name": "value",
                "type": "",
                "default": "N/A",
                "description": "the value to set the attribute selected to."
              }
            ]
          },
          {
            "name": "href",
            "description": "Returns the value of attribute href.",
            "parameters": [

            ]
          },
          {
            "name": "href=",
            "description": "Sets the attribute href",
            "parameters": [
              {
                "name": "value",
                "type": "",
                "default": "N/A",
                "description": "the value to set the attribute href to."
              }
            ]
          }
        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Button",
    "description": "Use `Button` for actions (e.g. in forms). Use links for destinations, or moving from one page to another.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Button",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Button",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/button/default/",
    "parameters": [
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger`, `:default`, `:invisible`, `:link`, `:primary`, or `:secondary`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "block",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether button is full-width with `display: block`."
      },
      {
        "name": "align_content",
        "type": "Symbol",
        "default": "`:center`",
        "description": "One of `:center` or `:start`."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:a`, `:button`, or `:summary`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:button`, `:reset`, or `:submit`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled. If true, this option forces `tag:` to `:button`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "leading_visual",
        "description": "Leading visuals appear to the left of the button text.\n\nUse:\n\n- `leading_visual_icon` for a {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "trailing_visual",
        "description": "Trailing visuals appear to the right of the button text.\n\nUse:\n\n- `trailing_visual_counter` for a {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "trailing_action",
        "description": "Trailing action appears to the right of the trailing visual.\n\nUse:\n\n- `trailing_action_icon` for a {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "tooltip",
        "description": "`Tooltip` that appears on mouse hover or keyboard focus over the button. Use tooltips sparingly and as a last resort.\n**Important:** This tooltip defaults to `type: :description`. In a few scenarios, `type: :label` may be more appropriate.\nConsult the {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}} documentation for more information.",
        "parameters": [
          {
            "name": "type",
            "type": "Symbol",
            "default": "`:description`",
            "description": "One of `:description` or `:label`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/primary",
        "name": "primary",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/danger",
        "name": "danger",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/invisible",
        "name": "invisible",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/invisible_all_visuals",
        "name": "invisible_all_visuals",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/link",
        "name": "link",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/all_schemes",
        "name": "all_schemes",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/full_width",
        "name": "full_width",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/link_as_button",
        "name": "link_as_button",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/trailing_visual",
        "name": "trailing_visual",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/leading_visual",
        "name": "leading_visual",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/trailing_action",
        "name": "trailing_action",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/trailing_counter",
        "name": "trailing_counter",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button/with_tooltip",
        "name": "with_tooltip",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::ButtonGroup",
    "description": "Use `ButtonGroup` to render a series of buttons.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "ButtonGroup",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "ButtonGroup",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/button_group.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/button_group/default/",
    "parameters": [
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "DEPRECATED. One of `:danger`, `:default`, `:invisible`, `:link`, `:primary`, or `:secondary`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "buttons",
        "description": "Required list of buttons to be rendered.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Button{{/link_to_component}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/button_group/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button_group/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button_group/split_button",
        "name": "split_button",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button_group/icon_buttons",
        "name": "icon_buttons",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/button_group/all_tags",
        "name": "all_tags",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::ClipboardCopy",
    "description": "Use `ClipboardCopy` to copy element text content or input values to the clipboard.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "ClipboardCopy",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "ClipboardCopy",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/clipboard_copy.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/clipboard_copy/default/",
    "parameters": [
      {
        "name": "aria-label",
        "type": "String",
        "default": "N/A",
        "description": "String that will be read to screenreaders when the component is focused"
      },
      {
        "name": "value",
        "type": "String",
        "default": "`nil`",
        "description": "Text to copy into the users clipboard when they click the component."
      },
      {
        "name": "for",
        "type": "String",
        "default": "N/A",
        "description": "Element id from where to get the copied value."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/clipboard_copy/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/clipboard_copy/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/clipboard_copy/text",
        "name": "text",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/clipboard_copy/element",
        "name": "element",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::CloseButton",
    "description": "Use `CloseButton` to render an `×` without default button styles.\n\n[0]: https://primer.style/view-components/system-arguments#html-attributes",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "CloseButton",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "CloseButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/close_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/close_button/default/",
    "parameters": [
      {
        "name": "type",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:button` or `:submit`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/close_button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/close_button/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Counter",
    "description": "Use `Counter` to add a count to navigational elements and buttons.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Counter",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Counter",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/counter.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/counter/default/",
    "parameters": [
      {
        "name": "count",
        "type": "Integer, Float::INFINITY, nil",
        "default": "`0`",
        "description": "The number to be displayed (e.x. # of issues, pull requests)"
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "Color scheme. One of `:default`, `:primary`, or `:secondary`."
      },
      {
        "name": "limit",
        "type": "Integer, nil",
        "default": "`5_000`",
        "description": "Maximum value to display. Pass `nil` for no limit. (e.x. if `count` == 6,000 and `limit` == 5000, counter will display \"5,000+\")"
      },
      {
        "name": "hide_if_zero",
        "type": "Boolean",
        "default": "`false`",
        "description": "If true, a `hidden` attribute is added to the counter if `count` is zero."
      },
      {
        "name": "text",
        "type": "String",
        "default": "`\"\"`",
        "description": "Text to display instead of count."
      },
      {
        "name": "round",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to apply our standard rounding logic to value."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/counter/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/with_text",
        "name": "with_text",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/color_scheme_default",
        "name": "color_scheme_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/color_scheme_primary",
        "name": "color_scheme_primary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/color_scheme_secondary",
        "name": "color_scheme_secondary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_default",
        "name": "rounding_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_above_1000",
        "name": "rounding_above_1000",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_below_1000",
        "name": "rounding_below_1000",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_large_number",
        "name": "rounding_large_number",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_large_number_less_than_custom_limit",
        "name": "rounding_large_number_less_than_custom_limit",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/counter/rounding_large_number_greater_than_custom_limit",
        "name": "rounding_large_number_greater_than_custom_limit",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Details",
    "description": "Use `DetailsComponent` to reveal content after clicking a button.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Details",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Details",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/details.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/details/default/",
    "parameters": [
      {
        "name": "overlay",
        "type": "Symbol",
        "default": "`:none`",
        "description": "Dictates the type of overlay to render with. One of `:dark`, `:default`, or `:none`."
      },
      {
        "name": "reset",
        "type": "Boolean",
        "default": "`false`",
        "description": "Defaults to false. If set to true, it will remove the default caret and remove style from the summary element"
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not to disable the summary button."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "summary",
        "description": null,
        "parameters": [

        ]
      },
      {
        "name": "body",
        "description": "Use the Body slot as the main content to be shown when triggered by the Summary.",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "`:div`",
            "description": "One of `:details-dialog`, `:details-menu`, `:div`, or `:ul`."
          },
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{link_to_system_arguments_docs}}."
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "disabled",
        "description": "Returns the value of attribute disabled.",
        "parameters": [

        ]
      },
      {
        "name": "disabled?",
        "description": "Returns the value of attribute disabled.",
        "parameters": [

        ]
      }
    ],
    "previews": [
      {
        "preview_path": "primer/beta/details/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/details/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/details/custom_button",
        "name": "custom_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/details/without_button",
        "name": "without_button",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Flash",
    "description": "Use `Flash` to inform users of successful or pending actions.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Flash",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Flash",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/flash.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/flash/default/",
    "parameters": [
      {
        "name": "full",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the component should take up the full width of the screen."
      },
      {
        "name": "spacious",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to add margin to the bottom of the component."
      },
      {
        "name": "dismissible",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the component can be dismissed with an X button."
      },
      {
        "name": "icon",
        "type": "Symbol",
        "default": "`nil`",
        "description": "Name of Octicon icon to use."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger`, `:default`, `:success`, or `:warning`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "action",
        "description": "Optional action content showed on the right side of the component.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/flash/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/color_scheme_default",
        "name": "color_scheme_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/color_scheme_warning",
        "name": "color_scheme_warning",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/color_scheme_danger",
        "name": "color_scheme_danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/color_scheme_success",
        "name": "color_scheme_success",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/options_full",
        "name": "options_full",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/options_dismissible",
        "name": "options_dismissible",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/flash/options_with_icon",
        "name": "options_with_icon",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Heading",
    "description": "`Heading` should be used to communicate page organization and hierarchy.\n\n- Set tag to one of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, `:h6` based on what is appropriate for the page context.\n- Use `Heading` as the title of a section or sub section.\n- Do not use `Heading` for styling alone. For simply styling text, consider using {{#link_to_component}}Primer::Beta::Text{{/link_to_component}} with relevant {{link_to_typography_docs}}\n  such as `font_size` and `font_weight`.\n- Do not jump heading levels. For instance, do not follow a `<h1>` with an `<h3>`. Heading levels should increase by one in ascending order.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Heading",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Heading",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/heading.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/heading/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "String",
        "default": "N/A",
        "description": "One of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/heading/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/heading/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::IconButton",
    "description": "Use `IconButton` to render Icon-only buttons without the default button styles.\n\n`IconButton` will always render with a tooltip unless the tag is `:summary`.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "IconButton",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "IconButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/icon_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/icon_button/default/",
    "parameters": [
      {
        "name": "icon",
        "type": "String",
        "default": "N/A",
        "description": "Name of {{link_to_octicons}} to use."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:a`, `:button`, or `:summary`."
      },
      {
        "name": "wrapper_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "Optional keyword arguments to be passed to the wrapper `<div>` tag."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger`, `:default`, or `:invisible`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large`, `:medium`, or `:small`."
      },
      {
        "name": "disabled",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not the button is disabled. If true, this option forces `tag:` to `:button`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:button`, `:reset`, or `:submit`."
      },
      {
        "name": "aria-label",
        "type": "String",
        "default": "N/A",
        "description": "String that can be read by assistive technology. A label should be short and concise. See the accessibility section for more information."
      },
      {
        "name": "aria-description",
        "type": "String",
        "default": "N/A",
        "description": "String that can be read by assistive technology. A description can be longer as it is intended to provide more context and information. See the accessibility section for more information."
      },
      {
        "name": "show_tooltip",
        "type": "Boolean",
        "default": "`true`",
        "description": "Whether or not to show a tooltip when this button is hovered. Tooltips should only be hidden if the aria label is redundant, i.e. if the icon has a widely understood definition."
      },
      {
        "name": "tooltip_direction",
        "type": "Symbol",
        "default": "`:s`",
        "description": "One of `:e`, `:n`, `:ne`, `:nw`, `:s`, `:se`, `:sw`, or `:w`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/icon_button/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/icon_button/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/icon_button/invisible",
        "name": "invisible",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/icon_button/danger",
        "name": "danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Label",
    "description": "Use `Label` to add contextual metadata to a design.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Label",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Label",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/label.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/label/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:span`",
        "description": "One of `:a`, `:div`, `:span`, or `:summary`."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:accent`, `:attention`, `:danger`, `:default`, `:done`, `:info`, `:orange`, `:primary`, `:purple`, `:secondary`, `:severe`, `:sponsors`, `:success`, or `:warning`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:large` or `:medium`."
      },
      {
        "name": "inline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not to render this label inline."
      },
      {
        "name": "variant",
        "type": "Symbol",
        "default": "`:none`",
        "description": "One of `:inline`, `:large`, or `:none`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/label/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_default",
        "name": "color_scheme_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_primary",
        "name": "color_scheme_primary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_secondary",
        "name": "color_scheme_secondary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_accent",
        "name": "color_scheme_accent",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_success",
        "name": "color_scheme_success",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_attention",
        "name": "color_scheme_attention",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_danger",
        "name": "color_scheme_danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_severe",
        "name": "color_scheme_severe",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_done",
        "name": "color_scheme_done",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/color_scheme_sponsors",
        "name": "color_scheme_sponsors",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/size_default",
        "name": "size_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/size_large",
        "name": "size_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/inline_default",
        "name": "inline_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/label/inline_inline",
        "name": "inline_inline",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Link",
    "description": "Use `Link` for navigating from one page to another. `Link` styles anchor tags with default blue styling and hover text-decoration.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Link",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Link",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/link.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/link/default/",
    "parameters": [
      {
        "name": "href",
        "type": "String",
        "default": "`nil`",
        "description": "URL to be used for the Link. Required. If the requirements are not met an error will be raised in non production environments. In production, an empty link element will be rendered."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:default`, `:primary`, or `:secondary`."
      },
      {
        "name": "muted",
        "type": "Boolean",
        "default": "`false`",
        "description": "Uses light gray for Link color, and blue on hover."
      },
      {
        "name": "underline",
        "type": "Boolean",
        "default": "`true`",
        "description": "Whether or not to underline the link."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "tooltip",
        "description": "`Tooltip` that appears on mouse hover or keyboard focus over the link. Use tooltips sparingly and as a last resort.\n**Important:** This tooltip defaults to `type: :description`. In a few scenarios, `type: :label` may be more appropriate.\nThe tooltip will appear adjacent to the anchor element. Both the tooltip and the anchor will be nested\nunder a positioning wrapper.\nConsult the {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}} documentation for more information.",
        "parameters": [
          {
            "name": "type",
            "type": "Symbol",
            "default": "`:description`",
            "description": "One of `:description` or `:label`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/link/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/tooltip",
        "name": "tooltip",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/color_scheme_default",
        "name": "color_scheme_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/color_scheme_primary",
        "name": "color_scheme_primary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/color_scheme_primary_muted",
        "name": "color_scheme_primary_muted",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/color_scheme_secondary",
        "name": "color_scheme_secondary",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/link/color_scheme_secondary_muted",
        "name": "color_scheme_secondary_muted",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Markdown",
    "description": "Use `Markdown` to wrap markdown content.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Markdown",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Markdown",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/markdown.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/markdown/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:div`",
        "description": "One of `:article`, `:div`, or `:td`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Octicon",
    "description": "`Octicon` renders an {{link_to_octicons}} with {{link_to_system_arguments_docs}}.\n`Octicon` can also be rendered with the `primer_octicon` helper, which accepts the same arguments.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Octicon",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Octicon",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/octicon.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/octicon/default/",
    "parameters": [
      {
        "name": "icon_name",
        "type": "Symbol, String",
        "default": "`nil`",
        "description": "Name of {{link_to_octicons}} to use."
      },
      {
        "name": "icon",
        "type": "Symbol, String",
        "default": "`nil`",
        "description": "Name of {{link_to_octicons}} to use."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:small`",
        "description": "One of `:xsmall` (`12`), `:small` (`16`), or `:medium` (`24`)."
      },
      {
        "name": "use_symbol",
        "type": "Boolean",
        "default": "`false`",
        "description": "EXPERIMENTAL (May change or be removed) - Set to true when using with {{#link_to_component}}Primer::Alpha::OcticonSymbols{{/link_to_component}}."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/octicon/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/octicon/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Popover",
    "description": "Use `Popover` to bring attention to specific user interface elements, typically to suggest an action or to guide users through a new experience.\n\nBy default, the popover renders with absolute positioning, meaning it should usually be wrapped in an element with a relative position in order to be positioned properly. To render the popover with relative positioning, use the relative property.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Popover",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Popover",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/popover.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/popover/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "heading",
        "description": "The heading",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "`:h4`",
            "description": "One of `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "body",
        "description": "The body",
        "parameters": [
          {
            "name": "caret",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:bottom`, `:bottom_left`, `:bottom_right`, `:left`, `:left_bottom`, `:left_top`, `:right`, `:right_bottom`, `:right_top`, `:top`, `:top_left`, or `:top_right`."
          },
          {
            "name": "large",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether to use the large version of the component."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/popover/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/large",
        "name": "large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/bottom_right",
        "name": "bottom_right",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/top_right",
        "name": "top_right",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/bottom_left",
        "name": "bottom_left",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/popover/top_left",
        "name": "top_left",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::ProgressBar",
    "description": "Use `ProgressBar` to visualize task completion.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "ProgressBar",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "ProgressBar",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/progress_bar.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/progress_bar/default/",
    "parameters": [
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:default`, `:large`, or `:small`. Increases height."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "items",
        "description": "Use the Item slot to add an item to the progress bar",
        "parameters": [
          {
            "name": "percentage",
            "type": "Integer",
            "default": "N/A",
            "description": "The percent complete"
          },
          {
            "name": "bg",
            "type": "Symbol",
            "default": "N/A",
            "description": "The background color"
          },
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{link_to_system_arguments_docs}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/progress_bar/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/progress_bar/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/progress_bar/size_small",
        "name": "size_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/progress_bar/size_default",
        "name": "size_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/progress_bar/size_large",
        "name": "size_large",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::RelativeTime",
    "description": "Formats a timestamp as a localized string or as relative text that auto-updates in the user's browser.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "RelativeTime",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "RelativeTime",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/relative_time.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/relative_time/default/",
    "parameters": [
      {
        "name": "datetime",
        "type": "Time",
        "default": "N/A",
        "description": "The time to be formatted."
      },
      {
        "name": "tense",
        "type": "Symbol",
        "default": "`:auto`",
        "description": "Which tense to use. One of `:auto`, `:future`, or `:past`."
      },
      {
        "name": "prefix",
        "type": "sring",
        "default": "`nil`",
        "description": "What to prefix the relative ime display with."
      },
      {
        "name": "second",
        "type": "Symbol",
        "default": "`SECOND_DEFAULT`",
        "description": "What format seconds should take. One of `nil`, `:numeric`, or `:two_digit`."
      },
      {
        "name": "minute",
        "type": "Symbol",
        "default": "`MINUTE_DEFAULT`",
        "description": "What format minues should take. One of `nil`, `:numeric`, or `:two_digit`."
      },
      {
        "name": "hour",
        "type": "Symbol",
        "default": "`HOUR_DEFAULT`",
        "description": "What format hours should take. One of `nil`, `:numeric`, or `:two_digit`."
      },
      {
        "name": "weekday",
        "type": "Symbol",
        "default": "`WEEKDAY_DEFAULT`",
        "description": "What format weekdays should take. One of `nil`, `:long`, `:narrow`, or `:short`."
      },
      {
        "name": "day",
        "type": "Symbol",
        "default": "`DAY_DEFAULT`",
        "description": "What format days should take. One of `nil`, `:numeric`, or `:two_digit`."
      },
      {
        "name": "month",
        "type": "Symbol",
        "default": "`MONTH_DEFAULT`",
        "description": "What format months should take. One of `nil`, `:long`, `:narrow`, `:numeric`, `:short`, or `:two_digit`."
      },
      {
        "name": "year",
        "type": "Symbol",
        "default": "`YEAR_DEFAULT`",
        "description": "What format years should take. One of `nil`, `:numeric`, or `:two_digit`."
      },
      {
        "name": "time_zone_name",
        "type": "Symbol",
        "default": "`TIMEZONENAME_DEFAULT`",
        "description": "What format the time zone should take. One of `nil`, `:long`, `:long_generic`, `:long_offset`, `:short`, `:short_generic`, or `:short_offset`."
      },
      {
        "name": "threshold",
        "type": "string",
        "default": "`nil`",
        "description": "The threshold, in ISO-8601 'durations' format, at which relative time displays become absolute."
      },
      {
        "name": "precision",
        "type": "Symbol",
        "default": "`PRECISION_DEFAULT`",
        "description": "The precision elapsed time should display. One of `nil`, `:day`, `:hour`, `:minute`, `:month`, `:second`, or `:year`."
      },
      {
        "name": "format",
        "type": "Symbol",
        "default": "`nil`",
        "description": "The format the display should take. One of `:auto`, `:elapsed`, or `:micro`."
      },
      {
        "name": "format_style",
        "type": "Symbol",
        "default": "`nil`",
        "description": "The format the display should take. One of `nil`, `:long`, `:narrow`, or `:short`."
      },
      {
        "name": "lang",
        "type": "string",
        "default": "`nil`",
        "description": "The language to use."
      },
      {
        "name": "title",
        "type": "string",
        "default": "`nil`",
        "description": "Provide a custom title to the element."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/relative_time/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/relative_time/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/relative_time/micro_format",
        "name": "micro_format",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/relative_time/recent_time",
        "name": "recent_time",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/relative_time/count_down_timer",
        "name": "count_down_timer",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Spinner",
    "description": "Use `Spinner` to let users know that content is being loaded.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Spinner",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Spinner",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/spinner.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/spinner/default/",
    "parameters": [
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `[:large, 64]`, `[:medium, 32]`, or `[:small, 16]`."
      },
      {
        "name": "style",
        "type": "String",
        "default": "`box-sizing: content-box; color: var(--color-icon-primary);`",
        "description": "Custom element styles."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/spinner/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/spinner/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::State",
    "description": "Use `State` for rendering the status of an item.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "State",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "State",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/state.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/state/default/",
    "parameters": [
      {
        "name": "title",
        "type": "String",
        "default": "N/A",
        "description": "`title` HTML attribute."
      },
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "Background color. One of `:closed`, `:default`, `:green`, `:merged`, `:open`, `:purple`, or `:red`."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:span`",
        "description": "HTML tag for element. One of `:div` or `:span`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:default` or `:small`."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/state/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/states_default",
        "name": "states_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/states_open",
        "name": "states_open",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/states_closed",
        "name": "states_closed",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/states_merged",
        "name": "states_merged",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/sizes_default",
        "name": "sizes_default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/state/sizes_small",
        "name": "sizes_small",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Subhead",
    "description": "Use `Subhead` as the start of a section. The `:heading` slot will render an `<h2>` font-sized text.\n\n- Optionally set the `:description` slot to render a short description and the `:actions` slot for a related action.\n- Use a succinct, one-line description for the `:description` slot. For longer descriptions, omit the description slot and render a paragraph below the `Subhead`.\n- Use the actions slot to render a related action to the right of the heading. Use {{#link_to_component}}Primer::ButtonComponent{{/link_to_component}} or {{#link_to_component}}Primer::Beta::Link{{/link_to_component}}.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Subhead",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Subhead",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/subhead.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/subhead/default/",
    "parameters": [
      {
        "name": "spacious",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to add spacing to the Subhead."
      },
      {
        "name": "hide_border",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to hide the border under the heading."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "heading",
        "description": "The heading",
        "parameters": [
          {
            "name": "tag",
            "type": "Symbol",
            "default": "N/A",
            "description": "One of `:div`, `:h1`, `:h2`, `:h3`, `:h4`, `:h5`, or `:h6`."
          },
          {
            "name": "danger",
            "type": "Boolean",
            "default": "N/A",
            "description": "Whether to style the heading as dangerous."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "actions",
        "description": "Actions",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "description",
        "description": "The description",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/subhead/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/danger",
        "name": "danger",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/actions",
        "name": "actions",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/spacing_default",
        "name": "spacing_default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/spacing_spacious",
        "name": "spacing_spacious",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/subhead/spacing_dangerous",
        "name": "spacing_dangerous",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Text",
    "description": "`Text` is a wrapper component that will apply typography styles to the text inside.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Text",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Text",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/text.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/text/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:span`",
        "description": ""
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/text/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/text/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::TimelineItem",
    "description": "Use `TimelineItem` to display items on a vertical timeline, connected by badge elements.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "TimelineItem",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "TimelineItem",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/timeline_item.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/timeline_item/default/",
    "parameters": [
      {
        "name": "condensed",
        "type": "Boolean",
        "default": "`false`",
        "description": "Reduce the vertical padding and remove the background from the badge item. Most commonly used in commits."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "avatar",
        "description": "Avatar to be rendered to the left of the Badge.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Avatar{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "badge",
        "description": "Badge that will be connected to other TimelineItems.",
        "parameters": [
          {
            "name": "icon",
            "type": "String",
            "default": "N/A",
            "description": "Name of {{link_to_octicons}} to use."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "body",
        "description": "Body to be rendered to the left of the Badge.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/timeline_item/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/timeline_item/default",
        "name": "default",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Beta::TimelineItem::Badge",
        "description": "This component is part of `Primer::Beta::TimelineItem` and should not be\nused as a standalone component.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "TimelineItem::Badge",
        "status": "beta",
        "a11y_reviewed": false,
        "short_name": "TimelineItemBadge",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/timeline_item/badge.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/timeline_item/badge/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::Beta::Truncate",
    "description": "Use `Truncate` to shorten overflowing text with an ellipsis.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Truncate",
    "status": "beta",
    "a11y_reviewed": false,
    "short_name": "Truncate",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/truncate.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/truncate/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "items",
        "description": "Text slot used for the truncated text.",
        "parameters": [
          {
            "name": "priority",
            "type": "Boolean",
            "default": "N/A",
            "description": "if true, the text will be given priority"
          },
          {
            "name": "expandable",
            "type": "Boolean",
            "default": "N/A",
            "description": "if true, the text will expand on hover or focus"
          },
          {
            "name": "max_width",
            "type": "Integer",
            "default": "N/A",
            "description": "if provided, the text will be truncated at a maximum width"
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/beta/truncate/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/truncate/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/truncate/multiple_items",
        "name": "multiple_items",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/truncate/advanced_multiple_items",
        "name": "advanced_multiple_items",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/beta/truncate/max_widths",
        "name": "max_widths",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [
      {
        "fully_qualified_name": "Primer::Beta::Truncate::TruncateText",
        "description": "This component is part of `Primer::Beta::Truncate` and should not be\nused as a standalone component.",
        "is_form_component": false,
        "is_published": true,
        "requires_js": false,
        "component": "Truncate::TruncateText",
        "status": "alpha",
        "a11y_reviewed": false,
        "short_name": "TruncateTruncateText",
        "source": "https://github.com/primer/view_components/tree/main/app/components/primer/beta/truncate/truncate_text.rb",
        "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/beta/truncate/truncate_text/default/",
        "parameters": [

        ],
        "slots": [

        ],
        "methods": [

        ],
        "previews": [

        ],
        "subcomponents": [

        ]
      }
    ]
  },
  {
    "fully_qualified_name": "Primer::BlankslateComponent",
    "description": "Use `Blankslate` when there is a lack of content within a page or section. Use as placeholder to tell users why something isn't there.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Blankslate",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "Blankslate",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/blankslate_component.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/blankslate/default/",
    "parameters": [
      {
        "name": "title",
        "type": "String",
        "default": "`\"\"`",
        "description": "Text that appears in a larger bold font."
      },
      {
        "name": "title_tag",
        "type": "Symbol",
        "default": "`:h3`",
        "description": "HTML tag to use for title."
      },
      {
        "name": "icon",
        "type": "Symbol",
        "default": "`\"\"`",
        "description": "Octicon icon to use at top of component."
      },
      {
        "name": "icon_size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:xsmall` (`12`), `:small` (`16`), or `:medium` (`24`)."
      },
      {
        "name": "image_src",
        "type": "String",
        "default": "`\"\"`",
        "description": "Image to display."
      },
      {
        "name": "image_alt",
        "type": "String",
        "default": "`\" \"`",
        "description": "Alt text for image."
      },
      {
        "name": "description",
        "type": "String",
        "default": "`\"\"`",
        "description": "Text that appears below the title. Typically a whole sentence."
      },
      {
        "name": "button_text",
        "type": "String",
        "default": "`\"\"`",
        "description": "The text of the button."
      },
      {
        "name": "button_url",
        "type": "String",
        "default": "`\"\"`",
        "description": "The URL where the user will be taken after clicking the button."
      },
      {
        "name": "button_classes",
        "type": "String",
        "default": "`\"btn-primary my-3\"`",
        "description": "Classes to apply to action button"
      },
      {
        "name": "link_text",
        "type": "String",
        "default": "`\"\"`",
        "description": "The text of the link."
      },
      {
        "name": "link_url",
        "type": "String",
        "default": "`\"\"`",
        "description": "The URL where the user will be taken after clicking the link."
      },
      {
        "name": "narrow",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds a maximum width."
      },
      {
        "name": "large",
        "type": "Boolean",
        "default": "`false`",
        "description": "Increases the font size."
      },
      {
        "name": "spacious",
        "type": "Boolean",
        "default": "`false`",
        "description": "Adds extra padding."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "spinner",
        "description": "Optional Spinner.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Spinner{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Box",
    "description": "`Box` is a basic wrapper component for most layout related needs.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Box",
    "status": "stable",
    "a11y_reviewed": false,
    "short_name": "Box",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/box.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/box/default/",
    "parameters": [
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [
      {
        "preview_path": "primer/box/playground",
        "name": "playground",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/box/default",
        "name": "default",
        "snapshot": "false",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/box/border",
        "name": "border",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      },
      {
        "preview_path": "primer/box/border_bottom",
        "name": "border_bottom",
        "snapshot": "true",
        "skip_rules": {
          "wont_fix": [
            "region"
          ],
          "will_fix": [
            "color-contrast"
          ]
        }
      }
    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::ButtonComponent",
    "description": "Use `Button` for actions (e.g. in forms). Use links for destinations, or moving from one page to another.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "Button",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "Button",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/button_component.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/button/default/",
    "parameters": [
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger`, `:default`, `:invisible`, `:link`, `:outline`, or `:primary`."
      },
      {
        "name": "variant",
        "type": "Symbol",
        "default": "`nil`",
        "description": "DEPRECATED. One of `:medium` or `:small`."
      },
      {
        "name": "size",
        "type": "Symbol",
        "default": "`:medium`",
        "description": "One of `:medium` or `:small`."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:a`, `:button`, or `:summary`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "`:button`",
        "description": "One of `:button`, `:reset`, or `:submit`."
      },
      {
        "name": "group_item",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether button is part of a ButtonGroup."
      },
      {
        "name": "block",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether button is full-width with `display: block`."
      },
      {
        "name": "dropdown",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether or not to render a dropdown caret."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "leading_visual",
        "description": "Leading visuals appear to the left of the button text.\n\nUse:\n\n- `leading_visual_icon` for a {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "trailing_visual",
        "description": "Trailing visuals appear to the right of the button text.\n\nUse:\n\n- `trailing_visual_counter` for a {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "tooltip",
        "description": "`Tooltip` that appears on mouse hover or keyboard focus over the button. Use tooltips sparingly and as a last resort.\n**Important:** This tooltip defaults to `type: :description`. In a few scenarios, `type: :label` may be more appropriate.\nConsult the {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}} documentation for more information.",
        "parameters": [
          {
            "name": "type",
            "type": "Symbol",
            "default": "`:description`",
            "description": "One of `:description` or `:label`."
          },
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "Same arguments as {{#link_to_component}}Primer::Alpha::Tooltip{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [
      {
        "name": "icon",
        "description": "remove alias when all buttons are migrated to new slot names",
        "parameters": [

        ]
      },
      {
        "name": "counter",
        "description": "remove alias when all buttons are migrated to new slot names",
        "parameters": [

        ]
      }
    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::ConditionalWrapper",
    "description": "Conditionally renders a `Primer::BaseComponent` around the given content. If the given condition\nis true, a `Primer::BaseComponent` will render around the content. If the condition is false, only\nthe content is rendered.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "ConditionalWrapper",
    "status": "alpha",
    "a11y_reviewed": false,
    "short_name": "ConditionalWrapper",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/conditional_wrapper.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/conditional_wrapper/default/",
    "parameters": [

    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Content",
    "description": "Use `Content` as a helper to render content passed to a slot without adding any tags.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Content",
    "status": "stable",
    "a11y_reviewed": false,
    "short_name": "Content",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/content.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/content/default/",
    "parameters": [

    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::IconButton",
    "description": "Use `IconButton` to render Icon-only buttons without the default button styles.\n\n`IconButton` will always render with a tooltip unless the tag is `:summary`.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": true,
    "component": "IconButton",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "IconButton",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/icon_button.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/icon_button/default/",
    "parameters": [
      {
        "name": "scheme",
        "type": "Symbol",
        "default": "`:default`",
        "description": "One of `:danger` or `:default`."
      },
      {
        "name": "icon",
        "type": "String",
        "default": "N/A",
        "description": "Name of {{link_to_octicons}} to use."
      },
      {
        "name": "tag",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:a`, `:button`, or `:summary`."
      },
      {
        "name": "type",
        "type": "Symbol",
        "default": "N/A",
        "description": "One of `:button`, `:reset`, or `:submit`."
      },
      {
        "name": "aria-label",
        "type": "String",
        "default": "N/A",
        "description": "String that can be read by assistive technology. A label should be short and concise. See the accessibility section for more information."
      },
      {
        "name": "aria-description",
        "type": "String",
        "default": "N/A",
        "description": "String that can be read by assistive technology. A description can be longer as it is intended to provide more context and information. See the accessibility section for more information."
      },
      {
        "name": "tooltip_direction",
        "type": "Symbol",
        "default": "`:s`",
        "description": "One of `:e`, `:n`, `:ne`, `:nw`, `:s`, `:se`, `:sw`, or `:w`."
      },
      {
        "name": "box",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the button is in a {{#link_to_component}}Primer::Beta::BorderBox{{/link_to_component}}. If `true`, the button will have the `Box-btn-octicon` class."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::LayoutComponent",
    "description": "Use `Layout` to build a main/sidebar layout.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Layout",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "Layout",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/layout_component.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/layout/default/",
    "parameters": [
      {
        "name": "responsive",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether to collapse layout to a single column at smaller widths."
      },
      {
        "name": "side",
        "type": "Symbol",
        "default": "`:right`",
        "description": "Which side to display the sidebar on. One of `:left` or `:right`."
      },
      {
        "name": "sidebar_col",
        "type": "Integer",
        "default": "`3`",
        "description": "Sidebar column width."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "main",
        "description": "The main content",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "sidebar",
        "description": "The sidebar content",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Navigation::TabComponent",
    "description": "nodoc",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Navigation::Tab",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "NavigationTab",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/navigation/tab_component.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/navigation/tab/default/",
    "parameters": [
      {
        "name": "list",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab is an item in a `<ul>` list."
      },
      {
        "name": "selected",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab is selected or not."
      },
      {
        "name": "with_panel",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the Tab has an associated panel."
      },
      {
        "name": "panel_id",
        "type": "String",
        "default": "`\"\"`",
        "description": "Only applies if `with_panel` is `true`. Unique id of panel."
      },
      {
        "name": "icon_classes",
        "type": "Boolean",
        "default": "`\"\"`",
        "description": "Classes that must always be applied to icons."
      },
      {
        "name": "wrapper_arguments",
        "type": "Hash",
        "default": "`{}`",
        "description": "{{link_to_system_arguments_docs}} to be used in the `<li>` wrapper when the tab is an item in a list."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [
      {
        "name": "panel",
        "description": "Panel controlled by the Tab. This will not render anything in the tab itself.\nIt will provide a accessor for the Tab's parent to call and render the panel\ncontent in the appropriate place.\nRefer to `UnderlineNav` and `TabNav` implementations for examples.",
        "parameters": [
          {
            "name": "system_arguments",
            "type": "Hash",
            "default": "N/A",
            "description": "{{link_to_system_arguments_docs}}"
          }
        ]
      },
      {
        "name": "icon",
        "description": "Icon to be rendered in the Tab left.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Octicon{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "text",
        "description": "The Tab's text.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Text{{/link_to_component}}."
          }
        ]
      },
      {
        "name": "counter",
        "description": "Counter to be rendered in the Tab right.",
        "parameters": [
          {
            "name": "kwargs",
            "type": "Hash",
            "default": "N/A",
            "description": "The same arguments as {{#link_to_component}}Primer::Beta::Counter{{/link_to_component}}."
          }
        ]
      }
    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Tooltip",
    "description": "`Tooltip` is a wrapper component that will apply a tooltip to the provided content.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Tooltip",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "Tooltip",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/tooltip.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/tooltip/default/",
    "parameters": [
      {
        "name": "label",
        "type": "String",
        "default": "N/A",
        "description": "the text to appear in the tooltip"
      },
      {
        "name": "direction",
        "type": "String",
        "default": "`:n`",
        "description": "Direction of the tooltip. One of `:e`, `:n`, `:ne`, `:nw`, `:s`, `:se`, `:sw`, or `:w`."
      },
      {
        "name": "align",
        "type": "String",
        "default": "`:default`",
        "description": "Align tooltips to the left or right of an element, combined with a `direction` to specify north or south. One of `:default`, `:left_1`, `:left_2`, `:right_1`, or `:right_2`."
      },
      {
        "name": "multiline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Use this when you have long content"
      },
      {
        "name": "no_delay",
        "type": "Boolean",
        "default": "`false`",
        "description": "By default the tooltips have a slight delay before appearing. Set true to override this"
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "fully_qualified_name": "Primer::Truncate",
    "description": "Use `Truncate` to shorten overflowing text with an ellipsis.",
    "is_form_component": false,
    "is_published": true,
    "requires_js": false,
    "component": "Truncate",
    "status": "deprecated",
    "a11y_reviewed": false,
    "short_name": "Truncate",
    "source": "https://github.com/primer/view_components/tree/main/app/components/primer/truncate.rb",
    "lookbook": "https://primer.style/view-components/lookbook/inspect/primer/truncate/default/",
    "parameters": [
      {
        "name": "tag",
        "type": "Symbol",
        "default": "`:div`",
        "description": "One of `:div`, `:p`, `:span`, or `:strong`."
      },
      {
        "name": "inline",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the element is inline (or inline-block)."
      },
      {
        "name": "expandable",
        "type": "Boolean",
        "default": "`false`",
        "description": "Whether the entire string should be revealed on hover. Can only be used in conjunction with `inline`."
      },
      {
        "name": "max_width",
        "type": "Integer",
        "default": "`nil`",
        "description": "Sets the max-width of the text."
      },
      {
        "name": "system_arguments",
        "type": "Hash",
        "default": "N/A",
        "description": "{{link_to_system_arguments_docs}}"
      }
    ],
    "slots": [

    ],
    "methods": [

    ],
    "previews": [

    ],
    "subcomponents": [

    ]
  },
  {
    "component": "BaseComponent",
    "fully_qualified_name": "Primer::BaseComponent",
    "description_md": "All Primer ViewComponents accept a standard set of options called system arguments, mimicking the [styled-system API](https://styled-system.com/table) used by [Primer React](https://primer.style/components/system-props).\n\nUnder the hood, system arguments are [mapped](https://github.com/primer/view_components/blob/main/lib/primer/classify.rb) to Primer CSS classes, with any remaining options passed to Rails' [`content_tag`](https://api.rubyonrails.org/classes/ActionView/Helpers/TagHelper.html#method-i-content_tag).\n\n## Responsive values\n\nTo apply different values across responsive breakpoints, pass an array with up to five values in the order `[default, small, medium, large, xlarge]`. To skip a breakpoint, pass `nil`.\n\nFor example:\n\n```erb\n<%= render Primer::Beta::Heading.new(mt: [0, nil, nil, 4, 2]) do %>\n  Hello world\n<% end %>\n```\n\nRenders:\n\n```html\n<h1 class=\"mt-0 mt-lg-4 mt-xl-2\">Hello world</h1>\n```",
    "args_md": "## HTML attributes\n\nSystem arguments include most HTML attributes. For example:\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `aria` | `Hash` | Aria attributes: `aria: { label: \"foo\" }` renders `aria-label='foo'`. |\n| `data` | `Hash` | Data attributes: `data: { foo: :bar }` renders `data-foo='bar'`. |\n| `height` | `Integer` | Height. |\n| `hidden` | `Boolean` | Whether to assign the `hidden` attribute. |\n| `style` | `String` | Inline styles. |\n| `title` | `String` | The `title` attribute. |\n| `width` | `Integer` | Width. |\n\n## Animation\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `animation` | Symbol | One of `:fade_down`, `:fade_in`, `:fade_out`, `:fade_up`, `:grow_x`, `:hover_grow`, `:pulse`, `:pulse_in`, `:rotate`, `:scale_in`, or `:shrink_x`. |\n\n## Border\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `border_bottom` | Integer | Set to `0` to remove the bottom border. |\n| `border_left` | Integer | Set to `0` to remove the left border. |\n| `border_radius` | Integer | One of `0`, `1`, `2`, or `3`. |\n| `border_right` | Integer | Set to `0` to remove the right border. |\n| `border_top` | Integer | Set to `0` to remove the top border. |\n| `border` | Symbol | One of `:bottom`, `:left`, `:right`, `:top`, `:x`, `:y`, or `true`. |\n| `box_shadow` | Boolean, Symbol | Box shadow. One of `:extra_large`, `:large`, `:medium`, `:none`, or `true`. |\n\n## Color\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `bg` | Symbol | Background color. One of `:accent`, `:accent_emphasis`, `:attention`, `:attention_emphasis`, `:closed`, `:closed_emphasis`, `:danger`, `:danger_emphasis`, `:default`, `:done`, `:done_emphasis`, `:emphasis`, `:inset`, `:open`, `:open_emphasis`, `:overlay`, `:severe`, `:severe_emphasis`, `:sponsors`, `:sponsors_emphasis`, `:subtle`, `:success`, `:success_emphasis`, or `:transparent`. |\n| `border_color` | Symbol | Border color. One of `:accent`, `:accent_emphasis`, `:attention`, `:attention_emphasis`, `:closed`, `:closed_emphasis`, `:danger`, `:danger_emphasis`, `:default`, `:done`, `:done_emphasis`, `:muted`, `:open`, `:open_emphasis`, `:severe`, `:severe_emphasis`, `:sponsors`, `:sponsors_emphasis`, `:subtle`, `:success`, or `:success_emphasis`. |\n| `color` | Symbol | Text color. One of `:accent`, `:attention`, `:closed`, `:danger`, `:default`, `:done`, `:inherit`, `:muted`, `:on_emphasis`, `:open`, `:severe`, `:sponsors`, `:subtle`, or `:success`. |\n\n## Flex\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `align_items` | Symbol | One of `:baseline`, `:center`, `:flex_end`, `:flex_start`, or `:stretch`. |\n| `align_self` | Symbol | One of `:auto`, `:baseline`, `:center`, `:end`, `:start`, or `:stretch`. |\n| `direction` | Symbol | One of `:column`, `:column_reverse`, `:row`, or `:row_reverse`. |\n| `flex` | Integer, Symbol | One of `1` or `:auto`. |\n| `flex_grow` | Integer | To enable, set to `0`. |\n| `flex_shrink` | Integer | To enable, set to `0`. |\n| `flex_wrap` | Symbol | One of `:nowrap`, `:reverse`, or `:wrap`. |\n| `justify_content` | Symbol | One of `:center`, `:flex_end`, `:flex_start`, `:space_around`, or `:space_between`. |\n\n## Grid\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `clearfix` | Boolean | Whether to assign the `clearfix` class. |\n| `col` | Integer | Number of columns. One of `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `container` | Symbol | Size of the container. One of `:lg`, `:md`, `:sm`, or `:xl`. |\n\n## Layout\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `display` | Symbol | One of `:block`, `:flex`, `:inline`, `:inline_block`, `:inline_flex`, `:none`, `:table`, or `:table_cell`. |\n| `w` | Symbol | One of `:auto`, `:fit`, or `:full`. |\n| `h` | Symbol | One of `:fit` or `:full`. |\n| `hide` | Symbol | Hide the element at a specific breakpoint. One of `:lg`, `:md`, `:sm`, `:whenNarrow`, `:whenRegular`, `:whenWide`, or `:xl`. |\n| `visibility` | Symbol | Visibility. One of `:hidden` or `:visible`. |\n| `vertical_align` | Symbol | One of `:baseline`, `:bottom`, `:middle`, `:text_bottom`, `:text_top`, or `:top`. |\n\n## Position\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `bottom` | Boolean | If `false`, sets `bottom: 0`. |\n| `float` | Symbol | One of `:left`, `:none`, or `:right`. |\n| `left` | Boolean | If `false`, sets `left: 0`. |\n| `position` | Symbol | One of `:absolute`, `:fixed`, `:relative`, `:static`, or `:sticky`. |\n| `right` | Boolean | If `false`, sets `right: 0`. |\n| `top` | Boolean | If `false`, sets `top: 0`. |\n\n## Spacing\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `m` | Integer | Margin. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, or `:auto`. |\n| `mb` | Integer | Margin bottom. One of `-12`, `-11`, `-10`, `-9`, `-8`, `-7`, `-6`, `-5`, `-4`, `-3`, `-2`, `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, or `:auto`. |\n| `ml` | Integer | Margin left. One of `-6`, `-5`, `-4`, `-3`, `-2`, `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, or `:auto`. |\n| `mr` | Integer | Margin right. One of `-6`, `-5`, `-4`, `-3`, `-2`, `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, or `:auto`. |\n| `mt` | Integer | Margin top. One of `-12`, `-11`, `-10`, `-9`, `-8`, `-7`, `-6`, `-5`, `-4`, `-3`, `-2`, `-1`, `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, `12`, or `:auto`. |\n| `mx` | Integer | Horizontal margins. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, or `:auto`. |\n| `my` | Integer | Vertical margins. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `p` | Integer | Padding. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, or `:responsive`. |\n| `pb` | Integer | Padding bottom. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `pl` | Integer | Padding left. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `pr` | Integer | Padding right. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `pt` | Integer | Padding left. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n| `px` | Integer | Horizontal padding. One of `0`, `1`, `2`, `3`, `4`, `5`, or `6`. |\n| `py` | Integer | Vertical padding. One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `7`, `8`, `9`, `10`, `11`, or `12`. |\n\n## Typography\n\n| Name | Type | Description |\n| :- | :- | :- |\n| `font_family` | Symbol | Font family. One of `:mono`. |\n| `font_size` | String, Integer, Symbol | One of `0`, `1`, `2`, `3`, `4`, `5`, `6`, `00`, `:normal`, or `:small`. |\n| `font_style` | Symbol | Font style. One of `:italic`. |\n| `font_weight` | Symbol | Font weight. One of `:bold`, `:emphasized`, `:light`, or `:normal`. |\n| `text_align` | Symbol | Text alignment. One of `:center`, `:left`, or `:right`. |\n| `text_transform` | Symbol | Text transformation. One of `:uppercase`. |\n| `underline` | Boolean | Whether text should be underlined. |\n| `word_break` | Symbol | Whether to break words on line breaks. One of `:break_all` or `:break_word`. |\n\n## Other\n\n| Name | Type | Description |\n| :- | :- | :- |\n| classes | String | CSS class name value to be concatenated with generated Primer CSS classes. |\n| test_selector | String | Adds `data-test-selector='given value'` in non-Production environments for testing purposes. |"
  }
]
